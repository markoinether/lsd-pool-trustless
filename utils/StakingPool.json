{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "keyGenerator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "depositAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "withdrawal",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ssv_contract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ssv_token",
          "type": "address"
        },
        {
          "internalType": "uint32[4]",
          "name": "ids",
          "type": "uint32[4]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "valueSent",
          "type": "uint256"
        }
      ],
      "name": "StakingPool__CantStakeZeroAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "whitelistedAddress",
          "type": "address"
        }
      ],
      "name": "StakingPool__OnlyWhitelistAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "pubkey",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "sharesPublicKeys",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "KeySharesDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32[4]",
          "name": "newOperators",
          "type": "uint32[4]"
        }
      ],
      "name": "OperatorIDsChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "pubkey",
          "type": "bytes"
        }
      ],
      "name": "PubKeyDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "SharePriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserStaked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "SSV_CONTRACT_ADDR",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SSV_TOKEN_ADDR",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VALIDATOR_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Validators",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WITHDRAWAL_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WhitelistKeyGenerator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_pubkey",
          "type": "bytes"
        },
        {
          "internalType": "uint64[]",
          "name": "_operatorIds",
          "type": "uint64[]"
        },
        {
          "internalType": "bytes",
          "name": "_shares",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "validatorCount",
              "type": "uint32"
            },
            {
              "internalType": "uint64",
              "name": "networkFeeIndex",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "index",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            }
          ],
          "internalType": "struct ISSVNetworkCore.Cluster",
          "name": "_cluster",
          "type": "tuple"
        }
      ],
      "name": "depositShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_pubkey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_withdrawal_credentials",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_deposit_data_root",
          "type": "bytes32"
        }
      ],
      "name": "depositValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBeaconRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExecutionRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOperators",
      "outputs": [
        {
          "internalType": "uint32[4]",
          "name": "",
          "type": "uint32[4]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getShareprice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidators",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvETH",
      "outputs": [
        {
          "internalType": "contract SSVETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newBeaconRewards",
          "type": "uint256"
        }
      ],
      "name": "updateBeaconRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32[4]",
          "name": "_newOperators",
          "type": "uint32[4]"
        }
      ],
      "name": "updateOperators",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/SSVETH.sol",
    "13": "contracts/StakingPool.sol",
    "14": "interfaces/IDepositContract.sol",
    "15": "interfaces/mocks/ISSVNetwork.sol",
    "2": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "3": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
    "4": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
    "5": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "6": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "7": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/StakingPool.sol",
    "exportedSymbols": {
      "AccessControl": [
        1536
      ],
      "Context": [
        1220
      ],
      "ERC165": [
        2505
      ],
      "ERC20": [
        2123
      ],
      "IAccessControl": [
        2306
      ],
      "IDepositContract": [
        831
      ],
      "IERC165": [
        3407
      ],
      "IERC20": [
        736
      ],
      "IERC20Metadata": [
        2530
      ],
      "ISSVNetwork": [
        1198
      ],
      "ISSVNetworkCore": [
        2233
      ],
      "Math": [
        3395
      ],
      "Ownable": [
        604
      ],
      "ReentrancyGuard": [
        658
      ],
      "SSVETH": [
        791
      ],
      "StakingPool": [
        491
      ],
      "StakingPool__CantStakeZeroAmount": [
        12
      ],
      "StakingPool__OnlyWhitelistAddress": [
        18
      ],
      "Strings": [
        2481
      ]
    },
    "id": 492,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:13"
      },
      {
        "absolutePath": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 492,
        "sourceUnit": 659,
        "src": "56:62:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 492,
        "sourceUnit": 737,
        "src": "119:56:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rohit/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 492,
        "sourceUnit": 605,
        "src": "176:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IDepositContract.sol",
        "file": "../interfaces/IDepositContract.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 492,
        "sourceUnit": 832,
        "src": "229:44:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/mocks/ISSVNetwork.sol",
        "file": "../interfaces/mocks/ISSVNetwork.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 492,
        "sourceUnit": 1199,
        "src": "274:45:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/SSVETH.sol",
        "file": "./SSVETH.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 492,
        "sourceUnit": 792,
        "src": "320:22:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "344:332:13",
          "text": "this contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals.\n By using custom errors instead, we don't need to use up storage space on the `require`'s revert string messages.\n This also allows developers and users to see customizable output values when the custom error is invoked "
        },
        "errorSelector": "9ed431ad",
        "id": 12,
        "name": "StakingPool__CantStakeZeroAmount",
        "nameLocation": "683:32:13",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 11,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 10,
              "mutability": "mutable",
              "name": "valueSent",
              "nameLocation": "721:9:13",
              "nodeType": "VariableDeclaration",
              "scope": 12,
              "src": "716:14:13",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 9,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "716:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "715:16:13"
        },
        "src": "677:55:13"
      },
      {
        "errorSelector": "fad18f80",
        "id": 18,
        "name": "StakingPool__OnlyWhitelistAddress",
        "nameLocation": "739:33:13",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 17,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 14,
              "mutability": "mutable",
              "name": "caller",
              "nameLocation": "786:6:13",
              "nodeType": "VariableDeclaration",
              "scope": 18,
              "src": "778:14:13",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "778:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "id": 16,
              "mutability": "mutable",
              "name": "whitelistedAddress",
              "nameLocation": "806:18:13",
              "nodeType": "VariableDeclaration",
              "scope": 18,
              "src": "798:26:13",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 15,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "798:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "772:54:13"
        },
        "src": "733:94:13"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19,
              "name": "Ownable",
              "nameLocations": [
                "853:7:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 604,
              "src": "853:7:13"
            },
            "id": 20,
            "nodeType": "InheritanceSpecifier",
            "src": "853:7:13"
          },
          {
            "baseName": {
              "id": 21,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "862:15:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 658,
              "src": "862:15:13"
            },
            "id": 22,
            "nodeType": "InheritanceSpecifier",
            "src": "862:15:13"
          }
        ],
        "canonicalName": "StakingPool",
        "contractDependencies": [
          791
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 491,
        "linearizedBaseContracts": [
          491,
          658,
          604,
          1220
        ],
        "name": "StakingPool",
        "nameLocation": "838:11:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f8d0c40b",
            "id": 24,
            "mutability": "mutable",
            "name": "WhitelistKeyGenerator",
            "nameLocation": "899:21:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "884:36:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "884:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2601d3c7",
            "id": 26,
            "mutability": "mutable",
            "name": "WITHDRAWAL_ADDRESS",
            "nameLocation": "941:18:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "926:33:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "926:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "immutable",
            "name": "DepositContract",
            "nameLocation": "992:15:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "965:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$831",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "IDepositContract",
                "nameLocations": [
                  "965:16:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 831,
                "src": "965:16:13"
              },
              "referencedDeclaration": 831,
              "src": "965:16:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$831",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "df8af7c2",
            "id": 32,
            "mutability": "mutable",
            "name": "ssvETH",
            "nameLocation": "1027:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "1013:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SSVETH_$791",
              "typeString": "contract SSVETH"
            },
            "typeName": {
              "id": 31,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30,
                "name": "SSVETH",
                "nameLocations": [
                  "1013:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 791,
                "src": "1013:6:13"
              },
              "referencedDeclaration": 791,
              "src": "1013:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SSVETH_$791",
                "typeString": "contract SSVETH"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b4bc935",
            "id": 37,
            "mutability": "immutable",
            "name": "VALIDATOR_AMOUNT",
            "nameLocation": "1064:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "1039:53:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1039:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_32000000000000000000_by_1",
                "typeString": "int_const 32000000000000000000"
              },
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3332",
                "id": 34,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1083:2:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "32"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "31653138",
                "id": 35,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1088:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "value": "1e18"
              },
              "src": "1083:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_32000000000000000000_by_1",
                "typeString": "int_const 32000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "07d0e540",
            "id": 39,
            "mutability": "mutable",
            "name": "SSV_TOKEN_ADDR",
            "nameLocation": "1113:14:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "1098:29:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1098:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc9fbb76",
            "id": 41,
            "mutability": "mutable",
            "name": "SSV_CONTRACT_ADDR",
            "nameLocation": "1148:17:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "1133:32:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1133:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "OperatorIDs",
            "nameLocation": "1181:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "1171:21:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint32_$4_storage",
              "typeString": "uint32[4]"
            },
            "typeName": {
              "baseType": {
                "id": 42,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1171:6:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "id": 44,
              "length": {
                "hexValue": "34",
                "id": 43,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1178:1:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "4"
              },
              "nodeType": "ArrayTypeName",
              "src": "1171:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint32_$4_storage_ptr",
                "typeString": "uint32[4]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "07dc739f",
            "id": 48,
            "mutability": "mutable",
            "name": "Validators",
            "nameLocation": "1213:10:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "1198:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
              "typeString": "bytes[]"
            },
            "typeName": {
              "baseType": {
                "id": 46,
                "name": "bytes",
                "nodeType": "ElementaryTypeName",
                "src": "1198:5:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                }
              },
              "id": 47,
              "nodeType": "ArrayTypeName",
              "src": "1198:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                "typeString": "bytes[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "beaconRewards",
            "nameLocation": "1284:13:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "1268:29:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1268:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 52,
            "mutability": "mutable",
            "name": "executionRewards",
            "nameLocation": "1319:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "1303:32:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1303:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "userStake",
            "nameLocation": "1378:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 491,
            "src": "1342:45:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 55,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 53,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1350:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1342:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 54,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1361:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "8c265adcfa641899d6632b86254dda7a76f27701f1d21a732621d51f2328c460",
            "id": 62,
            "name": "UserStaked",
            "nameLocation": "1400:10:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user_address",
                  "nameLocation": "1419:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1411:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1441:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1433:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1410:38:13"
            },
            "src": "1394:55:13"
          },
          {
            "anonymous": false,
            "eventSelector": "144679c9e19454710222d38e13b257573a15b6ca6a4d10a1254ebc2480cb6863",
            "id": 66,
            "name": "PubKeyDeposited",
            "nameLocation": "1460:15:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pubkey",
                  "nameLocation": "1482:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1476:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1475:14:13"
            },
            "src": "1454:36:13"
          },
          {
            "anonymous": false,
            "eventSelector": "a31d33307023a78b2b477792a91efbed5ee91448638292c891e81233cb6108f8",
            "id": 72,
            "name": "OperatorIDsChanged",
            "nameLocation": "1501:18:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newOperators",
                  "nameLocation": "1530:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "1520:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                    "typeString": "uint32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1520:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 69,
                    "length": {
                      "hexValue": "34",
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1527:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1520:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage_ptr",
                      "typeString": "uint32[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:24:13"
            },
            "src": "1495:49:13"
          },
          {
            "anonymous": false,
            "eventSelector": "ce44720b7462058f31ddecab3daa427921e5975d9acb555f043682dada866569",
            "id": 76,
            "name": "SharePriceUpdated",
            "nameLocation": "1555:17:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nameLocation": "1581:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1573:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1572:18:13"
            },
            "src": "1549:42:13"
          },
          {
            "anonymous": false,
            "eventSelector": "b23f6ce72d618df33a33105741ed7e13469f7f9ca6eda19e5e505b28783b1f28",
            "id": 84,
            "name": "KeySharesDeposited",
            "nameLocation": "1602:18:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pubkey",
                  "nameLocation": "1636:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1630:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1630:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sharesPublicKeys",
                  "nameLocation": "1658:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1652:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1692:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1684:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1620:84:13"
            },
            "src": "1596:109:13"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "1906:341:13",
              "statements": [
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "WITHDRAWAL_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1916:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102,
                      "name": "withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "1937:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1916:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1916:31:13"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "WhitelistKeyGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1957:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 106,
                      "name": "keyGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "1981:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1957:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1957:36:13"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "DepositContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2003:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDepositContract_$831",
                        "typeString": "contract IDepositContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 111,
                          "name": "depositAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "2038:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 110,
                        "name": "IDepositContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "2021:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDepositContract_$831_$",
                          "typeString": "type(contract IDepositContract)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2021:32:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDepositContract_$831",
                        "typeString": "contract IDepositContract"
                      }
                    },
                    "src": "2003:50:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDepositContract_$831",
                      "typeString": "contract IDepositContract"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:50:13"
                },
                {
                  "assignments": [
                    117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 117,
                      "mutability": "mutable",
                      "name": "_ssvETH",
                      "nameLocation": "2070:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "2063:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SSVETH_$791",
                        "typeString": "contract SSVETH"
                      },
                      "typeName": {
                        "id": 116,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 115,
                          "name": "SSVETH",
                          "nameLocations": [
                            "2063:6:13"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 791,
                          "src": "2063:6:13"
                        },
                        "referencedDeclaration": 791,
                        "src": "2063:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$791",
                          "typeString": "contract SSVETH"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 122,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2080:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SSVETH_$791_$",
                        "typeString": "function () returns (contract SSVETH)"
                      },
                      "typeName": {
                        "id": 119,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 118,
                          "name": "SSVETH",
                          "nameLocations": [
                            "2084:6:13"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 791,
                          "src": "2084:6:13"
                        },
                        "referencedDeclaration": 791,
                        "src": "2084:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$791",
                          "typeString": "contract SSVETH"
                        }
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:12:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SSVETH_$791",
                      "typeString": "contract SSVETH"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2063:29:13"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "ssvETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2102:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SSVETH_$791",
                        "typeString": "contract SSVETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 127,
                              "name": "_ssvETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "2126:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SSVETH_$791",
                                "typeString": "contract SSVETH"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SSVETH_$791",
                                "typeString": "contract SSVETH"
                              }
                            ],
                            "id": 126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2118:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 125,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2118:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2118:16:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 124,
                        "name": "SSVETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "2111:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SSVETH_$791_$",
                          "typeString": "type(contract SSVETH)"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2111:24:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SSVETH_$791",
                        "typeString": "contract SSVETH"
                      }
                    },
                    "src": "2102:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SSVETH_$791",
                      "typeString": "contract SSVETH"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2102:33:13"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "SSV_CONTRACT_ADDR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2145:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "ssv_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2165:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2145:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "2145:32:13"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "SSV_TOKEN_ADDR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "2187:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 137,
                      "name": "ssv_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "2204:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2187:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "2187:26:13"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "OperatorIDs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2223:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$4_storage",
                        "typeString": "uint32[4] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 141,
                      "name": "ids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2237:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                        "typeString": "uint32[4] memory"
                      }
                    },
                    "src": "2223:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage",
                      "typeString": "uint32[4] storage ref"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:17:13"
                }
              ]
            },
            "id": 145,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "keyGenerator",
                  "nameLocation": "1740:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1732:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "depositAddress",
                  "nameLocation": "1770:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1762:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "withdrawal",
                  "nameLocation": "1802:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1794:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "ssv_contract",
                  "nameLocation": "1830:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1822:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "ssv_token",
                  "nameLocation": "1860:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1852:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1852:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "1896:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1879:20:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                    "typeString": "uint32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 95,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1879:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 97,
                    "length": {
                      "hexValue": "34",
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1886:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1879:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage_ptr",
                      "typeString": "uint32[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1722:183:13"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1906:0:13"
            },
            "scope": 491,
            "src": "1711:536:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "2349:50:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2382:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2386:5:13",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2382:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 149,
                      "name": "updateExecutionRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "2359:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2359:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2359:33:13"
                }
              ]
            },
            "documentation": {
              "id": 146,
              "nodeType": "StructuredDocumentation",
              "src": "2253:64:13",
              "text": " @notice called when the contract receives eth"
            },
            "id": 155,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2329:2:13"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2349:0:13"
            },
            "scope": 491,
            "src": "2322:77:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "2568:35:13",
              "statements": [
                {
                  "expression": {
                    "id": 163,
                    "name": "OperatorIDs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "2585:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage",
                      "typeString": "uint32[4] storage ref"
                    }
                  },
                  "functionReturnParameters": 162,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "2578:18:13"
                }
              ]
            },
            "documentation": {
              "id": 156,
              "nodeType": "StructuredDocumentation",
              "src": "2405:95:13",
              "text": " @notice Get operator ids, check operators here https://explorer.ssv.network/"
            },
            "functionSelector": "27a099d8",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOperators",
            "nameLocation": "2514:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2526:2:13"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "2550:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                    "typeString": "uint32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 158,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2550:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 160,
                    "length": {
                      "hexValue": "34",
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2557:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2550:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage_ptr",
                      "typeString": "uint32[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2549:18:13"
            },
            "scope": 491,
            "src": "2505:98:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "2723:34:13",
              "statements": [
                {
                  "expression": {
                    "id": 173,
                    "name": "Validators",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "2740:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                      "typeString": "bytes storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 172,
                  "id": 174,
                  "nodeType": "Return",
                  "src": "2733:17:13"
                }
              ]
            },
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "2609:47:13",
              "text": " @notice Get validators array"
            },
            "functionSelector": "b7ab4db5",
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidators",
            "nameLocation": "2670:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2683:2:13"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2707:14:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 169,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2707:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 170,
                    "nodeType": "ArrayTypeName",
                    "src": "2707:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2706:16:13"
            },
            "scope": 491,
            "src": "2661:96:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "2893:47:13",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 184,
                      "name": "userStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "2910:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 186,
                    "indexExpression": {
                      "id": 185,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2920:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2910:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 187,
                  "nodeType": "Return",
                  "src": "2903:30:13"
                }
              ]
            },
            "documentation": {
              "id": 177,
              "nodeType": "StructuredDocumentation",
              "src": "2763:51:13",
              "text": " @notice Get user's staked amount"
            },
            "functionSelector": "bbadc93a",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserStake",
            "nameLocation": "2828:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "2849:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2841:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2841:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2840:22:13"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2884:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2883:9:13"
            },
            "scope": 491,
            "src": "2819:121:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "3048:86:13",
              "statements": [
                {
                  "assignments": [
                    196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 196,
                      "mutability": "mutable",
                      "name": "_sharePrice",
                      "nameLocation": "3066:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "3058:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 195,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3058:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 200,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 197,
                        "name": "ssvETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "3080:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$791",
                          "typeString": "contract SSVETH"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3087:10:13",
                      "memberName": "sharePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 750,
                      "src": "3080:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3080:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3058:41:13"
                },
                {
                  "expression": {
                    "id": 201,
                    "name": "_sharePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 196,
                    "src": "3116:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 194,
                  "id": 202,
                  "nodeType": "Return",
                  "src": "3109:18:13"
                }
              ]
            },
            "documentation": {
              "id": 190,
              "nodeType": "StructuredDocumentation",
              "src": "2946:42:13",
              "text": " @notice Get share price"
            },
            "functionSelector": "e6ebe20c",
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getShareprice",
            "nameLocation": "3002:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3015:2:13"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "3039:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3039:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3038:9:13"
            },
            "scope": 491,
            "src": "2993:141:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "3248:37:13",
              "statements": [
                {
                  "expression": {
                    "id": 210,
                    "name": "beaconRewards",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50,
                    "src": "3265:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 209,
                  "id": 211,
                  "nodeType": "Return",
                  "src": "3258:20:13"
                }
              ]
            },
            "documentation": {
              "id": 205,
              "nodeType": "StructuredDocumentation",
              "src": "3140:45:13",
              "text": " @notice Get beacon rewards"
            },
            "functionSelector": "060c8ad7",
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBeaconRewards",
            "nameLocation": "3199:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3215:2:13"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3239:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3239:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3238:9:13"
            },
            "scope": 491,
            "src": "3190:95:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 221,
              "nodeType": "Block",
              "src": "3405:40:13",
              "statements": [
                {
                  "expression": {
                    "id": 219,
                    "name": "executionRewards",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52,
                    "src": "3422:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 218,
                  "id": 220,
                  "nodeType": "Return",
                  "src": "3415:23:13"
                }
              ]
            },
            "documentation": {
              "id": 214,
              "nodeType": "StructuredDocumentation",
              "src": "3291:48:13",
              "text": " @notice Get execution rewards"
            },
            "functionSelector": "0df8d1e8",
            "id": 222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExecutionRewards",
            "nameLocation": "3353:19:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3372:2:13"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 222,
                  "src": "3396:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3395:9:13"
            },
            "scope": 491,
            "src": "3344:101:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "3634:92:13",
              "statements": [
                {
                  "expression": {
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 232,
                      "name": "OperatorIDs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3644:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$4_storage",
                        "typeString": "uint32[4] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 233,
                      "name": "_newOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "3658:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                        "typeString": "uint32[4] memory"
                      }
                    },
                    "src": "3644:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage",
                      "typeString": "uint32[4] storage ref"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "3644:27:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 237,
                        "name": "_newOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "3705:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                          "typeString": "uint32[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                          "typeString": "uint32[4] memory"
                        }
                      ],
                      "id": 236,
                      "name": "OperatorIDsChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "3686:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint32_$4_memory_ptr_$returns$__$",
                        "typeString": "function (uint32[4] memory)"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3686:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "EmitStatement",
                  "src": "3681:38:13"
                }
              ]
            },
            "documentation": {
              "id": 223,
              "nodeType": "StructuredDocumentation",
              "src": "3451:104:13",
              "text": " @dev Update operators\n @param _newOperators: Array of the the new operators Ids"
            },
            "functionSelector": "ed97013b",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 230,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 229,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3624:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 523,
                  "src": "3624:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3624:9:13"
              }
            ],
            "name": "updateOperators",
            "nameLocation": "3569:15:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "_newOperators",
                  "nameLocation": "3602:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3585:30:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$4_memory_ptr",
                    "typeString": "uint32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 224,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3585:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 226,
                    "length": {
                      "hexValue": "34",
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3592:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3585:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$4_storage_ptr",
                      "typeString": "uint32[4]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3584:32:13"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3634:0:13"
            },
            "scope": 491,
            "src": "3560:166:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "3937:239:13",
              "statements": [
                {
                  "expression": {
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 249,
                      "name": "beaconRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "3947:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 250,
                      "name": "_newBeaconRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 244,
                      "src": "3963:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3947:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "3947:33:13"
                },
                {
                  "assignments": [
                    254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 254,
                      "mutability": "mutable",
                      "name": "_newSharePrice",
                      "nameLocation": "3998:14:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 276,
                      "src": "3990:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 253,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3990:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 271,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 255,
                              "name": "beaconRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "4016:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 256,
                              "name": "executionRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "4044:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4016:44:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 258,
                                    "name": "Validators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48,
                                    "src": "4076:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                                      "typeString": "bytes storage ref[] storage ref"
                                    }
                                  },
                                  "id": 259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4087:6:13",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "4076:17:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4096:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "4076:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 262,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4075:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4016:83:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 264,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4015:85:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 265,
                              "name": "Validators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "4104:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                                "typeString": "bytes storage ref[] storage ref"
                              }
                            },
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4115:6:13",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4104:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4124:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "4104:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 269,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4103:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4015:112:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3990:137:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 273,
                        "name": "_newSharePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "4154:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 272,
                      "name": "updateSharePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "4137:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4137:32:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "4137:32:13"
                }
              ]
            },
            "documentation": {
              "id": 242,
              "nodeType": "StructuredDocumentation",
              "src": "3732:125:13",
              "text": " @dev Update share price of the staking pool\n @param _newBeaconRewards: The new beacon rewards amount"
            },
            "functionSelector": "1b7e5127",
            "id": 277,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 247,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 246,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3927:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 523,
                  "src": "3927:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3927:9:13"
              }
            ],
            "name": "updateBeaconRewards",
            "nameLocation": "3871:19:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_newBeaconRewards",
                  "nameLocation": "3899:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "3891:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3891:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3890:27:13"
            },
            "returnParameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3937:0:13"
            },
            "scope": 491,
            "src": "3862:314:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "4259:531:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 281,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4479:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4483:5:13",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "4479:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4492:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4479:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "Ensuring that the caller has passed atleast some value to the function/contract. \nThis contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals ",
                  "id": 291,
                  "nodeType": "IfStatement",
                  "src": "4475:95:13",
                  "trueBody": {
                    "id": 290,
                    "nodeType": "Block",
                    "src": "4495:75:13",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 286,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4549:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4553:5:13",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4549:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 285,
                            "name": "StakingPool__CantStakeZeroAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "4516:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4516:43:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 289,
                        "nodeType": "RevertStatement",
                        "src": "4509:50:13"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 293,
                      "mutability": "mutable",
                      "name": "amount_minted",
                      "nameLocation": "4587:13:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 327,
                      "src": "4579:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 292,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4579:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 303,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 294,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4604:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4608:5:13",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "4604:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 296,
                                "name": "ssvETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "4616:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SSVETH_$791",
                                  "typeString": "contract SSVETH"
                                }
                              },
                              "id": 297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4623:10:13",
                              "memberName": "sharePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 750,
                              "src": "4616:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4616:19:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4604:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 300,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4603:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4639:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "4603:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4579:64:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 307,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4665:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4669:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4665:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 309,
                        "name": "amount_minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "4677:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 304,
                        "name": "ssvETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "4653:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$791",
                          "typeString": "contract SSVETH"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4660:4:13",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 778,
                      "src": "4653:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4653:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "4653:38:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 313,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4717:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4721:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4717:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 315,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4729:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4733:5:13",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "4729:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 312,
                      "name": "UserStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "4706:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4706:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "EmitStatement",
                  "src": "4701:38:13"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 319,
                        "name": "userStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "4749:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 322,
                      "indexExpression": {
                        "expression": {
                          "id": 320,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4759:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4763:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4759:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4749:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 323,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4774:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4778:5:13",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "4774:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4749:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4749:34:13"
                }
              ]
            },
            "documentation": {
              "id": 278,
              "nodeType": "StructuredDocumentation",
              "src": "4182:39:13",
              "text": " @notice Stake tokens"
            },
            "functionSelector": "3a4b66f1",
            "id": 328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "4236:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4241:2:13"
            },
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4259:0:13"
            },
            "scope": 491,
            "src": "4227:563:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "4928:251:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4958:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4962:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4958:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 341,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4978:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$491",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$491",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4970:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 339,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4970:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4970:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 343,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "4985:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 334,
                        "name": "ssvETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "4938:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$791",
                          "typeString": "contract SSVETH"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4945:12:13",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1736,
                      "src": "4938:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4938:55:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "4938:55:13"
                },
                {
                  "assignments": [
                    347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 347,
                      "mutability": "mutable",
                      "name": "_amount_to_transfer",
                      "nameLocation": "5011:19:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 373,
                      "src": "5003:27:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 346,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5003:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 356,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 348,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "5034:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 349,
                                "name": "ssvETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "5044:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SSVETH_$791",
                                  "typeString": "contract SSVETH"
                                }
                              },
                              "id": 350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5051:10:13",
                              "memberName": "sharePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 750,
                              "src": "5044:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5044:19:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5034:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 353,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5033:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5067:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "5033:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5003:68:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 363,
                        "name": "_amount_to_transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "5110:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 359,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5089:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5093:6:13",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5089:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5081:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 357,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5081:8:13",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5081:19:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5101:8:13",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5081:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5081:49:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "5081:49:13"
                },
                {
                  "expression": {
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 366,
                        "name": "userStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "5140:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 369,
                      "indexExpression": {
                        "expression": {
                          "id": 367,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5150:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5154:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5150:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5140:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 370,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "5165:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5140:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "5140:32:13"
                }
              ]
            },
            "documentation": {
              "id": 329,
              "nodeType": "StructuredDocumentation",
              "src": "4796:86:13",
              "text": " @notice Unstake tokens\n @param _amount: Amount to be unstaked"
            },
            "functionSelector": "5d3eea91",
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unStake",
            "nameLocation": "4896:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4912:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "4904:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4904:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4903:17:13"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4928:0:13"
            },
            "scope": 491,
            "src": "4887:292:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 401,
              "nodeType": "Block",
              "src": "5697:347:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 391,
                        "name": "_pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "5826:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 392,
                        "name": "_withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "5847:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 393,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "5884:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 394,
                        "name": "_deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "5908:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 386,
                          "name": "DepositContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "5764:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDepositContract_$831",
                            "typeString": "contract IDepositContract"
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5780:7:13",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 818,
                        "src": "5764:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) payable external"
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 389,
                          "name": "VALIDATOR_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "5795:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5764:48:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$value",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) payable external"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5764:172:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "5764:172:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 398,
                        "name": "_pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "6029:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 397,
                      "name": "PubKeyDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "6013:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6013:24:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 400,
                  "nodeType": "EmitStatement",
                  "src": "6008:29:13"
                }
              ]
            },
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "5185:315:13",
              "text": " @notice Deposit a validator to the deposit contract\n @param _pubkey: Public key of the validator\n @param _withdrawal_credentials: Withdrawal credentials of the validator\n @param _signature: Signature of the deposit data\n @param _deposit_data_root: Root of the deposit data"
            },
            "functionSelector": "bf3a6c0a",
            "id": 402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositValidator",
            "nameLocation": "5514:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "_pubkey",
                  "nameLocation": "5555:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "5540:22:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5540:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "_withdrawal_credentials",
                  "nameLocation": "5587:23:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "5572:38:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5572:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5635:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "5620:25:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5620:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "_deposit_data_root",
                  "nameLocation": "5663:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "5655:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5655:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5530:157:13"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5697:0:13"
            },
            "scope": 491,
            "src": "5505:539:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 461,
              "nodeType": "Block",
              "src": "6644:954:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 418,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6839:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6843:6:13",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6839:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 420,
                      "name": "WhitelistKeyGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "6853:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6839:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 429,
                  "nodeType": "IfStatement",
                  "src": "6835:187:13",
                  "trueBody": {
                    "id": 428,
                    "nodeType": "Block",
                    "src": "6876:146:13",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 423,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6948:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6952:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6948:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 425,
                              "name": "WhitelistKeyGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "6976:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 422,
                            "name": "StakingPool__OnlyWhitelistAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "6897:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) pure"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6897:114:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 427,
                        "nodeType": "RevertStatement",
                        "src": "6890:121:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 434,
                        "name": "SSV_CONTRACT_ADDR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "7124:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 435,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "7143:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 431,
                            "name": "SSV_TOKEN_ADDR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "7100:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 430,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 736,
                          "src": "7093:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$736_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7093:22:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$736",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7116:7:13",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 723,
                      "src": "7093:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7093:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "7093:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 442,
                        "name": "_pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "7280:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 443,
                        "name": "_operatorIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "7301:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                          "typeString": "uint64[] calldata"
                        }
                      },
                      {
                        "id": 444,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "7327:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 445,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "7348:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 446,
                        "name": "_cluster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "7369:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cluster_$2170_memory_ptr",
                          "typeString": "struct ISSVNetworkCore.Cluster memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                          "typeString": "uint64[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Cluster_$2170_memory_ptr",
                          "typeString": "struct ISSVNetworkCore.Cluster memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 439,
                            "name": "SSV_CONTRACT_ADDR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "7230:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 438,
                          "name": "ISSVNetwork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1198,
                          "src": "7218:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISSVNetwork_$1198_$",
                            "typeString": "type(contract ISSVNetwork)"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7218:30:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISSVNetwork_$1198",
                          "typeString": "contract ISSVNetwork"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7249:17:13",
                      "memberName": "registerValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1093,
                      "src": "7218:48:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_array$_t_uint64_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$_t_struct$_Cluster_$2170_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,uint64[] memory,bytes memory,uint256,struct ISSVNetworkCore.Cluster memory) external"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7218:169:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "7218:169:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 452,
                        "name": "_pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "7469:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 449,
                        "name": "Validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "7453:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                          "typeString": "bytes storage ref[] storage ref"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7464:4:13",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7453:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes_storage_$dyn_storage_ptr_$_t_bytes_storage_$returns$__$attached_to$_t_array$_t_bytes_storage_$dyn_storage_ptr_$",
                        "typeString": "function (bytes storage ref[] storage pointer,bytes storage ref)"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7453:24:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "7453:24:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 456,
                        "name": "_pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "7565:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 457,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "7574:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 458,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "7583:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 455,
                      "name": "KeySharesDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "7546:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,uint256)"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7546:45:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 460,
                  "nodeType": "EmitStatement",
                  "src": "7541:50:13"
                }
              ]
            },
            "documentation": {
              "id": 403,
              "nodeType": "StructuredDocumentation",
              "src": "6050:373:13",
              "text": " @notice Deposit shares for a validator\n @param _pubkey: Public key of the validator\n @param _operatorIds: IDs of the validator's operators\n @param _shares: Public keys of the shares\n @param _amount: Amount of tokens to be deposited\n @param _cluster: Latest Cluster information\n @dev Callable by the whitelisted address"
            },
            "functionSelector": "98e4349f",
            "id": 462,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositShares",
            "nameLocation": "6437:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_pubkey",
                  "nameLocation": "6475:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "6460:22:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6460:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "_operatorIds",
                  "nameLocation": "6510:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "6492:30:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                    "typeString": "uint64[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 406,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "6492:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 407,
                    "nodeType": "ArrayTypeName",
                    "src": "6492:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
                      "typeString": "uint64[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 410,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "6547:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "6532:22:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6532:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6572:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "6564:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6564:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "_cluster",
                  "nameLocation": "6620:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "6589:39:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Cluster_$2170_memory_ptr",
                    "typeString": "struct ISSVNetworkCore.Cluster"
                  },
                  "typeName": {
                    "id": 414,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 413,
                      "name": "ISSVNetworkCore.Cluster",
                      "nameLocations": [
                        "6589:15:13",
                        "6605:7:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2170,
                      "src": "6589:23:13"
                    },
                    "referencedDeclaration": 2170,
                    "src": "6589:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Cluster_$2170_storage_ptr",
                      "typeString": "struct ISSVNetworkCore.Cluster"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6450:184:13"
            },
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6644:0:13"
            },
            "scope": 491,
            "src": "6428:1170:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "7799:57:13",
              "statements": [
                {
                  "expression": {
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 468,
                      "name": "executionRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "7809:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 469,
                      "name": "_newExecutionRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "7829:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7809:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:40:13"
                }
              ]
            },
            "documentation": {
              "id": 463,
              "nodeType": "StructuredDocumentation",
              "src": "7604:119:13",
              "text": " @notice update execution rewards\n @param _newExecutionRewards:  Execution rewards amount added"
            },
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateExecutionRewards",
            "nameLocation": "7737:22:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "_newExecutionRewards",
                  "nameLocation": "7768:20:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "7760:28:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7760:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7759:30:13"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7799:0:13"
            },
            "scope": 491,
            "src": "7728:128:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 489,
              "nodeType": "Block",
              "src": "8045:104:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 482,
                        "name": "_newSharePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "8079:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 479,
                        "name": "ssvETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "8055:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SSVETH_$791",
                          "typeString": "contract SSVETH"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8062:16:13",
                      "memberName": "changeSharePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 790,
                      "src": "8055:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8055:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 484,
                  "nodeType": "ExpressionStatement",
                  "src": "8055:39:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 486,
                        "name": "_newSharePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "8127:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 485,
                      "name": "SharePriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "8109:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8109:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "EmitStatement",
                  "src": "8104:38:13"
                }
              ]
            },
            "documentation": {
              "id": 474,
              "nodeType": "StructuredDocumentation",
              "src": "7862:119:13",
              "text": " @dev Update share price of the staking pool\n @param _newSharePrice: The new share price amount"
            },
            "id": 490,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateSharePrice",
            "nameLocation": "7995:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "_newSharePrice",
                  "nameLocation": "8020:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 490,
                  "src": "8012:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8012:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8011:24:13"
            },
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8045:0:13"
            },
            "scope": 491,
            "src": "7986:163:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 492,
        "src": "829:7322:13",
        "usedErrors": [
          12,
          18
        ]
      }
    ],
    "src": "31:8121:13"
  },
  "bytecode": "60c06040526801bc16d674ec80000060a0523480156200001e57600080fd5b50604051620029413803806200294183398101604081905262000041916200026c565b6200004c336200010c565b60018055600380546001600160a01b038087166001600160a01b031992831617909255600280548984169216919091179055851660805260405160009062000094906200015c565b604051809103906000f080158015620000b1573d6000803e3d6000fd5b50600480546001600160a01b038084166001600160a01b0319928316178355600680548983169084161790556005805491881691909216179055909150620000fe9060079084906200016a565b50505050505050506200035a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e1a8062001b2783390190565b600183019183908215620001fb5791602002820160005b83821115620001c757835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262000181565b8015620001f95782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620001c7565b505b50620002099291506200020d565b5090565b5b808211156200020957600081556001016200020e565b80516001600160a01b03811681146200023c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b805163ffffffff811681146200023c57600080fd5b60008060008060008061012080888a0312156200028857600080fd5b620002938862000224565b96506020620002a4818a0162000224565b9650620002b460408a0162000224565b9550620002c460608a0162000224565b9450620002d460808a0162000224565b93508960bf8a0112620002e657600080fd5b604051608081016001600160401b03811182821017156200030b576200030b62000241565b60405291890191808b8411156200032157600080fd5b60a08b015b8481101562000348576200033a8162000257565b825290830190830162000326565b50508093505050509295509295509295565b60805160a0516117a0620003876000396000818161029d0152610b7301526000610b4a01526117a06000f3fe6080604052600436106101395760003560e01c80638da5cb5b116100ab578063cc9fbb761161006f578063cc9fbb7614610375578063df8af7c214610395578063e6ebe20c146103b5578063ed97013b146103ca578063f2fde38b146103ea578063f8d0c40b1461040a57600080fd5b80638da5cb5b146102bf57806398e4349f146102dd578063b7ab4db5146102fd578063bbadc93a1461031f578063bf3a6c0a1461035557600080fd5b80632601d3c7116100fd5780632601d3c71461020c57806327a099d81461022c5780633a4b66f11461024e5780635d3eea9114610256578063715018a6146102765780637b4bc9351461028b57600080fd5b8063060c8ad71461014e57806307d0e5401461017257806307dc739f146101aa5780630df8d1e8146101d75780631b7e5127146101ec57600080fd5b36610149576101473461042a565b005b600080fd5b34801561015a57600080fd5b506009545b6040519081526020015b60405180910390f35b34801561017e57600080fd5b50600554610192906001600160a01b031681565b6040516001600160a01b039091168152602001610169565b3480156101b657600080fd5b506101ca6101c5366004610f63565b610444565b6040516101699190610fc2565b3480156101e357600080fd5b50600a5461015f565b3480156101f857600080fd5b50610147610207366004610f63565b6104f0565b34801561021857600080fd5b50600354610192906001600160a01b031681565b34801561023857600080fd5b5061024161054f565b6040516101699190610fdc565b6101476105b5565b34801561026257600080fd5b50610147610271366004610f63565b610728565b34801561028257600080fd5b50610147610893565b34801561029757600080fd5b5061015f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102cb57600080fd5b506000546001600160a01b0316610192565b3480156102e957600080fd5b506101476102f836600461113e565b6108a7565b34801561030957600080fd5b50610312610a5a565b6040516101699190611224565b34801561032b57600080fd5b5061015f61033a366004611286565b6001600160a01b03166000908152600b602052604090205490565b34801561036157600080fd5b506101476103703660046112af565b610b33565b34801561038157600080fd5b50600654610192906001600160a01b031681565b3480156103a157600080fd5b50600454610192906001600160a01b031681565b3480156103c157600080fd5b5061015f610c21565b3480156103d657600080fd5b506101476103e5366004611352565b610c94565b3480156103f657600080fd5b50610147610405366004611286565b610ce4565b34801561041657600080fd5b50600254610192906001600160a01b031681565b80600a600082825461043c91906113ed565b909155505050565b6008818154811061045457600080fd5b90600052602060002001600091509050805461046f90611400565b80601f016020809104026020016040519081016040528092919081815260200182805461049b90611400565b80156104e85780601f106104bd576101008083540402835291602001916104e8565b820191906000526020600020905b8154815290600101906020018083116104cb57829003601f168201915b505050505081565b6104f8610d5d565b600981905560085460009061050e90602061143a565b60085461051c90602061143a565b600a5460095461052c91906113ed565b61053691906113ed565b6105409190611451565b905061054b81610db7565b5050565b610557610e94565b60408051608081019182905290600790600490826000855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161056f5790505050505050905090565b600034116105dd57604051639ed431ad60e01b81523460048201526024015b60405180910390fd5b6004805460408051638726972960e01b81529051600093670de0b6b3a7640000936001600160a01b031692638726972992818301926020928290030181865afa15801561062e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106529190611473565b61065c903461143a565b6106669190611451565b600480546040516340c10f1960e01b81523392810192909252602482018390529192506001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156106b857600080fd5b505af11580156106cc573d6000803e3d6000fd5b5050604080513381523460208201527f8c265adcfa641899d6632b86254dda7a76f27701f1d21a732621d51f2328c460935001905060405180910390a1336000908152600b60205260408120805434929061043c9084906113ed565b600480546040516323b872dd60e01b81523392810192909252306024830152604482018390526001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a4919061148c565b506000600460009054906101000a90046001600160a01b03166001600160a01b031663872697296040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190611473565b6108289083611451565b61083a90670de0b6b3a764000061143a565b604051909150339082156108fc029083906000818181858888f1935050505015801561086a573d6000803e3d6000fd5b50336000908152600b60205260408120805484929061088a9084906114a9565b90915550505050565b61089b610d5d565b6108a56000610e44565b565b6002546001600160a01b031633146108e7576002546040516301f5a31f60e71b81523360048201526001600160a01b0390911660248201526044016105d4565b60055460065460405163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b3906044016020604051808303816000875af115801561093c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610960919061148c565b5060065460405163967ef80760e01b81526001600160a01b039091169063967ef8079061099f908b908b908b908b908b908b908b908b906004016114e5565b600060405180830381600087803b1580156109b957600080fd5b505af11580156109cd573d6000803e3d6000fd5b5050600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3019150610a109050888a83611602565b507fb23f6ce72d618df33a33105741ed7e13469f7f9ca6eda19e5e505b28783b1f288888868686604051610a489594939291906116c3565b60405180910390a15050505050505050565b60606008805480602002602001604051908101604052809291908181526020016000905b82821015610b2a578382906000526020600020018054610a9d90611400565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac990611400565b8015610b165780601f10610aeb57610100808354040283529160200191610b16565b820191906000526020600020905b815481529060010190602001808311610af957829003601f168201915b505050505081526020019060010190610a7e565b50505050905090565b6040516304512a2360e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322895118907f000000000000000000000000000000000000000000000000000000000000000090610bad908b908b908b908b908b908b908b906004016116fd565b6000604051808303818588803b158015610bc657600080fd5b505af1158015610bda573d6000803e3d6000fd5b50505050507f144679c9e19454710222d38e13b257573a15b6ca6a4d10a1254ebc2480cb68638787604051610c1092919061174e565b60405180910390a150505050505050565b6004805460408051638726972960e01b8152905160009384936001600160a01b031692638726972992818301926020928290030181865afa158015610c6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8e9190611473565b92915050565b610c9c610d5d565b610ca96007826004610eb2565b507fa31d33307023a78b2b477792a91efbed5ee91448638292c891e81233cb6108f881604051610cd99190610fdc565b60405180910390a150565b610cec610d5d565b6001600160a01b038116610d515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d4565b610d5a81610e44565b50565b6000546001600160a01b031633146108a55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d4565b60048054604051634164020160e01b81529182018390526001600160a01b031690634164020190602401600060405180830381600087803b158015610dfb57600080fd5b505af1158015610e0f573d6000803e3d6000fd5b505050507fce44720b7462058f31ddecab3daa427921e5975d9acb555f043682dada86656981604051610cd991815260200190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180608001604052806004906020820280368337509192915050565b600183019183908215610f3e5791602002820160005b83821115610f0c57835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610ec8565b8015610f3c5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610f0c565b505b50610f4a929150610f4e565b5090565b5b80821115610f4a5760008155600101610f4f565b600060208284031215610f7557600080fd5b5035919050565b6000815180845260005b81811015610fa257602081850181015186830182015201610f86565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610fd56020830184610f7c565b9392505050565b60808101818360005b600481101561100a57815163ffffffff16835260209283019290910190600101610fe5565b50505092915050565b60008083601f84011261102557600080fd5b50813567ffffffffffffffff81111561103d57600080fd5b60208301915083602082850101111561105557600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b803563ffffffff8116811461108657600080fd5b919050565b803567ffffffffffffffff8116811461108657600080fd5b8015158114610d5a57600080fd5b600060a082840312156110c357600080fd5b60405160a0810181811067ffffffffffffffff821117156110e6576110e661105c565b6040529050806110f583611072565b81526111036020840161108b565b60208201526111146040840161108b565b6040820152606083013560608201526080830135611131816110a3565b6080919091015292915050565b600080600080600080600080610120898b03121561115b57600080fd5b883567ffffffffffffffff8082111561117357600080fd5b61117f8c838d01611013565b909a50985060208b013591508082111561119857600080fd5b818b0191508b601f8301126111ac57600080fd5b8135818111156111bb57600080fd5b8c60208260051b85010111156111d057600080fd5b6020830198508097505060408b01359150808211156111ee57600080fd5b506111fb8b828c01611013565b909550935050606089013591506112158a60808b016110b1565b90509295985092959890939650565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561127957603f19888603018452611267858351610f7c565b9450928501929085019060010161124b565b5092979650505050505050565b60006020828403121561129857600080fd5b81356001600160a01b0381168114610fd557600080fd5b60008060008060008060006080888a0312156112ca57600080fd5b873567ffffffffffffffff808211156112e257600080fd5b6112ee8b838c01611013565b909950975060208a013591508082111561130757600080fd5b6113138b838c01611013565b909750955060408a013591508082111561132c57600080fd5b506113398a828b01611013565b989b979a50959894979596606090950135949350505050565b60006080828403121561136457600080fd5b82601f83011261137357600080fd5b6040516080810181811067ffffffffffffffff821117156113965761139661105c565b6040528060808401858111156113ab57600080fd5b845b818110156113cc576113be81611072565b8352602092830192016113ad565b509195945050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c8e57610c8e6113d7565b600181811c9082168061141457607f821691505b60208210810361143457634e487b7160e01b600052602260045260246000fd5b50919050565b8082028115828204841417610c8e57610c8e6113d7565b60008261146e57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561148557600080fd5b5051919050565b60006020828403121561149e57600080fd5b8151610fd5816110a3565b81810381811115610c8e57610c8e6113d7565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006101208083526114fa8184018b8d6114bc565b8381036020858101919091528982528a925090810160005b8a81101561153f5767ffffffffffffffff61152c8561108b565b1682529282019290820190600101611512565b50848103604086015261155381898b6114bc565b93505085606085015263ffffffff85511660808501528085015191505067ffffffffffffffff80821660a08501528060408601511660c08501525050606083015160e0830152608083015115156101008301529998505050505050505050565b601f8211156115fd57600081815260208120601f850160051c810160208610156115da5750805b601f850160051c820191505b818110156115f9578281556001016115e6565b5050505b505050565b67ffffffffffffffff83111561161a5761161a61105c565b61162e836116288354611400565b836115b3565b6000601f841160018114611662576000851561164a5750838201355b600019600387901b1c1916600186901b1783556116bc565b600083815260209020601f19861690835b828110156116935786850135825560209485019460019092019101611673565b50868210156116b05760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6060815260006116d76060830187896114bc565b82810360208401526116ea8186886114bc565b9150508260408301529695505050505050565b60808152600061171160808301898b6114bc565b828103602084015261172481888a6114bc565b905082810360408401526117398186886114bc565b91505082606083015298975050505050505050565b6020815260006117626020830184866114bc565b94935050505056fea2646970667358221220152f3cb76486031a2e0981d8a356a88af6df378a95c31bcf93c6825ba90a6eec64736f6c634300081200336080604052670de0b6b3a76400006007553480156200001d57600080fd5b506040518060400160405280601d81526020017f646563656e7472616c697a65207374616b696e67207769746820737376000000815250604051806040016040528060068152602001650e6e6ec8aa8960d31b8152508160039081620000849190620001c3565b506004620000938282620001c3565b505050620000b0620000aa620000c860201b60201c565b620000cc565b600680546001600160a01b031916331790556200028f565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014957607f821691505b6020821081036200016a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001be57600081815260208120601f850160051c81016020861015620001995750805b601f850160051c820191505b81811015620001ba57828155600101620001a5565b5050505b505050565b81516001600160401b03811115620001df57620001df6200011e565b620001f781620001f0845462000134565b8462000170565b602080601f8311600181146200022f5760008415620002165750858301515b600019600386901b1c1916600185901b178555620001ba565b600085815260208120601f198616915b8281101562000260578886015182559484019460019091019084016200023f565b50858210156200027f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b7b806200029f6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a257806395d89b411161007157806395d89b4114610241578063a457c2d714610249578063a9059cbb1461025c578063dd62ed3e1461026f578063f2fde38b1461028257600080fd5b806370a08231146101f6578063715018a61461021f57806387269729146102275780638da5cb5b1461023057600080fd5b806323b872dd116100e957806323b872dd14610199578063313ce567146101ac57806339509351146101bb57806340c10f19146101ce57806341640201146101e357600080fd5b806306fdde031461011b5780630754617214610139578063095ea7b31461016457806318160ddd14610187575b600080fd5b610123610295565b60405161013091906109ac565b60405180910390f35b60065461014c906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b610177610172366004610a16565b610327565b6040519015158152602001610130565b6002545b604051908152602001610130565b6101776101a7366004610a40565b610341565b60405160128152602001610130565b6101776101c9366004610a16565b610365565b6101e16101dc366004610a16565b610387565b005b6101e16101f1366004610a7c565b61039d565b61018b610204366004610a95565b6001600160a01b031660009081526020819052604090205490565b6101e16103aa565b61018b60075481565b6005546001600160a01b031661014c565b6101236103be565b610177610257366004610a16565b6103cd565b61017761026a366004610a16565b61044d565b61018b61027d366004610ab7565b61045b565b6101e1610290366004610a95565b610486565b6060600380546102a490610aea565b80601f01602080910402602001604051908101604052809291908181526020018280546102d090610aea565b801561031d5780601f106102f25761010080835404028352916020019161031d565b820191906000526020600020905b81548152906001019060200180831161030057829003601f168201915b5050505050905090565b6000336103358185856104ff565b60019150505b92915050565b60003361034f858285610623565b61035a85858561069d565b506001949350505050565b600033610335818585610378838361045b565b6103829190610b24565b6104ff565b61038f610841565b610399828261089b565b5050565b6103a5610841565b600755565b6103b2610841565b6103bc600061095a565b565b6060600480546102a490610aea565b600033816103db828661045b565b9050838110156104405760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61035a82868684036104ff565b60003361033581858561069d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61048e610841565b6001600160a01b0381166104f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610437565b6104fc8161095a565b50565b6001600160a01b0383166105615760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610437565b6001600160a01b0382166105c25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610437565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061062f848461045b565b90506000198114610697578181101561068a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610437565b61069784848484036104ff565b50505050565b6001600160a01b0383166107015760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610437565b6001600160a01b0382166107635760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610437565b6001600160a01b038316600090815260208190526040902054818110156107db5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610437565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610697565b6005546001600160a01b031633146103bc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610437565b6001600160a01b0382166108f15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610437565b80600260008282546109039190610b24565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b818110156109d9578581018301518582016040015282016109bd565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a1157600080fd5b919050565b60008060408385031215610a2957600080fd5b610a32836109fa565b946020939093013593505050565b600080600060608486031215610a5557600080fd5b610a5e846109fa565b9250610a6c602085016109fa565b9150604084013590509250925092565b600060208284031215610a8e57600080fd5b5035919050565b600060208284031215610aa757600080fd5b610ab0826109fa565b9392505050565b60008060408385031215610aca57600080fd5b610ad3836109fa565b9150610ae1602084016109fa565b90509250929050565b600181811c90821680610afe57607f821691505b602082108103610b1e57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561033b57634e487b7160e01b600052601160045260246000fdfea2646970667358221220ba5c4a38d36085826d3caeea30cec59042e4336cda952e167f7ccbc40822a12364736f6c63430008120033",
  "bytecodeSha1": "5888438fc7c2706f07d51106171e7183db291534",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.18+commit.87f61d96"
  },
  "contractName": "StakingPool",
  "coverageMap": {
    "branches": {
      "12": {},
      "13": {
        "StakingPool.depositShares": {
          "36": [
            6839,
            6874,
            false
          ]
        },
        "StakingPool.stake": {
          "35": [
            4479,
            4493,
            false
          ]
        }
      },
      "14": {},
      "15": {},
      "2": {
        "Ownable._checkOwner": {
          "38": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "37": [
            2169,
            2191,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {}
    },
    "statements": {
      "12": {},
      "13": {
        "StakingPool.<receive>": {
          "0": [
            2359,
            2392
          ]
        },
        "StakingPool.depositShares": {
          "17": [
            6835,
            7022
          ],
          "18": [
            7093,
            7151
          ],
          "19": [
            7218,
            7387
          ],
          "20": [
            7453,
            7477
          ],
          "21": [
            7541,
            7591
          ]
        },
        "StakingPool.depositValidator": {
          "23": [
            5764,
            5936
          ],
          "24": [
            6008,
            6037
          ]
        },
        "StakingPool.getBeaconRewards": {
          "1": [
            3258,
            3278
          ]
        },
        "StakingPool.getExecutionRewards": {
          "2": [
            3415,
            3438
          ]
        },
        "StakingPool.getOperators": {
          "8": [
            2578,
            2596
          ]
        },
        "StakingPool.getUserStake": {
          "4": [
            2903,
            2933
          ]
        },
        "StakingPool.getValidators": {
          "22": [
            2733,
            2750
          ]
        },
        "StakingPool.stake": {
          "9": [
            4475,
            4570
          ],
          "10": [
            4653,
            4691
          ],
          "11": [
            4701,
            4739
          ],
          "12": [
            4749,
            4783
          ]
        },
        "StakingPool.unStake": {
          "13": [
            4938,
            4993
          ],
          "14": [
            5081,
            5130
          ],
          "15": [
            5140,
            5172
          ]
        },
        "StakingPool.updateBeaconRewards": {
          "6": [
            3947,
            3980
          ],
          "7": [
            4137,
            4169
          ]
        },
        "StakingPool.updateExecutionRewards": {
          "5": [
            7809,
            7849
          ]
        },
        "StakingPool.updateOperators": {
          "25": [
            3644,
            3671
          ],
          "26": [
            3681,
            3719
          ]
        },
        "StakingPool.updateSharePrice": {
          "31": [
            8055,
            8094
          ],
          "32": [
            8104,
            8142
          ]
        }
      },
      "14": {},
      "15": {},
      "2": {
        "Ownable._checkOwner": {
          "30": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "33": [
            2541,
            2558
          ],
          "34": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "3": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "16": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "27": [
            2161,
            2234
          ],
          "28": [
            2244,
            2272
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "Context._msgSender": {
          "29": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC20",
    "IDepositContract",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Metadata",
    "ISSVNetwork",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ReentrancyGuard",
    "SSVETH"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "829:7322:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2359:33;2382:9;2359:22;:33::i;:::-;829:7322;;;;;3190:95;;;;;;;;;;-1:-1:-1;3265:13:13;;3190:95;;;160:25:17;;;148:2;133:18;3190:95:13;;;;;;;;1098:29;;;;;;;;;;-1:-1:-1;1098:29:13;;;;-1:-1:-1;;;;;1098:29:13;;;;;;-1:-1:-1;;;;;360:32:17;;;342:51;;330:2;315:18;1098:29:13;196:203:17;1198:25:13;;;;;;;;;;-1:-1:-1;1198:25:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3344:101::-;;;;;;;;;;-1:-1:-1;3422:16:13;;3344:101;;3862:314;;;;;;;;;;-1:-1:-1;3862:314:13;;;;;:::i;:::-;;:::i;926:33::-;;;;;;;;;;-1:-1:-1;926:33:13;;;;-1:-1:-1;;;;;926:33:13;;;2505:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4227:563::-;;;:::i;4887:292::-;;;;;;;;;;-1:-1:-1;4887:292:13;;;;;:::i;:::-;;:::i;1831:101:2:-;;;;;;;;;;;;;:::i;1039:53:13:-;;;;;;;;;;;;;;;1201:85:2;;;;;;;;;;-1:-1:-1;1247:7:2;1273:6;-1:-1:-1;;;;;1273:6:2;1201:85;;6428:1170:13;;;;;;;;;;-1:-1:-1;6428:1170:13;;;;;:::i;:::-;;:::i;2661:96::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2819:121::-;;;;;;;;;;-1:-1:-1;2819:121:13;;;;;:::i;:::-;-1:-1:-1;;;;;2910:23:13;2884:7;2910:23;;;:9;:23;;;;;;;2819:121;5505:539;;;;;;;;;;-1:-1:-1;5505:539:13;;;;;:::i;:::-;;:::i;1133:32::-;;;;;;;;;;-1:-1:-1;1133:32:13;;;;-1:-1:-1;;;;;1133:32:13;;;1013:20;;;;;;;;;;-1:-1:-1;1013:20:13;;;;-1:-1:-1;;;;;1013:20:13;;;2993:141;;;;;;;;;;;;;:::i;3560:166::-;;;;;;;;;;-1:-1:-1;3560:166:13;;;;;:::i;:::-;;:::i;2081:198:2:-;;;;;;;;;;-1:-1:-1;2081:198:2;;;;;:::i;:::-;;:::i;884:36:13:-;;;;;;;;;;-1:-1:-1;884:36:13;;;;-1:-1:-1;;;;;884:36:13;;;7728:128;7829:20;7809:16;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;;7728:128:13:o;1198:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3862:314::-;1094:13:2;:11;:13::i;:::-;3947::13::1;:33:::0;;;4104:10:::1;:17:::0;3990:22:::1;::::0;4104::::1;::::0;4124:2:::1;4104:22;:::i;:::-;4076:10;:17:::0;:22:::1;::::0;4096:2:::1;4076:22;:::i;:::-;4044:16;;4016:13;;:44;;;;:::i;:::-;:83;;;;:::i;:::-;4015:112;;;;:::i;:::-;3990:137;;4137:32;4154:14;4137:16;:32::i;:::-;3937:239;3862:314:::0;:::o;2505:98::-;2550:16;;:::i;:::-;2578:18;;;;;;;;;;;2585:11;;2578:18;;2585:11;-1:-1:-1;2578:18:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2505:98;:::o;4227:563::-;4492:1;4479:9;:14;4475:95;;4516:43;;-1:-1:-1;;;4516:43:13;;4549:9;4516:43;;;160:25:17;133:18;;4516:43:13;;;;;;;;4475:95;4616:6;;;:19;;;-1:-1:-1;;;4616:19:13;;;;4579:21;;4639:4;;-1:-1:-1;;;;;4616:6:13;;:17;;:19;;;;;;;;;;;:6;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4604:31;;:9;:31;:::i;:::-;4603:40;;;;:::i;:::-;4653:6;;;:38;;-1:-1:-1;;;4653:38:13;;4665:10;4653:38;;;9415:51:17;;;;9482:18;;;9475:34;;;4579:64:13;;-1:-1:-1;;;;;;4653:6:13;;;;:11;;9388:18:17;;4653:38:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4706:33:13;;;4717:10;9415:51:17;;4729:9:13;9497:2:17;9482:18;;9475:34;4706:33:13;;-1:-1:-1;9388:18:17;;-1:-1:-1;4706:33:13;;;;;;;4759:10;4749:21;;;;:9;:21;;;;;:34;;4774:9;;4749:21;:34;;4774:9;;4749:34;:::i;4887:292::-;4938:6;;;:55;;-1:-1:-1;;;4938:55:13;;4958:10;4938:55;;;9760:34:17;;;;4978:4:13;9810:18:17;;;9803:43;9862:18;;;9855:34;;;-1:-1:-1;;;;;4938:6:13;;:19;;9695:18:17;;4938:55:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5003:27;5044:6;;;;;;;;;-1:-1:-1;;;;;5044:6:13;-1:-1:-1;;;;;5044:17:13;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5034:29;;:7;:29;:::i;:::-;5033:38;;5067:4;5033:38;:::i;:::-;5081:49;;5003:68;;-1:-1:-1;5089:10:13;;5081:49;;;;;5003:68;;5081:49;;;;5003:68;5089:10;5081:49;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5150:10:13;5140:21;;;;:9;:21;;;;;:32;;5165:7;;5140:21;:32;;5165:7;;5140:32;:::i;:::-;;;;-1:-1:-1;;;;4887:292:13:o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;6428:1170:13:-;6853:21;;-1:-1:-1;;;;;6853:21:13;6839:10;:35;6835:187;;6976:21;;6897:114;;-1:-1:-1;;;6897:114:13;;6948:10;6897:114;;;10495:34:17;-1:-1:-1;;;;;6976:21:13;;;10545:18:17;;;10538:43;10430:18;;6897:114:13;10283:304:17;6835:187:13;7100:14;;7124:17;;7093:58;;-1:-1:-1;;;7093:58:13;;-1:-1:-1;;;;;7124:17:13;;;7093:58;;;9415:51:17;9482:18;;;9475:34;;;7100:14:13;;;7093:30;;9388:18:17;;7093:58:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7230:17:13;;7218:169;;-1:-1:-1;;;7218:169:13;;-1:-1:-1;;;;;7230:17:13;;;;7218:48;;:169;;7280:7;;;;7301:12;;;;7327:7;;;;7348;;7369:8;;7218:169;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7453:10:13;:24;;;;;;;-1:-1:-1;7453:24:13;;;;;;;-1:-1:-1;7453:24:13;;-1:-1:-1;7469:7:13;;7453:24;;:::i;:::-;;7546:45;7565:7;;7574;;7583;7546:45;;;;;;;;;;:::i;:::-;;;;;;;;6428:1170;;;;;;;;:::o;2661:96::-;2707:14;2740:10;2733:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:96;:::o;5505:539::-;5764:172;;-1:-1:-1;;;5764:172:13;;-1:-1:-1;;;;;5764:15:13;:23;;;;5795:16;;5764:172;;5826:7;;;;5847:23;;;;5884:10;;;;5908:18;;5764:172;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6013:24;6029:7;;6013:24;;;;;;;:::i;:::-;;;;;;;;5505:539;;;;;;;:::o;2993:141::-;3080:6;;;:19;;;-1:-1:-1;;;3080:19:13;;;;3039:7;;;;-1:-1:-1;;;;;3080:6:13;;:17;;:19;;;;;;;;;;;:6;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3058:41;2993:141;-1:-1:-1;;2993:141:13:o;3560:166::-;1094:13:2;:11;:13::i;:::-;3644:27:13::1;:11;3658:13:::0;3644:27:::1;;:::i;:::-;;3686:33;3705:13;3686:33;;;;;;:::i;:::-;;;;;;;;3560:166:::0;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:2;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:2;;16108:2:17;2161:73:2::1;::::0;::::1;16090:21:17::0;16147:2;16127:18;;;16120:30;16186:34;16166:18;;;16159:62;-1:-1:-1;;;16237:18:17;;;16230:36;16283:19;;2161:73:2::1;15906:402:17::0;2161:73:2::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:2;719:10:7;1422:23:2;1414:68;;;;-1:-1:-1;;;1414:68:2;;16515:2:17;1414:68:2;;;16497:21:17;;;16534:18;;;16527:30;16593:34;16573:18;;;16566:62;16645:18;;1414:68:2;16313:356:17;7986:163:13;8055:6;;;:39;;-1:-1:-1;;;8055:39:13;;;;;160:25:17;;;-1:-1:-1;;;;;8055:6:13;;:23;;133:18:17;;8055:39:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8109:33;8127:14;8109:33;;;;160:25:17;;148:2;133:18;;14:177;2433:187:2;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;404:180:17;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;-1:-1:-1;555:23:17;;404:180;-1:-1:-1;404:180:17:o;589:422::-;630:3;668:5;662:12;695:6;690:3;683:19;720:1;730:162;744:6;741:1;738:13;730:162;;;806:4;862:13;;;858:22;;852:29;834:11;;;830:20;;823:59;759:12;730:162;;;734:3;937:1;930:4;921:6;916:3;912:16;908:27;901:38;1000:4;993:2;989:7;984:2;976:6;972:15;968:29;963:3;959:39;955:50;948:57;;;589:422;;;;:::o;1016:217::-;1163:2;1152:9;1145:21;1126:4;1183:44;1223:2;1212:9;1208:18;1200:6;1183:44;:::i;:::-;1175:52;1016:217;-1:-1:-1;;;1016:217:17:o;1238:510::-;1416:3;1401:19;;1405:9;1497:6;1374:4;1531:211;1545:4;1542:1;1539:11;1531:211;;;1608:13;;1623:10;1604:30;1592:43;;1658:4;1682:12;;;;1717:15;;;;1565:1;1558:9;1531:211;;;1535:3;;;1238:510;;;;:::o;1753:347::-;1804:8;1814:6;1868:3;1861:4;1853:6;1849:17;1845:27;1835:55;;1886:1;1883;1876:12;1835:55;-1:-1:-1;1909:20:17;;1952:18;1941:30;;1938:50;;;1984:1;1981;1974:12;1938:50;2021:4;2013:6;2009:17;1997:29;;2073:3;2066:4;2057:6;2049;2045:19;2041:30;2038:39;2035:59;;;2090:1;2087;2080:12;2035:59;1753:347;;;;;:::o;2105:127::-;2166:10;2161:3;2157:20;2154:1;2147:31;2197:4;2194:1;2187:15;2221:4;2218:1;2211:15;2237:163;2304:20;;2364:10;2353:22;;2343:33;;2333:61;;2390:1;2387;2380:12;2333:61;2237:163;;;:::o;2405:171::-;2472:20;;2532:18;2521:30;;2511:41;;2501:69;;2566:1;2563;2556:12;2581:118;2667:5;2660:13;2653:21;2646:5;2643:32;2633:60;;2689:1;2686;2679:12;2704:757;2758:5;2806:4;2794:9;2789:3;2785:19;2781:30;2778:50;;;2824:1;2821;2814:12;2778:50;2857:2;2851:9;2899:4;2891:6;2887:17;2970:6;2958:10;2955:22;2934:18;2922:10;2919:34;2916:62;2913:88;;;2981:18;;:::i;:::-;3017:2;3010:22;3050:6;-1:-1:-1;3050:6:17;3080:28;3098:9;3080:28;:::i;:::-;3072:6;3065:44;3142:37;3175:2;3164:9;3160:18;3142:37;:::i;:::-;3137:2;3129:6;3125:15;3118:62;3213:37;3246:2;3235:9;3231:18;3213:37;:::i;:::-;3208:2;3200:6;3196:15;3189:62;3312:2;3301:9;3297:18;3284:32;3279:2;3271:6;3267:15;3260:57;3369:3;3358:9;3354:19;3341:33;3383:30;3405:7;3383:30;:::i;:::-;3441:3;3429:16;;;;3422:33;2704:757;;-1:-1:-1;;2704:757:17:o;3466:1373::-;3634:6;3642;3650;3658;3666;3674;3682;3690;3743:3;3731:9;3722:7;3718:23;3714:33;3711:53;;;3760:1;3757;3750:12;3711:53;3800:9;3787:23;3829:18;3870:2;3862:6;3859:14;3856:34;;;3886:1;3883;3876:12;3856:34;3925:58;3975:7;3966:6;3955:9;3951:22;3925:58;:::i;:::-;4002:8;;-1:-1:-1;3899:84:17;-1:-1:-1;4090:2:17;4075:18;;4062:32;;-1:-1:-1;4106:16:17;;;4103:36;;;4135:1;4132;4125:12;4103:36;4173:8;4162:9;4158:24;4148:34;;4220:7;4213:4;4209:2;4205:13;4201:27;4191:55;;4242:1;4239;4232:12;4191:55;4282:2;4269:16;4308:2;4300:6;4297:14;4294:34;;;4324:1;4321;4314:12;4294:34;4377:7;4372:2;4362:6;4359:1;4355:14;4351:2;4347:23;4343:32;4340:45;4337:65;;;4398:1;4395;4388:12;4337:65;4429:2;4425;4421:11;4411:21;;4451:6;4441:16;;;4510:2;4499:9;4495:18;4482:32;4466:48;;4539:2;4529:8;4526:16;4523:36;;;4555:1;4552;4545:12;4523:36;;4594:60;4646:7;4635:8;4624:9;4620:24;4594:60;:::i;:::-;4673:8;;-1:-1:-1;4568:86:17;-1:-1:-1;;4755:2:17;4740:18;;4727:32;;-1:-1:-1;4778:55:17;4825:7;4819:3;4804:19;;4778:55;:::i;:::-;4768:65;;3466:1373;;;;;;;;;;;:::o;4844:800::-;5004:4;5033:2;5073;5062:9;5058:18;5103:2;5092:9;5085:21;5126:6;5161;5155:13;5192:6;5184;5177:22;5230:2;5219:9;5215:18;5208:25;;5292:2;5282:6;5279:1;5275:14;5264:9;5260:30;5256:39;5242:53;;5330:2;5322:6;5318:15;5351:1;5361:254;5375:6;5372:1;5369:13;5361:254;;;5468:2;5464:7;5452:9;5444:6;5440:22;5436:36;5431:3;5424:49;5496:39;5528:6;5519;5513:13;5496:39;:::i;:::-;5486:49;-1:-1:-1;5593:12:17;;;;5558:15;;;;5397:1;5390:9;5361:254;;;-1:-1:-1;5632:6:17;;4844:800;-1:-1:-1;;;;;;;4844:800:17:o;5649:286::-;5708:6;5761:2;5749:9;5740:7;5736:23;5732:32;5729:52;;;5777:1;5774;5767:12;5729:52;5803:23;;-1:-1:-1;;;;;5855:31:17;;5845:42;;5835:70;;5901:1;5898;5891:12;5940:1073;6059:6;6067;6075;6083;6091;6099;6107;6160:3;6148:9;6139:7;6135:23;6131:33;6128:53;;;6177:1;6174;6167:12;6128:53;6217:9;6204:23;6246:18;6287:2;6279:6;6276:14;6273:34;;;6303:1;6300;6293:12;6273:34;6342:58;6392:7;6383:6;6372:9;6368:22;6342:58;:::i;:::-;6419:8;;-1:-1:-1;6316:84:17;-1:-1:-1;6507:2:17;6492:18;;6479:32;;-1:-1:-1;6523:16:17;;;6520:36;;;6552:1;6549;6542:12;6520:36;6591:60;6643:7;6632:8;6621:9;6617:24;6591:60;:::i;:::-;6670:8;;-1:-1:-1;6565:86:17;-1:-1:-1;6758:2:17;6743:18;;6730:32;;-1:-1:-1;6774:16:17;;;6771:36;;;6803:1;6800;6793:12;6771:36;;6842:60;6894:7;6883:8;6872:9;6868:24;6842:60;:::i;:::-;5940:1073;;;;-1:-1:-1;5940:1073:17;;;;;;7003:2;6988:18;;;6975:32;;5940:1073;-1:-1:-1;;;;5940:1073:17:o;7240:765::-;7321:6;7374:3;7362:9;7353:7;7349:23;7345:33;7342:53;;;7391:1;7388;7381:12;7342:53;7440:7;7433:4;7422:9;7418:20;7414:34;7404:62;;7462:1;7459;7452:12;7404:62;7495:2;7489:9;7537:3;7529:6;7525:16;7607:6;7595:10;7592:22;7571:18;7559:10;7556:34;7553:62;7550:88;;;7618:18;;:::i;:::-;7654:2;7647:22;7689:6;7733:3;7718:19;;7749;;;7746:39;;;7781:1;7778;7771:12;7746:39;7805:9;7823:151;7839:6;7834:3;7831:15;7823:151;;;7907:22;7925:3;7907:22;:::i;:::-;7895:35;;7959:4;7950:14;;;;7856;7823:151;;;-1:-1:-1;7993:6:17;;7240:765;-1:-1:-1;;;;;7240:765:17:o;8010:127::-;8071:10;8066:3;8062:20;8059:1;8052:31;8102:4;8099:1;8092:15;8126:4;8123:1;8116:15;8142:125;8207:9;;;8228:10;;;8225:36;;;8241:18;;:::i;8272:380::-;8351:1;8347:12;;;;8394;;;8415:61;;8469:4;8461:6;8457:17;8447:27;;8415:61;8522:2;8514:6;8511:14;8491:18;8488:38;8485:161;;8568:10;8563:3;8559:20;8556:1;8549:31;8603:4;8600:1;8593:15;8631:4;8628:1;8621:15;8485:161;;8272:380;;;:::o;8657:168::-;8730:9;;;8761;;8778:15;;;8772:22;;8758:37;8748:71;;8799:18;;:::i;8830:217::-;8870:1;8896;8886:132;;8940:10;8935:3;8931:20;8928:1;8921:31;8975:4;8972:1;8965:15;9003:4;9000:1;8993:15;8886:132;-1:-1:-1;9032:9:17;;8830:217::o;9052:184::-;9122:6;9175:2;9163:9;9154:7;9150:23;9146:32;9143:52;;;9191:1;9188;9181:12;9143:52;-1:-1:-1;9214:16:17;;9052:184;-1:-1:-1;9052:184:17:o;9900:245::-;9967:6;10020:2;10008:9;9999:7;9995:23;9991:32;9988:52;;;10036:1;10033;10026:12;9988:52;10068:9;10062:16;10087:28;10109:5;10087:28;:::i;10150:128::-;10217:9;;;10238:11;;;10235:37;;;10252:18;;:::i;10592:266::-;10680:6;10675:3;10668:19;10732:6;10725:5;10718:4;10713:3;10709:14;10696:43;-1:-1:-1;10784:1:17;10759:16;;;10777:4;10755:27;;;10748:38;;;;10840:2;10819:15;;;-1:-1:-1;;10815:29:17;10806:39;;;10802:50;;10592:266::o;10863:1534::-;11231:4;11260:3;11290:2;11279:9;11272:21;11316:61;11373:2;11362:9;11358:18;11350:6;11342;11316:61;:::i;:::-;11434:22;;;11396:2;11414:18;;;11407:50;;;;11492:22;;;11568:6;;-1:-1:-1;11396:2:17;11530:15;;11592:1;11602:206;11616:6;11613:1;11610:13;11602:206;;;11708:18;11681:25;11699:6;11681:25;:::i;:::-;11677:50;11665:63;;11783:15;;;;11748:12;;;;11638:1;11631:9;11602:206;;;11606:3;11853:9;11848:3;11844:19;11839:2;11828:9;11824:18;11817:47;11881:46;11923:3;11915:6;11907;11881:46;:::i;:::-;11873:54;;;11963:6;11958:2;11947:9;11943:18;11936:34;12026:10;12017:6;12011:13;12007:30;12001:3;11990:9;11986:19;11979:59;12085:2;12077:6;12073:15;12067:22;12047:42;;;12108:18;12181:2;12167:12;12163:21;12157:3;12146:9;12142:19;12135:50;12250:2;12244;12236:6;12232:15;12226:22;12222:31;12216:3;12205:9;12201:19;12194:60;;;12309:2;12301:6;12297:15;12291:22;12285:3;12274:9;12270:19;12263:51;12383:3;12375:6;12371:16;12365:23;12358:31;12351:39;12345:3;12334:9;12330:19;12323:68;10863:1534;;;;;;;;;;;:::o;12527:544::-;12628:2;12623:3;12620:11;12617:448;;;12664:1;12689:5;12685:2;12678:17;12734:4;12730:2;12720:19;12804:2;12792:10;12788:19;12785:1;12781:27;12775:4;12771:38;12840:4;12828:10;12825:20;12822:47;;;-1:-1:-1;12863:4:17;12822:47;12918:2;12913:3;12909:12;12906:1;12902:20;12896:4;12892:31;12882:41;;12973:82;12991:2;12984:5;12981:13;12973:82;;;13036:17;;;13017:1;13006:13;12973:82;;;12977:3;;;12617:448;12527:544;;;:::o;13247:1202::-;13369:18;13364:3;13361:27;13358:53;;;13391:18;;:::i;:::-;13420:93;13509:3;13469:38;13501:4;13495:11;13469:38;:::i;:::-;13463:4;13420:93;:::i;:::-;13539:1;13564:2;13559:3;13556:11;13581:1;13576:615;;;;14235:1;14252:3;14249:93;;;-1:-1:-1;14308:19:17;;;14295:33;14249:93;-1:-1:-1;;13204:1:17;13200:11;;;13196:24;13192:29;13182:40;13228:1;13224:11;;;13179:57;14355:78;;13549:894;;13576:615;12474:1;12467:14;;;12511:4;12498:18;;-1:-1:-1;;13612:17:17;;;13712:9;13734:229;13748:7;13745:1;13742:14;13734:229;;;13837:19;;;13824:33;13809:49;;13944:4;13929:20;;;;13897:1;13885:14;;;;13764:12;13734:229;;;13738:3;13991;13982:7;13979:16;13976:159;;;14115:1;14111:6;14105:3;14099;14096:1;14092:11;14088:21;14084:34;14080:39;14067:9;14062:3;14058:19;14045:33;14041:79;14033:6;14026:95;13976:159;;;14178:1;14172:3;14169:1;14165:11;14161:19;14155:4;14148:33;13549:894;;;13247:1202;;;:::o;14454:502::-;14695:2;14684:9;14677:21;14658:4;14721:61;14778:2;14767:9;14763:18;14755:6;14747;14721:61;:::i;:::-;14830:9;14822:6;14818:22;14813:2;14802:9;14798:18;14791:50;14858:49;14900:6;14892;14884;14858:49;:::i;:::-;14850:57;;;14943:6;14938:2;14927:9;14923:18;14916:34;14454:502;;;;;;;;:::o;14961:691::-;15258:3;15247:9;15240:22;15221:4;15285:62;15342:3;15331:9;15327:19;15319:6;15311;15285:62;:::i;:::-;15395:9;15387:6;15383:22;15378:2;15367:9;15363:18;15356:50;15429:49;15471:6;15463;15455;15429:49;:::i;:::-;15415:63;;15526:9;15518:6;15514:22;15509:2;15498:9;15494:18;15487:50;15554:49;15596:6;15588;15580;15554:49;:::i;:::-;15546:57;;;15639:6;15634:2;15623:9;15619:18;15612:34;14961:691;;;;;;;;;;:::o;15657:244::-;15814:2;15803:9;15796:21;15777:4;15834:61;15891:2;15880:9;15876:18;15868:6;15860;15834:61;:::i;:::-;15826:69;15657:244;-1:-1:-1;;;;15657:244:17:o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "StakingPool__CantStakeZeroAmount(uint256)": [
        {
          "notice": "this contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals. By using custom errors instead, we don't need to use up storage space on the `require`'s revert string messages. This also allows developers and users to see customizable output values when the custom error is invoked "
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "depositShares(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,uint256,bool))": {
        "details": "Callable by the whitelisted address",
        "notice": "Deposit shares for a validator",
        "params": {
          "_amount": ": Amount of tokens to be deposited",
          "_cluster": ": Latest Cluster information",
          "_operatorIds": ": IDs of the validator's operators",
          "_pubkey": ": Public key of the validator",
          "_shares": ": Public keys of the shares"
        }
      },
      "depositValidator(bytes,bytes,bytes,bytes32)": {
        "notice": "Deposit a validator to the deposit contract",
        "params": {
          "_deposit_data_root": ": Root of the deposit data",
          "_pubkey": ": Public key of the validator",
          "_signature": ": Signature of the deposit data",
          "_withdrawal_credentials": ": Withdrawal credentials of the validator"
        }
      },
      "getBeaconRewards()": {
        "notice": "Get beacon rewards"
      },
      "getExecutionRewards()": {
        "notice": "Get execution rewards"
      },
      "getOperators()": {
        "notice": "Get operator ids, check operators here https://explorer.ssv.network/"
      },
      "getShareprice()": {
        "notice": "Get share price"
      },
      "getUserStake(address)": {
        "notice": "Get user's staked amount"
      },
      "getValidators()": {
        "notice": "Get validators array"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stake()": {
        "notice": "Stake tokens"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unStake(uint256)": {
        "notice": "Unstake tokens",
        "params": {
          "_amount": ": Amount to be unstaked"
        }
      },
      "updateBeaconRewards(uint256)": {
        "details": "Update share price of the staking pool",
        "params": {
          "_newBeaconRewards": ": The new beacon rewards amount"
        }
      },
      "updateOperators(uint32[4])": {
        "details": "Update operators",
        "params": {
          "_newOperators": ": Array of the the new operators Ids"
        }
      }
    },
    "version": 1
  },
  "offset": [
    829,
    8151
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xCC9FBB76 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCC9FBB76 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xDF8AF7C2 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xE6EBE20C EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xED97013B EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xF8D0C40B EQ PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x98E4349F EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xB7AB4DB5 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xBBADC93A EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xBF3A6C0A EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2601D3C7 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x2601D3C7 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x27A099D8 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x5D3EEA91 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x7B4BC935 EQ PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60C8AD7 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x7D0E540 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x7DC739F EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xDF8D1E8 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x1B7E5127 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x149 JUMPI PUSH2 0x147 CALLVALUE PUSH2 0x42A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x169 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0xFC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x15F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x147 PUSH2 0x5B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x893 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x192 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x113E JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0xC21 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x1286 JUMP JUMPDEST PUSH2 0xCE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x46F SWAP1 PUSH2 0x1400 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x1400 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x4F8 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x50E SWAP1 PUSH1 0x20 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x51C SWAP1 PUSH1 0x20 PUSH2 0x143A JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST SWAP1 POP PUSH2 0x54B DUP2 PUSH2 0xDB7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x557 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x4 SWAP1 DUP3 PUSH1 0x0 DUP6 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x56F JUMPI SWAP1 POP POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x9ED431AD PUSH1 0xE0 SHL DUP2 MSTORE CALLVALUE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x87269729 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 PUSH8 0xDE0B6B3A7640000 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x87269729 SWAP3 DUP2 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x652 SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x65C SWAP1 CALLVALUE PUSH2 0x143A JUMP JUMPDEST PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x8C265ADCFA641899D6632B86254DDA7A76F27701F1D21A732621D51F2328C460 SWAP4 POP ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x43C SWAP1 DUP5 SWAP1 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x780 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0x148C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x87269729 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x828 SWAP1 DUP4 PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x83A SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x86A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x88A SWAP1 DUP5 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x89B PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x8A5 PUSH1 0x0 PUSH2 0xE44 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8E7 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1F5A31F PUSH1 0xE7 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x960 SWAP2 SWAP1 PUSH2 0x148C JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x967EF807 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x967EF807 SWAP1 PUSH2 0x99F SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SWAP2 POP PUSH2 0xA10 SWAP1 POP DUP9 DUP11 DUP4 PUSH2 0x1602 JUMP JUMPDEST POP PUSH32 0xB23F6CE72D618DF33A33105741ED7E13469F7F9CA6EDA19E5E505B28783B1F28 DUP9 DUP9 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA48 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB2A JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xA9D SWAP1 PUSH2 0x1400 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAC9 SWAP1 PUSH2 0x1400 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB16 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAEB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB16 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAF9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA7E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4512A23 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x22895118 SWAP1 PUSH32 0x0 SWAP1 PUSH2 0xBAD SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0x144679C9E19454710222D38E13B257573A15B6CA6A4D10A1254EBC2480CB6863 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC10 SWAP3 SWAP2 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x87269729 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x87269729 SWAP3 DUP2 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC9C PUSH2 0xD5D JUMP JUMPDEST PUSH2 0xCA9 PUSH1 0x7 DUP3 PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST POP PUSH32 0xA31D33307023A78B2B477792A91EFBED5EE91448638292C891E81233CB6108F8 DUP2 PUSH1 0x40 MLOAD PUSH2 0xCD9 SWAP2 SWAP1 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xCEC PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0xD5A DUP2 PUSH2 0xE44 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x41640201 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x41640201 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xCE44720B7462058F31DDECAB3DAA427921E5975D9ACB555F043682DADA866569 DUP2 PUSH1 0x40 MLOAD PUSH2 0xCD9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP4 SWAP1 DUP3 ISZERO PUSH2 0xF3E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0xF0C JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0xEC8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF3C JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0xF0C JUMP JUMPDEST POP JUMPDEST POP PUSH2 0xF4A SWAP3 SWAP2 POP PUSH2 0xF4E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xF4A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xF86 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFD5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF7C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x100A JUMPI DUP2 MLOAD PUSH4 0xFFFFFFFF AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFE5 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x103D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1086 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1086 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x10E6 JUMPI PUSH2 0x10E6 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x10F5 DUP4 PUSH2 0x1072 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1103 PUSH1 0x20 DUP5 ADD PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1114 PUSH1 0x40 DUP5 ADD PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH2 0x1131 DUP2 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x120 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x117F DUP13 DUP4 DUP14 ADD PUSH2 0x1013 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x11BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x11D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP9 POP DUP1 SWAP8 POP POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11FB DUP12 DUP3 DUP13 ADD PUSH2 0x1013 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1215 DUP11 PUSH1 0x80 DUP12 ADD PUSH2 0x10B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1279 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x1267 DUP6 DUP4 MLOAD PUSH2 0xF7C JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x124B JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x12CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EE DUP12 DUP4 DUP13 ADD PUSH2 0x1013 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1313 DUP12 DUP4 DUP13 ADD PUSH2 0x1013 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x132C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1339 DUP11 DUP3 DUP12 ADD PUSH2 0x1013 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 SWAP5 SWAP8 SWAP6 SWAP7 PUSH1 0x60 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1396 JUMPI PUSH2 0x1396 PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x80 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0x13AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13CC JUMPI PUSH2 0x13BE DUP2 PUSH2 0x1072 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x13AD JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC8E JUMPI PUSH2 0xC8E PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1414 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1434 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC8E JUMPI PUSH2 0xC8E PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x146E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFD5 DUP2 PUSH2 0x10A3 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC8E JUMPI PUSH2 0xC8E PUSH2 0x13D7 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 MSTORE PUSH2 0x14FA DUP2 DUP5 ADD DUP12 DUP14 PUSH2 0x14BC JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x20 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP10 DUP3 MSTORE DUP11 SWAP3 POP SWAP1 DUP2 ADD PUSH1 0x0 JUMPDEST DUP11 DUP2 LT ISZERO PUSH2 0x153F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x152C DUP6 PUSH2 0x108B JUMP JUMPDEST AND DUP3 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1512 JUMP JUMPDEST POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1553 DUP2 DUP10 DUP12 PUSH2 0x14BC JUMP JUMPDEST SWAP4 POP POP DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP6 MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE DUP1 DUP6 ADD MLOAD SWAP2 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0xA0 DUP6 ADD MSTORE DUP1 PUSH1 0x40 DUP7 ADD MLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x15FD JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x15DA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15F9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15E6 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x161A JUMPI PUSH2 0x161A PUSH2 0x105C JUMP JUMPDEST PUSH2 0x162E DUP4 PUSH2 0x1628 DUP4 SLOAD PUSH2 0x1400 JUMP JUMPDEST DUP4 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1662 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x164A JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1693 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1673 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x16B0 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16D7 PUSH1 0x60 DUP4 ADD DUP8 DUP10 PUSH2 0x14BC JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16EA DUP2 DUP7 DUP9 PUSH2 0x14BC JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1711 PUSH1 0x80 DUP4 ADD DUP10 DUP12 PUSH2 0x14BC JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1724 DUP2 DUP9 DUP11 PUSH2 0x14BC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1739 DUP2 DUP7 DUP9 PUSH2 0x14BC JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1762 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x14BC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0x2F EXTCODECOPY 0xB7 PUSH5 0x86031A2E09 DUP2 0xD8 LOG3 JUMP 0xA8 DUP11 0xF6 0xDF CALLDATACOPY DUP11 SWAP6 0xC3 SHL 0xCF SWAP4 0xC6 DUP3 JUMPDEST 0xA9 EXP PUSH15 0xEC64736F6C63430008120033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        829,
        8151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "LT",
      "path": "13"
    },
    "9": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x139"
    },
    "12": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "13": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "SHR",
      "path": "13"
    },
    "19": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "20": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8DA5CB5B"
    },
    "25": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "GT",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "30": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "31": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xCC9FBB76"
    },
    "36": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "GT",
      "path": "13"
    },
    "37": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "41": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "42": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xCC9FBB76"
    },
    "47": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "48": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x375"
    },
    "51": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "52": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "53": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDF8AF7C2"
    },
    "58": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "59": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x395"
    },
    "62": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "63": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "64": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE6EBE20C"
    },
    "69": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "70": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3B5"
    },
    "73": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "74": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "75": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xED97013B"
    },
    "80": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "81": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3CA"
    },
    "84": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "85": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "86": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "92": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3EA"
    },
    "95": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "96": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "97": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF8D0C40B"
    },
    "102": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "103": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x40A"
    },
    "106": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "107": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "110": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "REVERT",
      "path": "13"
    },
    "111": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "112": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "113": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8DA5CB5B"
    },
    "118": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "119": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BF"
    },
    "122": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "123": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "124": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x98E4349F"
    },
    "129": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "130": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DD"
    },
    "133": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "134": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "135": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB7AB4DB5"
    },
    "140": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "141": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2FD"
    },
    "144": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "145": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "146": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xBBADC93A"
    },
    "151": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "152": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x31F"
    },
    "155": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "156": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "157": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xBF3A6C0A"
    },
    "162": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "163": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x355"
    },
    "166": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "167": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "170": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "REVERT",
      "path": "13"
    },
    "171": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "172": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "173": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x2601D3C7"
    },
    "178": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "GT",
      "path": "13"
    },
    "179": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFD"
    },
    "182": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "183": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "184": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x2601D3C7"
    },
    "189": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "190": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x20C"
    },
    "193": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "194": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "195": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x27A099D8"
    },
    "200": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "201": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x22C"
    },
    "204": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "205": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "206": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x3A4B66F1"
    },
    "211": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "212": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x24E"
    },
    "215": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "216": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "217": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5D3EEA91"
    },
    "222": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "223": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x256"
    },
    "226": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "227": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "228": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x715018A6"
    },
    "233": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "234": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x276"
    },
    "237": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "238": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "239": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7B4BC935"
    },
    "244": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "245": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B"
    },
    "248": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "249": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "252": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "REVERT",
      "path": "13"
    },
    "253": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "254": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "255": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x60C8AD7"
    },
    "260": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "261": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14E"
    },
    "264": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "265": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "266": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7D0E540"
    },
    "271": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "272": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x172"
    },
    "275": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "276": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "277": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7DC739F"
    },
    "282": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "283": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1AA"
    },
    "286": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "287": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "288": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDF8D1E8"
    },
    "293": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "294": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1D7"
    },
    "297": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "298": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "299": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x1B7E5127"
    },
    "304": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "EQ",
      "path": "13"
    },
    "305": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1EC"
    },
    "308": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "309": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "311": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "312": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "REVERT",
      "path": "13"
    },
    "313": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "314": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "315": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x149"
    },
    "318": {
      "fn": null,
      "offset": [
        829,
        8151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "319": {
      "fn": "StakingPool.<receive>",
      "offset": [
        2359,
        2392
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 0,
      "value": "0x147"
    },
    "322": {
      "fn": "StakingPool.<receive>",
      "offset": [
        2382,
        2391
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "323": {
      "fn": "StakingPool.<receive>",
      "offset": [
        2359,
        2381
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x42A"
    },
    "326": {
      "fn": "StakingPool.<receive>",
      "jump": "i",
      "offset": [
        2359,
        2392
      ],
      "op": "JUMP",
      "path": "13"
    },
    "327": {
      "fn": "StakingPool.<receive>",
      "offset": [
        2359,
        2392
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "328": {
      "offset": [
        829,
        8151
      ],
      "op": "STOP",
      "path": "13"
    },
    "329": {
      "fn": "StakingPool.<receive>",
      "offset": [
        829,
        8151
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "330": {
      "fn": "StakingPool.<receive>",
      "offset": [
        829,
        8151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "332": {
      "fn": "StakingPool.<receive>",
      "offset": [
        829,
        8151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "333": {
      "first_revert": true,
      "fn": "StakingPool.<receive>",
      "offset": [
        829,
        8151
      ],
      "op": "REVERT",
      "path": "13"
    },
    "334": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "335": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "336": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "DUP1",
      "path": "13"
    },
    "337": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "338": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15A"
    },
    "341": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "342": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "344": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "DUP1",
      "path": "13"
    },
    "345": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "REVERT",
      "path": "13"
    },
    "346": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "347": {
      "op": "POP"
    },
    "348": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3265,
        3278
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 1,
      "value": "0x9"
    },
    "350": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3265,
        3278
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "351": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "352": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "354": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "355": {
      "op": "SWAP1"
    },
    "356": {
      "op": "DUP2"
    },
    "357": {
      "op": "MSTORE"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "360": {
      "op": "ADD"
    },
    "361": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "362": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "364": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "365": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "DUP1",
      "path": "13"
    },
    "366": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "367": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "SUB",
      "path": "13"
    },
    "368": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "369": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        3190,
        3285
      ],
      "op": "RETURN",
      "path": "13"
    },
    "370": {
      "offset": [
        1098,
        1127
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "371": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "372": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "DUP1",
      "path": "13"
    },
    "373": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "374": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x17E"
    },
    "377": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "378": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "380": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "DUP1",
      "path": "13"
    },
    "381": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "REVERT",
      "path": "13"
    },
    "382": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "383": {
      "op": "POP"
    },
    "384": {
      "offset": [
        1098,
        1127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "386": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "387": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x192"
    },
    "390": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "offset": [
        1098,
        1127
      ],
      "op": "AND",
      "path": "13"
    },
    "400": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "DUP2",
      "path": "13"
    },
    "401": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "JUMP",
      "path": "13"
    },
    "402": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "403": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "405": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1098,
        1127
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "op": "SWAP1"
    },
    "415": {
      "op": "SWAP2"
    },
    "416": {
      "op": "AND"
    },
    "417": {
      "op": "DUP2"
    },
    "418": {
      "op": "MSTORE"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "421": {
      "op": "ADD"
    },
    "422": {
      "offset": [
        1098,
        1127
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x169"
    },
    "425": {
      "op": "JUMP"
    },
    "426": {
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "427": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "428": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "429": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "430": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1B6"
    },
    "433": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "434": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "436": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "437": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "REVERT",
      "path": "13"
    },
    "438": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "439": {
      "op": "POP"
    },
    "440": {
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1CA"
    },
    "443": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1C5"
    },
    "446": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "447": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "449": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF63"
    },
    "452": {
      "fn": "StakingPool.getBeaconRewards",
      "jump": "i",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMP",
      "path": "13"
    },
    "453": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "454": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x444"
    },
    "457": {
      "fn": "StakingPool.getBeaconRewards",
      "jump": "i",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMP",
      "path": "13"
    },
    "458": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "459": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "461": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "462": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x169"
    },
    "465": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "466": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "467": {
      "fn": "StakingPool.getBeaconRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFC2"
    },
    "470": {
      "fn": "StakingPool.getBeaconRewards",
      "jump": "i",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMP",
      "path": "13"
    },
    "471": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "472": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "473": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "DUP1",
      "path": "13"
    },
    "474": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "475": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E3"
    },
    "478": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "479": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "481": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "DUP1",
      "path": "13"
    },
    "482": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "REVERT",
      "path": "13"
    },
    "483": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "484": {
      "op": "POP"
    },
    "485": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3422,
        3438
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 2,
      "value": "0xA"
    },
    "487": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3422,
        3438
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "488": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15F"
    },
    "491": {
      "fn": "StakingPool.getExecutionRewards",
      "offset": [
        3344,
        3445
      ],
      "op": "JUMP",
      "path": "13"
    },
    "492": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "493": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "494": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "DUP1",
      "path": "13"
    },
    "495": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "496": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F8"
    },
    "499": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "500": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "502": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "DUP1",
      "path": "13"
    },
    "503": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "REVERT",
      "path": "13"
    },
    "504": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "505": {
      "op": "POP"
    },
    "506": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x147"
    },
    "509": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x207"
    },
    "512": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "513": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "515": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF63"
    },
    "518": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        3862,
        4176
      ],
      "op": "JUMP",
      "path": "13"
    },
    "519": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "520": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4F0"
    },
    "523": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        3862,
        4176
      ],
      "op": "JUMP",
      "path": "13"
    },
    "524": {
      "offset": [
        926,
        959
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "525": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "526": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "DUP1",
      "path": "13"
    },
    "527": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "528": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x218"
    },
    "531": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "532": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "534": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "DUP1",
      "path": "13"
    },
    "535": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "REVERT",
      "path": "13"
    },
    "536": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "537": {
      "op": "POP"
    },
    "538": {
      "offset": [
        926,
        959
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "540": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "541": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x192"
    },
    "544": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "551": {
      "op": "SHL"
    },
    "552": {
      "op": "SUB"
    },
    "553": {
      "offset": [
        926,
        959
      ],
      "op": "AND",
      "path": "13"
    },
    "554": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "DUP2",
      "path": "13"
    },
    "555": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        926,
        959
      ],
      "op": "JUMP",
      "path": "13"
    },
    "556": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "557": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "558": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "DUP1",
      "path": "13"
    },
    "559": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "560": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x238"
    },
    "563": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "564": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "566": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "DUP1",
      "path": "13"
    },
    "567": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "REVERT",
      "path": "13"
    },
    "568": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "569": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "POP",
      "path": "13"
    },
    "570": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x241"
    },
    "573": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x54F"
    },
    "576": {
      "fn": "StakingPool.getOperators",
      "jump": "i",
      "offset": [
        2505,
        2603
      ],
      "op": "JUMP",
      "path": "13"
    },
    "577": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "578": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "580": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "581": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x169"
    },
    "584": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "585": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "586": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFDC"
    },
    "589": {
      "fn": "StakingPool.getOperators",
      "jump": "i",
      "offset": [
        2505,
        2603
      ],
      "op": "JUMP",
      "path": "13"
    },
    "590": {
      "fn": "StakingPool.stake",
      "offset": [
        4227,
        4790
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "591": {
      "fn": "StakingPool.stake",
      "offset": [
        4227,
        4790
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x147"
    },
    "594": {
      "fn": "StakingPool.stake",
      "offset": [
        4227,
        4790
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5B5"
    },
    "597": {
      "fn": "StakingPool.stake",
      "jump": "i",
      "offset": [
        4227,
        4790
      ],
      "op": "JUMP",
      "path": "13"
    },
    "598": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "599": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "600": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "DUP1",
      "path": "13"
    },
    "601": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "602": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x262"
    },
    "605": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "606": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "608": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "DUP1",
      "path": "13"
    },
    "609": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "REVERT",
      "path": "13"
    },
    "610": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "611": {
      "op": "POP"
    },
    "612": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x147"
    },
    "615": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x271"
    },
    "618": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "619": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "621": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF63"
    },
    "624": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        4887,
        5179
      ],
      "op": "JUMP",
      "path": "13"
    },
    "625": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "626": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x728"
    },
    "629": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        4887,
        5179
      ],
      "op": "JUMP",
      "path": "13"
    },
    "630": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "631": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "632": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "2"
    },
    "633": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "634": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x282"
    },
    "637": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "638": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "640": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "2"
    },
    "641": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "REVERT",
      "path": "2"
    },
    "642": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "643": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "POP",
      "path": "2"
    },
    "644": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x147"
    },
    "647": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x893"
    },
    "650": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "651": {
      "offset": [
        1039,
        1092
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "652": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "653": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "DUP1",
      "path": "13"
    },
    "654": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "655": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x297"
    },
    "658": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "659": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "661": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "DUP1",
      "path": "13"
    },
    "662": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "REVERT",
      "path": "13"
    },
    "663": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "664": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "POP",
      "path": "13"
    },
    "665": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15F"
    },
    "668": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "701": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "DUP2",
      "path": "13"
    },
    "702": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1039,
        1092
      ],
      "op": "JUMP",
      "path": "13"
    },
    "703": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "704": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "705": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "706": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "707": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "710": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "711": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "713": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "714": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "REVERT",
      "path": "2"
    },
    "715": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "716": {
      "op": "POP"
    },
    "717": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "719": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 3
    },
    "720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "726": {
      "op": "SHL"
    },
    "727": {
      "op": "SUB"
    },
    "728": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "2"
    },
    "729": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x192"
    },
    "732": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "733": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "734": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "735": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "DUP1",
      "path": "13"
    },
    "736": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "737": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E9"
    },
    "740": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "741": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "743": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "DUP1",
      "path": "13"
    },
    "744": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "REVERT",
      "path": "13"
    },
    "745": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "746": {
      "op": "POP"
    },
    "747": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x147"
    },
    "750": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2F8"
    },
    "753": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "754": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "756": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x113E"
    },
    "759": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        6428,
        7598
      ],
      "op": "JUMP",
      "path": "13"
    },
    "760": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "761": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8A7"
    },
    "764": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        6428,
        7598
      ],
      "op": "JUMP",
      "path": "13"
    },
    "765": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "766": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "767": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "DUP1",
      "path": "13"
    },
    "768": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "769": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x309"
    },
    "772": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "773": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "775": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "DUP1",
      "path": "13"
    },
    "776": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "REVERT",
      "path": "13"
    },
    "777": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "778": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "POP",
      "path": "13"
    },
    "779": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x312"
    },
    "782": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA5A"
    },
    "785": {
      "fn": "StakingPool.getValidators",
      "jump": "i",
      "offset": [
        2661,
        2757
      ],
      "op": "JUMP",
      "path": "13"
    },
    "786": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "787": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "789": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "790": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x169"
    },
    "793": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "794": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "795": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1224"
    },
    "798": {
      "fn": "StakingPool.getValidators",
      "jump": "i",
      "offset": [
        2661,
        2757
      ],
      "op": "JUMP",
      "path": "13"
    },
    "799": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "800": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "801": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "DUP1",
      "path": "13"
    },
    "802": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "803": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x32B"
    },
    "806": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "807": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "809": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "DUP1",
      "path": "13"
    },
    "810": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "REVERT",
      "path": "13"
    },
    "811": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "812": {
      "op": "POP"
    },
    "813": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15F"
    },
    "816": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x33A"
    },
    "819": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "820": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "822": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1286"
    },
    "825": {
      "fn": "StakingPool.getUserStake",
      "jump": "i",
      "offset": [
        2819,
        2940
      ],
      "op": "JUMP",
      "path": "13"
    },
    "826": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "833": {
      "op": "SHL"
    },
    "834": {
      "op": "SUB"
    },
    "835": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2933
      ],
      "op": "AND",
      "path": "13",
      "statement": 4
    },
    "836": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2884,
        2891
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "838": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2933
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "839": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2933
      ],
      "op": "DUP2",
      "path": "13"
    },
    "840": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2933
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "841": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2919
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "843": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2933
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "845": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2933
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "846": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2933
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "848": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2933
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "849": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2933
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "850": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2933
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "851": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2910,
        2933
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "852": {
      "fn": "StakingPool.getUserStake",
      "offset": [
        2819,
        2940
      ],
      "op": "JUMP",
      "path": "13"
    },
    "853": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "854": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "855": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "DUP1",
      "path": "13"
    },
    "856": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "857": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x361"
    },
    "860": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "861": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "863": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "DUP1",
      "path": "13"
    },
    "864": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "REVERT",
      "path": "13"
    },
    "865": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "866": {
      "op": "POP"
    },
    "867": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x147"
    },
    "870": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x370"
    },
    "873": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "874": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "876": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12AF"
    },
    "879": {
      "fn": "StakingPool.depositValidator",
      "jump": "i",
      "offset": [
        5505,
        6044
      ],
      "op": "JUMP",
      "path": "13"
    },
    "880": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "881": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB33"
    },
    "884": {
      "fn": "StakingPool.depositValidator",
      "jump": "i",
      "offset": [
        5505,
        6044
      ],
      "op": "JUMP",
      "path": "13"
    },
    "885": {
      "offset": [
        1133,
        1165
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "886": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "887": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "DUP1",
      "path": "13"
    },
    "888": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "889": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x381"
    },
    "892": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "893": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "895": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "DUP1",
      "path": "13"
    },
    "896": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "REVERT",
      "path": "13"
    },
    "897": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "898": {
      "op": "POP"
    },
    "899": {
      "offset": [
        1133,
        1165
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "901": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "902": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x192"
    },
    "905": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "912": {
      "op": "SHL"
    },
    "913": {
      "op": "SUB"
    },
    "914": {
      "offset": [
        1133,
        1165
      ],
      "op": "AND",
      "path": "13"
    },
    "915": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "DUP2",
      "path": "13"
    },
    "916": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1133,
        1165
      ],
      "op": "JUMP",
      "path": "13"
    },
    "917": {
      "offset": [
        1013,
        1033
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "918": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "919": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "DUP1",
      "path": "13"
    },
    "920": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "921": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3A1"
    },
    "924": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "925": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "927": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "DUP1",
      "path": "13"
    },
    "928": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "REVERT",
      "path": "13"
    },
    "929": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "offset": [
        1013,
        1033
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "933": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "934": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x192"
    },
    "937": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "944": {
      "op": "SHL"
    },
    "945": {
      "op": "SUB"
    },
    "946": {
      "offset": [
        1013,
        1033
      ],
      "op": "AND",
      "path": "13"
    },
    "947": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "DUP2",
      "path": "13"
    },
    "948": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        1013,
        1033
      ],
      "op": "JUMP",
      "path": "13"
    },
    "949": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "950": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "951": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "DUP1",
      "path": "13"
    },
    "952": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "953": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3C1"
    },
    "956": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "957": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "959": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "DUP1",
      "path": "13"
    },
    "960": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "REVERT",
      "path": "13"
    },
    "961": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "962": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "POP",
      "path": "13"
    },
    "963": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15F"
    },
    "966": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC21"
    },
    "969": {
      "fn": "StakingPool.getShareprice",
      "jump": "i",
      "offset": [
        2993,
        3134
      ],
      "op": "JUMP",
      "path": "13"
    },
    "970": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "971": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "972": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "973": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "974": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3D6"
    },
    "977": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "978": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "980": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "DUP1",
      "path": "13"
    },
    "981": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "REVERT",
      "path": "13"
    },
    "982": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "983": {
      "op": "POP"
    },
    "984": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x147"
    },
    "987": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3E5"
    },
    "990": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "991": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "993": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1352"
    },
    "996": {
      "fn": "StakingPool.updateOperators",
      "jump": "i",
      "offset": [
        3560,
        3726
      ],
      "op": "JUMP",
      "path": "13"
    },
    "997": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "998": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC94"
    },
    "1001": {
      "fn": "StakingPool.updateOperators",
      "jump": "i",
      "offset": [
        3560,
        3726
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1002": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1003": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1004": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1005": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F6"
    },
    "1009": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1010": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1012": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1013": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1014": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x147"
    },
    "1019": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x405"
    },
    "1022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1023": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1025": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1286"
    },
    "1028": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1029": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE4"
    },
    "1033": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1034": {
      "offset": [
        884,
        920
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1035": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1038": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x416"
    },
    "1041": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1046": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1047": {
      "op": "POP"
    },
    "1048": {
      "offset": [
        884,
        920
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "1050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x192"
    },
    "1054": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "op": "SUB"
    },
    "1063": {
      "offset": [
        884,
        920
      ],
      "op": "AND",
      "path": "13"
    },
    "1064": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1065": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        884,
        920
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1066": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7728,
        7856
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1067": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7829,
        7849
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 5
    },
    "1068": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7825
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "1070": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7825
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1072": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7849
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1073": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7849
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1074": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7849
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1075": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7849
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x43C"
    },
    "1078": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7849
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1079": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7849
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1080": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7849
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13ED"
    },
    "1083": {
      "fn": "StakingPool.updateExecutionRewards",
      "jump": "i",
      "offset": [
        7809,
        7849
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1084": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7849
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1085": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7849
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1086": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7849
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1087": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        7809,
        7849
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "fn": "StakingPool.updateExecutionRewards",
      "jump": "o",
      "offset": [
        7728,
        7856
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1092": {
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1093": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1095": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1096": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1097": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1098": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1099": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "LT",
      "path": "13"
    },
    "1100": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x454"
    },
    "1103": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1104": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1106": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1107": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1108": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1109": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1110": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1112": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1113": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1115": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1117": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1118": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ADD",
      "path": "13"
    },
    "1119": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1121": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1122": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "POP",
      "path": "13"
    },
    "1123": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1124": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "POP",
      "path": "13"
    },
    "1125": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1126": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1127": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x46F"
    },
    "1130": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1131": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1400"
    },
    "1134": {
      "fn": "StakingPool.updateExecutionRewards",
      "jump": "i",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1135": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1136": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1137": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1139": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ADD",
      "path": "13"
    },
    "1140": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1142": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1143": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1144": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DIV",
      "path": "13"
    },
    "1145": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "MUL",
      "path": "13"
    },
    "1146": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1148": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ADD",
      "path": "13"
    },
    "1149": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1151": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1152": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1153": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1154": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ADD",
      "path": "13"
    },
    "1155": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1157": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1158": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1159": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1160": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1161": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1162": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1163": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1164": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1165": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1167": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ADD",
      "path": "13"
    },
    "1168": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1169": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1170": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1171": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x49B"
    },
    "1174": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1175": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1400"
    },
    "1178": {
      "fn": "StakingPool.updateExecutionRewards",
      "jump": "i",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1179": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1180": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1181": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1182": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4E8"
    },
    "1185": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1186": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1187": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1189": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "LT",
      "path": "13"
    },
    "1190": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4BD"
    },
    "1193": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1194": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "1197": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1198": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1199": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1200": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DIV",
      "path": "13"
    },
    "1201": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "MUL",
      "path": "13"
    },
    "1202": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1203": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1204": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1205": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1207": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ADD",
      "path": "13"
    },
    "1208": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1209": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4E8"
    },
    "1212": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1213": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1214": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1215": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ADD",
      "path": "13"
    },
    "1216": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1217": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1218": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1220": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1221": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1223": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1225": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1226": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1227": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1228": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1229": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1230": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1231": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1232": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1233": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1235": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ADD",
      "path": "13"
    },
    "1236": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1237": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1239": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ADD",
      "path": "13"
    },
    "1240": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1241": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1242": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "GT",
      "path": "13"
    },
    "1243": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4CB"
    },
    "1246": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1247": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1248": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1249": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SUB",
      "path": "13"
    },
    "1250": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1252": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "AND",
      "path": "13"
    },
    "1253": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1254": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "ADD",
      "path": "13"
    },
    "1255": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1256": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1257": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "POP",
      "path": "13"
    },
    "1258": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "POP",
      "path": "13"
    },
    "1259": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "POP",
      "path": "13"
    },
    "1260": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "POP",
      "path": "13"
    },
    "1261": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "POP",
      "path": "13"
    },
    "1262": {
      "fn": "StakingPool.updateExecutionRewards",
      "offset": [
        1198,
        1223
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1263": {
      "fn": "StakingPool.updateExecutionRewards",
      "jump": "o",
      "offset": [
        1198,
        1223
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1264": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1265": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F8"
    },
    "1268": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5D"
    },
    "1271": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1272": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1273": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3947,
        3960
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 6,
      "value": "0x9"
    },
    "1275": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3947,
        3980
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1276": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3947,
        3980
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1277": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3947,
        3980
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "1278": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4104,
        4114
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1280": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4104,
        4121
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1281": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3990,
        4012
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1283": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3990,
        4012
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1284": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4104,
        4126
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x50E"
    },
    "1287": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4104,
        4126
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1288": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4124,
        4126
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1290": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4104,
        4126
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x143A"
    },
    "1293": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        4104,
        4126
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1294": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4104,
        4126
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1295": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4076,
        4086
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1297": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4076,
        4093
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1298": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4076,
        4098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x51C"
    },
    "1301": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4076,
        4098
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1302": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4096,
        4098
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1304": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4076,
        4098
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x143A"
    },
    "1307": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        4076,
        4098
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1308": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4076,
        4098
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1309": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4044,
        4060
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "1311": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4044,
        4060
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1312": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4029
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x9"
    },
    "1314": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4029
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1315": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4060
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x52C"
    },
    "1318": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4060
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1319": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4060
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1320": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4060
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13ED"
    },
    "1323": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        4016,
        4060
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1324": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1325": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4099
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x536"
    },
    "1328": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4099
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1329": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4099
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1330": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4099
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13ED"
    },
    "1333": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        4016,
        4099
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1334": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4016,
        4099
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1335": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4015,
        4127
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x540"
    },
    "1338": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4015,
        4127
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1339": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4015,
        4127
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1340": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4015,
        4127
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1451"
    },
    "1343": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        4015,
        4127
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1344": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4015,
        4127
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1345": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3990,
        4127
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1346": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3990,
        4127
      ],
      "op": "POP",
      "path": "13"
    },
    "1347": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4137,
        4169
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 7,
      "value": "0x54B"
    },
    "1350": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4154,
        4168
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1351": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4137,
        4153
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDB7"
    },
    "1354": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "i",
      "offset": [
        4137,
        4169
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1355": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        4137,
        4169
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1356": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3937,
        4176
      ],
      "op": "POP",
      "path": "13"
    },
    "1357": {
      "fn": "StakingPool.updateBeaconRewards",
      "offset": [
        3862,
        4176
      ],
      "op": "POP",
      "path": "13"
    },
    "1358": {
      "fn": "StakingPool.updateBeaconRewards",
      "jump": "o",
      "offset": [
        3862,
        4176
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1359": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1360": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2550,
        2566
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x557"
    },
    "1363": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2550,
        2566
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE94"
    },
    "1366": {
      "fn": "StakingPool.getOperators",
      "jump": "i",
      "offset": [
        2550,
        2566
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1367": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2550,
        2566
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1368": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 8,
      "value": "0x40"
    },
    "1370": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1371": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1372": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "1374": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1375": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "ADD",
      "path": "13"
    },
    "1376": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1377": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1378": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1379": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1380": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1381": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2585,
        2596
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "1383": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2585,
        2596
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1384": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1386": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1387": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2585,
        2596
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1390": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP6",
      "path": "13"
    },
    "1391": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1392": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1393": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1394": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1395": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1396": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1397": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "1400": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "EXP",
      "path": "13"
    },
    "1401": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1402": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DIV",
      "path": "13"
    },
    "1403": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "1408": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "AND",
      "path": "13"
    },
    "1409": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "1414": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "AND",
      "path": "13"
    },
    "1415": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1416": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1417": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1419": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "ADD",
      "path": "13"
    },
    "1420": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1421": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1423": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "ADD",
      "path": "13"
    },
    "1424": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1425": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1427": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1428": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "1430": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "ADD",
      "path": "13"
    },
    "1431": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DIV",
      "path": "13"
    },
    "1432": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1433": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1434": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "ADD",
      "path": "13"
    },
    "1435": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1436": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1438": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SUB",
      "path": "13"
    },
    "1439": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1440": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "MUL",
      "path": "13"
    },
    "1441": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1442": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "POP",
      "path": "13"
    },
    "1443": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1444": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1445": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "GT",
      "path": "13"
    },
    "1446": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x56F"
    },
    "1449": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1450": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1451": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "POP",
      "path": "13"
    },
    "1452": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "POP",
      "path": "13"
    },
    "1453": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "POP",
      "path": "13"
    },
    "1454": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "POP",
      "path": "13"
    },
    "1455": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "POP",
      "path": "13"
    },
    "1456": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "POP",
      "path": "13"
    },
    "1457": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1458": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2578,
        2596
      ],
      "op": "POP",
      "path": "13"
    },
    "1459": {
      "fn": "StakingPool.getOperators",
      "offset": [
        2505,
        2603
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1460": {
      "fn": "StakingPool.getOperators",
      "jump": "o",
      "offset": [
        2505,
        2603
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1461": {
      "fn": "StakingPool.stake",
      "offset": [
        4227,
        4790
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1462": {
      "fn": "StakingPool.stake",
      "offset": [
        4492,
        4493
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x0"
    },
    "1464": {
      "fn": "StakingPool.stake",
      "offset": [
        4479,
        4488
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1465": {
      "branch": 35,
      "fn": "StakingPool.stake",
      "offset": [
        4479,
        4493
      ],
      "op": "GT",
      "path": "13"
    },
    "1466": {
      "fn": "StakingPool.stake",
      "offset": [
        4475,
        4570
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5DD"
    },
    "1469": {
      "branch": 35,
      "fn": "StakingPool.stake",
      "offset": [
        4475,
        4570
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1470": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1472": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1473": {
      "op": "PUSH4",
      "value": "0x9ED431AD"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1482": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1483": {
      "fn": "StakingPool.stake",
      "offset": [
        4549,
        4558
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1484": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1486": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1487": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "ADD",
      "path": "13"
    },
    "1488": {
      "op": "MSTORE"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1491": {
      "op": "ADD"
    },
    "1492": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1493": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1495": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1496": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1497": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1498": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "SUB",
      "path": "13"
    },
    "1499": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1500": {
      "fn": "StakingPool.stake",
      "offset": [
        4516,
        4559
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1501": {
      "fn": "StakingPool.stake",
      "offset": [
        4475,
        4570
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1502": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4622
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1504": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4622
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1505": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4622
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1506": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1508": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1509": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1510": {
      "op": "PUSH4",
      "value": "0x87269729"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1517": {
      "op": "SHL"
    },
    "1518": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1519": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1520": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1521": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1522": {
      "fn": "StakingPool.stake",
      "offset": [
        4579,
        4600
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1524": {
      "fn": "StakingPool.stake",
      "offset": [
        4579,
        4600
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1525": {
      "fn": "StakingPool.stake",
      "offset": [
        4639,
        4643
      ],
      "op": "PUSH8",
      "path": "13",
      "value": "0xDE0B6B3A7640000"
    },
    "1534": {
      "fn": "StakingPool.stake",
      "offset": [
        4639,
        4643
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1541": {
      "op": "SHL"
    },
    "1542": {
      "op": "SUB"
    },
    "1543": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4622
      ],
      "op": "AND",
      "path": "13"
    },
    "1544": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4622
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1545": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4633
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x87269729"
    },
    "1550": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4633
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1551": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1552": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1553": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "ADD",
      "path": "13"
    },
    "1554": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1555": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1557": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1558": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1559": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1560": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "SUB",
      "path": "13"
    },
    "1561": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "ADD",
      "path": "13"
    },
    "1562": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1563": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4622
      ],
      "op": "DUP7",
      "path": "13"
    },
    "1564": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "GAS",
      "path": "13"
    },
    "1565": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "1566": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1567": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1568": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1569": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x62E"
    },
    "1572": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1573": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1574": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1576": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1577": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1578": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1579": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1581": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1582": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1583": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "POP",
      "path": "13"
    },
    "1584": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "POP",
      "path": "13"
    },
    "1585": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "POP",
      "path": "13"
    },
    "1586": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "POP",
      "path": "13"
    },
    "1587": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1589": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1590": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1591": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1593": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "NOT",
      "path": "13"
    },
    "1594": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1596": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1597": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "ADD",
      "path": "13"
    },
    "1598": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "AND",
      "path": "13"
    },
    "1599": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1600": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "ADD",
      "path": "13"
    },
    "1601": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1602": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1604": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1605": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "POP",
      "path": "13"
    },
    "1606": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1607": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "ADD",
      "path": "13"
    },
    "1608": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1609": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x652"
    },
    "1612": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1613": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1614": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1473"
    },
    "1617": {
      "fn": "StakingPool.stake",
      "jump": "i",
      "offset": [
        4616,
        4635
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1618": {
      "fn": "StakingPool.stake",
      "offset": [
        4616,
        4635
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1619": {
      "fn": "StakingPool.stake",
      "offset": [
        4604,
        4635
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x65C"
    },
    "1622": {
      "fn": "StakingPool.stake",
      "offset": [
        4604,
        4635
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1623": {
      "fn": "StakingPool.stake",
      "offset": [
        4604,
        4613
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1624": {
      "fn": "StakingPool.stake",
      "offset": [
        4604,
        4635
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x143A"
    },
    "1627": {
      "fn": "StakingPool.stake",
      "jump": "i",
      "offset": [
        4604,
        4635
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1628": {
      "fn": "StakingPool.stake",
      "offset": [
        4604,
        4635
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1629": {
      "fn": "StakingPool.stake",
      "offset": [
        4603,
        4643
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x666"
    },
    "1632": {
      "fn": "StakingPool.stake",
      "offset": [
        4603,
        4643
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1633": {
      "fn": "StakingPool.stake",
      "offset": [
        4603,
        4643
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1634": {
      "fn": "StakingPool.stake",
      "offset": [
        4603,
        4643
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1451"
    },
    "1637": {
      "fn": "StakingPool.stake",
      "jump": "i",
      "offset": [
        4603,
        4643
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1638": {
      "fn": "StakingPool.stake",
      "offset": [
        4603,
        4643
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1639": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4659
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 10,
      "value": "0x4"
    },
    "1641": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4659
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1642": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4659
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1643": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1645": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1646": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1653": {
      "op": "SHL"
    },
    "1654": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1655": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1656": {
      "fn": "StakingPool.stake",
      "offset": [
        4665,
        4675
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1657": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1658": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1659": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "ADD",
      "path": "13"
    },
    "1660": {
      "op": "SWAP3"
    },
    "1661": {
      "op": "SWAP1"
    },
    "1662": {
      "op": "SWAP3"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "DUP4"
    },
    "1669": {
      "op": "SWAP1"
    },
    "1670": {
      "op": "MSTORE"
    },
    "1671": {
      "fn": "StakingPool.stake",
      "offset": [
        4579,
        4643
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1672": {
      "fn": "StakingPool.stake",
      "offset": [
        4579,
        4643
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1673": {
      "op": "POP"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1680": {
      "op": "SHL"
    },
    "1681": {
      "op": "SUB"
    },
    "1682": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4659
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1683": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4659
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1684": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4659
      ],
      "op": "AND",
      "path": "13"
    },
    "1685": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4659
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1686": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4664
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x40C10F19"
    },
    "1691": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4664
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1697": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1699": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1700": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1701": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1702": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "SUB",
      "path": "13"
    },
    "1703": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1704": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1706": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1707": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1708": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "1709": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1710": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1711": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1712": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6B8"
    },
    "1715": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1716": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1718": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1719": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1720": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1721": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "POP",
      "path": "13"
    },
    "1722": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "GAS",
      "path": "13"
    },
    "1723": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "CALL",
      "path": "13"
    },
    "1724": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1725": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1726": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1727": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6CC"
    },
    "1730": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1731": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1732": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1734": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1735": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1736": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1737": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1739": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1740": {
      "fn": "StakingPool.stake",
      "offset": [
        4653,
        4691
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1741": {
      "op": "POP"
    },
    "1742": {
      "op": "POP"
    },
    "1743": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 11,
      "value": "0x40"
    },
    "1745": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1746": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1747": {
      "fn": "StakingPool.stake",
      "offset": [
        4717,
        4727
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1748": {
      "op": "DUP2"
    },
    "1749": {
      "op": "MSTORE"
    },
    "1750": {
      "fn": "StakingPool.stake",
      "offset": [
        4729,
        4738
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1753": {
      "op": "DUP3"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "op": "MSTORE"
    },
    "1756": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x8C265ADCFA641899D6632B86254DDA7A76F27701F1D21A732621D51F2328C460"
    },
    "1789": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "1790": {
      "op": "POP"
    },
    "1791": {
      "op": "ADD"
    },
    "1792": {
      "op": "SWAP1"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1796": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1797": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1798": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1799": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "SUB",
      "path": "13"
    },
    "1800": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1801": {
      "fn": "StakingPool.stake",
      "offset": [
        4706,
        4739
      ],
      "op": "LOG1",
      "path": "13"
    },
    "1802": {
      "fn": "StakingPool.stake",
      "offset": [
        4759,
        4769
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 12
    },
    "1803": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4770
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1805": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4770
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1806": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4770
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1807": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4770
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1808": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4758
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "1810": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4770
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1812": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4770
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1813": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4770
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1815": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4770
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1816": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4770
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1817": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4783
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1818": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4783
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1819": {
      "fn": "StakingPool.stake",
      "offset": [
        4774,
        4783
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1820": {
      "fn": "StakingPool.stake",
      "offset": [
        4774,
        4783
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1821": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4770
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1822": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4783
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x43C"
    },
    "1825": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4783
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1826": {
      "fn": "StakingPool.stake",
      "offset": [
        4774,
        4783
      ],
      "op": "DUP5",
      "path": "13"
    },
    "1827": {
      "fn": "StakingPool.stake",
      "offset": [
        4774,
        4783
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1828": {
      "fn": "StakingPool.stake",
      "offset": [
        4749,
        4783
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13ED"
    },
    "1831": {
      "fn": "StakingPool.stake",
      "jump": "i",
      "offset": [
        4749,
        4783
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1832": {
      "fn": "StakingPool.unStake",
      "offset": [
        4887,
        5179
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1833": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4944
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 13,
      "value": "0x4"
    },
    "1835": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4944
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1836": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4944
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1837": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1839": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1840": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1847": {
      "op": "SHL"
    },
    "1848": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1849": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1850": {
      "fn": "StakingPool.unStake",
      "offset": [
        4958,
        4968
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1851": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "1852": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1853": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "ADD",
      "path": "13"
    },
    "1854": {
      "op": "SWAP3"
    },
    "1855": {
      "op": "SWAP1"
    },
    "1856": {
      "op": "SWAP3"
    },
    "1857": {
      "op": "MSTORE"
    },
    "1858": {
      "fn": "StakingPool.unStake",
      "offset": [
        4978,
        4982
      ],
      "op": "ADDRESS",
      "path": "13"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1861": {
      "op": "DUP4"
    },
    "1862": {
      "op": "ADD"
    },
    "1863": {
      "op": "MSTORE"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1866": {
      "op": "DUP3"
    },
    "1867": {
      "op": "ADD"
    },
    "1868": {
      "op": "DUP4"
    },
    "1869": {
      "op": "SWAP1"
    },
    "1870": {
      "op": "MSTORE"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1877": {
      "op": "SHL"
    },
    "1878": {
      "op": "SUB"
    },
    "1879": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4944
      ],
      "op": "AND",
      "path": "13"
    },
    "1880": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4944
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1881": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4957
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "1886": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4957
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1889": {
      "op": "ADD"
    },
    "1890": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1892": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1894": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1895": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1896": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP4",
      "path": "13"
    },
    "1897": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "SUB",
      "path": "13"
    },
    "1898": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1899": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1901": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP8",
      "path": "13"
    },
    "1902": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "GAS",
      "path": "13"
    },
    "1903": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "CALL",
      "path": "13"
    },
    "1904": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1905": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1906": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1907": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x780"
    },
    "1910": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1911": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1912": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1914": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1915": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "1916": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1917": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1919": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1920": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1921": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "POP",
      "path": "13"
    },
    "1922": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "POP",
      "path": "13"
    },
    "1923": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "POP",
      "path": "13"
    },
    "1924": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "POP",
      "path": "13"
    },
    "1925": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1927": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1928": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "1929": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1931": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "NOT",
      "path": "13"
    },
    "1932": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "1934": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1935": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "ADD",
      "path": "13"
    },
    "1936": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "AND",
      "path": "13"
    },
    "1937": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP3",
      "path": "13"
    },
    "1938": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "ADD",
      "path": "13"
    },
    "1939": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1940": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1942": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1943": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "POP",
      "path": "13"
    },
    "1944": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1945": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "ADD",
      "path": "13"
    },
    "1946": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1947": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7A4"
    },
    "1950": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1951": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1952": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x148C"
    },
    "1955": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        4938,
        4993
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1956": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1957": {
      "fn": "StakingPool.unStake",
      "offset": [
        4938,
        4993
      ],
      "op": "POP",
      "path": "13"
    },
    "1958": {
      "fn": "StakingPool.unStake",
      "offset": [
        5003,
        5030
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1960": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5050
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1962": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5050
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1964": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5050
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1965": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5050
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1966": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5050
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1967": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5050
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "1970": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5050
      ],
      "op": "EXP",
      "path": "13"
    },
    "1971": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5050
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1972": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5050
      ],
      "op": "DIV",
      "path": "13"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1979": {
      "op": "SHL"
    },
    "1980": {
      "op": "SUB"
    },
    "1981": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5050
      ],
      "op": "AND",
      "path": "13"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1988": {
      "op": "SHL"
    },
    "1989": {
      "op": "SUB"
    },
    "1990": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5061
      ],
      "op": "AND",
      "path": "13"
    },
    "1991": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5061
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x87269729"
    },
    "1996": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1998": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1999": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2000": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "2005": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "AND",
      "path": "13"
    },
    "2006": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "2008": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "SHL",
      "path": "13"
    },
    "2009": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2010": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2011": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2013": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "ADD",
      "path": "13"
    },
    "2014": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2016": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2018": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2019": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2020": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2021": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "SUB",
      "path": "13"
    },
    "2022": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2023": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2024": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "GAS",
      "path": "13"
    },
    "2025": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "2026": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2027": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2028": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2029": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7FA"
    },
    "2032": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2033": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2034": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2036": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2037": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2038": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2039": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2041": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2042": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2043": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "POP",
      "path": "13"
    },
    "2044": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "POP",
      "path": "13"
    },
    "2045": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "POP",
      "path": "13"
    },
    "2046": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "POP",
      "path": "13"
    },
    "2047": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2049": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2050": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2051": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2053": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "NOT",
      "path": "13"
    },
    "2054": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2056": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2057": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "ADD",
      "path": "13"
    },
    "2058": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "AND",
      "path": "13"
    },
    "2059": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2060": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "ADD",
      "path": "13"
    },
    "2061": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2062": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2064": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2065": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "POP",
      "path": "13"
    },
    "2066": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2067": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "ADD",
      "path": "13"
    },
    "2068": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2069": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x81E"
    },
    "2072": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2073": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2074": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1473"
    },
    "2077": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        5044,
        5063
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2078": {
      "fn": "StakingPool.unStake",
      "offset": [
        5044,
        5063
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2079": {
      "fn": "StakingPool.unStake",
      "offset": [
        5034,
        5063
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x828"
    },
    "2082": {
      "fn": "StakingPool.unStake",
      "offset": [
        5034,
        5063
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2083": {
      "fn": "StakingPool.unStake",
      "offset": [
        5034,
        5041
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2084": {
      "fn": "StakingPool.unStake",
      "offset": [
        5034,
        5063
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1451"
    },
    "2087": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        5034,
        5063
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2088": {
      "fn": "StakingPool.unStake",
      "offset": [
        5034,
        5063
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2089": {
      "fn": "StakingPool.unStake",
      "offset": [
        5033,
        5071
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x83A"
    },
    "2092": {
      "fn": "StakingPool.unStake",
      "offset": [
        5033,
        5071
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2093": {
      "fn": "StakingPool.unStake",
      "offset": [
        5067,
        5071
      ],
      "op": "PUSH8",
      "path": "13",
      "value": "0xDE0B6B3A7640000"
    },
    "2102": {
      "fn": "StakingPool.unStake",
      "offset": [
        5033,
        5071
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x143A"
    },
    "2105": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        5033,
        5071
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2106": {
      "fn": "StakingPool.unStake",
      "offset": [
        5033,
        5071
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2107": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 14,
      "value": "0x40"
    },
    "2109": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2110": {
      "fn": "StakingPool.unStake",
      "offset": [
        5003,
        5071
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2111": {
      "fn": "StakingPool.unStake",
      "offset": [
        5003,
        5071
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2112": {
      "op": "POP"
    },
    "2113": {
      "fn": "StakingPool.unStake",
      "offset": [
        5089,
        5099
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2114": {
      "fn": "StakingPool.unStake",
      "offset": [
        5089,
        5099
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2115": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2116": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2117": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8FC"
    },
    "2120": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "MUL",
      "path": "13"
    },
    "2121": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2122": {
      "fn": "StakingPool.unStake",
      "offset": [
        5003,
        5071
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2123": {
      "fn": "StakingPool.unStake",
      "offset": [
        5003,
        5071
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2124": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2126": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2127": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2128": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2129": {
      "fn": "StakingPool.unStake",
      "offset": [
        5003,
        5071
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2130": {
      "fn": "StakingPool.unStake",
      "offset": [
        5089,
        5099
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2131": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2132": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "CALL",
      "path": "13"
    },
    "2133": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2134": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "POP",
      "path": "13"
    },
    "2135": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "POP",
      "path": "13"
    },
    "2136": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "POP",
      "path": "13"
    },
    "2137": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "POP",
      "path": "13"
    },
    "2138": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2139": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2140": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2141": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x86A"
    },
    "2144": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2145": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2146": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2148": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2149": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2150": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2151": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2153": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2154": {
      "fn": "StakingPool.unStake",
      "offset": [
        5081,
        5130
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2155": {
      "op": "POP"
    },
    "2156": {
      "fn": "StakingPool.unStake",
      "offset": [
        5150,
        5160
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 15
    },
    "2157": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5161
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2159": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5161
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2160": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5161
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2161": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5161
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2162": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5149
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "2164": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5161
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2166": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5161
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2167": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5161
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2169": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5161
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2170": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5161
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2171": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5172
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2172": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5172
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2173": {
      "fn": "StakingPool.unStake",
      "offset": [
        5165,
        5172
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2174": {
      "fn": "StakingPool.unStake",
      "offset": [
        5165,
        5172
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2175": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5161
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2176": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5172
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x88A"
    },
    "2179": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2180": {
      "fn": "StakingPool.unStake",
      "offset": [
        5165,
        5172
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2181": {
      "fn": "StakingPool.unStake",
      "offset": [
        5165,
        5172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2182": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5172
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14A9"
    },
    "2185": {
      "fn": "StakingPool.unStake",
      "jump": "i",
      "offset": [
        5140,
        5172
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2186": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5172
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2187": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5172
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2188": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5172
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2189": {
      "fn": "StakingPool.unStake",
      "offset": [
        5140,
        5172
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2190": {
      "op": "POP"
    },
    "2191": {
      "op": "POP"
    },
    "2192": {
      "op": "POP"
    },
    "2193": {
      "op": "POP"
    },
    "2194": {
      "fn": "StakingPool.unStake",
      "jump": "o",
      "offset": [
        4887,
        5179
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2195": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2196": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x89B"
    },
    "2199": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5D"
    },
    "2202": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2203": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 16,
      "value": "0x8A5"
    },
    "2207": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE44"
    },
    "2212": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2213": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2214": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2215": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2216": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6853,
        6874
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 17,
      "value": "0x2"
    },
    "2218": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6853,
        6874
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "op": "SUB"
    },
    "2227": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6853,
        6874
      ],
      "op": "AND",
      "path": "13"
    },
    "2228": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6839,
        6849
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2229": {
      "branch": 36,
      "fn": "StakingPool.depositShares",
      "offset": [
        6839,
        6874
      ],
      "op": "EQ",
      "path": "13"
    },
    "2230": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6835,
        7022
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8E7"
    },
    "2233": {
      "branch": 36,
      "fn": "StakingPool.depositShares",
      "offset": [
        6835,
        7022
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2234": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6976,
        6997
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2236": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6976,
        6997
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2237": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6897,
        7011
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2239": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6897,
        7011
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2240": {
      "op": "PUSH4",
      "value": "0x1F5A31F"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xE7"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6897,
        7011
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2249": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6897,
        7011
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2250": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6948,
        6958
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2251": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6897,
        7011
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2253": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6897,
        7011
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2254": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6897,
        7011
      ],
      "op": "ADD",
      "path": "13"
    },
    "2255": {
      "op": "MSTORE"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2262": {
      "op": "SHL"
    },
    "2263": {
      "op": "SUB"
    },
    "2264": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6976,
        6997
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2265": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6976,
        6997
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2266": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6976,
        6997
      ],
      "op": "AND",
      "path": "13"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2269": {
      "op": "DUP3"
    },
    "2270": {
      "op": "ADD"
    },
    "2271": {
      "op": "MSTORE"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2274": {
      "op": "ADD"
    },
    "2275": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6897,
        7011
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5D4"
    },
    "2278": {
      "op": "JUMP"
    },
    "2279": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6835,
        7022
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2280": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7100,
        7114
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 18,
      "value": "0x5"
    },
    "2282": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7100,
        7114
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2283": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7124,
        7141
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "2285": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7124,
        7141
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2286": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2288": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2289": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2296": {
      "op": "SHL"
    },
    "2297": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2298": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2305": {
      "op": "SHL"
    },
    "2306": {
      "op": "SUB"
    },
    "2307": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7124,
        7141
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2308": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7124,
        7141
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2309": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7124,
        7141
      ],
      "op": "AND",
      "path": "13"
    },
    "2310": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2312": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2313": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "ADD",
      "path": "13"
    },
    "2314": {
      "op": "MSTORE"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2317": {
      "op": "DUP2"
    },
    "2318": {
      "op": "ADD"
    },
    "2319": {
      "op": "DUP6"
    },
    "2320": {
      "op": "SWAP1"
    },
    "2321": {
      "op": "MSTORE"
    },
    "2322": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7100,
        7114
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2323": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7100,
        7114
      ],
      "op": "AND",
      "path": "13"
    },
    "2324": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7100,
        7114
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2325": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7123
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x95EA7B3"
    },
    "2330": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7123
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2333": {
      "op": "ADD"
    },
    "2334": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2336": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2338": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2339": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2340": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2341": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "SUB",
      "path": "13"
    },
    "2342": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2343": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2345": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2346": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "GAS",
      "path": "13"
    },
    "2347": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "CALL",
      "path": "13"
    },
    "2348": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2349": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2350": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2351": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x93C"
    },
    "2354": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2355": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2356": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2358": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2359": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2360": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2361": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2363": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2364": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2365": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "POP",
      "path": "13"
    },
    "2366": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "POP",
      "path": "13"
    },
    "2367": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "POP",
      "path": "13"
    },
    "2368": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "POP",
      "path": "13"
    },
    "2369": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2371": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2372": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2373": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2375": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "NOT",
      "path": "13"
    },
    "2376": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2378": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2379": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "ADD",
      "path": "13"
    },
    "2380": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "AND",
      "path": "13"
    },
    "2381": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2382": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "ADD",
      "path": "13"
    },
    "2383": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2384": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2386": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2387": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "POP",
      "path": "13"
    },
    "2388": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2389": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "ADD",
      "path": "13"
    },
    "2390": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2391": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x960"
    },
    "2394": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2395": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2396": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x148C"
    },
    "2399": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        7093,
        7151
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2400": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7093,
        7151
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7230,
        7247
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 19,
      "value": "0x6"
    },
    "2404": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7230,
        7247
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2405": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2407": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2408": {
      "op": "PUSH4",
      "value": "0x967EF807"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2415": {
      "op": "SHL"
    },
    "2416": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2417": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2424": {
      "op": "SHL"
    },
    "2425": {
      "op": "SUB"
    },
    "2426": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7230,
        7247
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2427": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7230,
        7247
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2428": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7230,
        7247
      ],
      "op": "AND",
      "path": "13"
    },
    "2429": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7230,
        7247
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2430": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7266
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x967EF807"
    },
    "2435": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7266
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2436": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x99F"
    },
    "2439": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2440": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7280,
        7287
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2441": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7280,
        7287
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2442": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7280,
        7287
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2443": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7280,
        7287
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2444": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7301,
        7313
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2445": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7301,
        7313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2446": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7301,
        7313
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2447": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7301,
        7313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2448": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7327,
        7334
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2449": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7327,
        7334
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2450": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7327,
        7334
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2451": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7327,
        7334
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2452": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7348,
        7355
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2453": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7348,
        7355
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2454": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7369,
        7377
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2455": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7369,
        7377
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2456": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2458": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "ADD",
      "path": "13"
    },
    "2459": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14E5"
    },
    "2462": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        7218,
        7387
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2463": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2464": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2466": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2468": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2469": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2470": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2471": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "SUB",
      "path": "13"
    },
    "2472": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2473": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2475": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2476": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2477": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "2478": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2479": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2480": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2481": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9B9"
    },
    "2484": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2485": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2487": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2488": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2489": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2490": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "POP",
      "path": "13"
    },
    "2491": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "GAS",
      "path": "13"
    },
    "2492": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "CALL",
      "path": "13"
    },
    "2493": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2494": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2495": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2496": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9CD"
    },
    "2499": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2500": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2501": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2503": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2504": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2505": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2506": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2508": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2509": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7218,
        7387
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2510": {
      "op": "POP"
    },
    "2511": {
      "op": "POP"
    },
    "2512": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7463
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 20,
      "value": "0x8"
    },
    "2514": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2515": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2516": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2518": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2519": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "ADD",
      "path": "13"
    },
    "2520": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2521": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2524": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2525": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2526": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2527": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2528": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "2561": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "ADD",
      "path": "13"
    },
    "2562": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2563": {
      "op": "POP"
    },
    "2564": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA10"
    },
    "2567": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2568": {
      "op": "POP"
    },
    "2569": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7469,
        7476
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2570": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7469,
        7476
      ],
      "op": "DUP11",
      "path": "13"
    },
    "2571": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2572": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1602"
    },
    "2575": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        7453,
        7477
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2576": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2577": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7453,
        7477
      ],
      "op": "POP",
      "path": "13"
    },
    "2578": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 21,
      "value": "0xB23F6CE72D618DF33A33105741ED7E13469F7F9CA6EDA19E5E505B28783B1F28"
    },
    "2611": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7565,
        7572
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2612": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7565,
        7572
      ],
      "op": "DUP9",
      "path": "13"
    },
    "2613": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7574,
        7581
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2614": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7574,
        7581
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2615": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7583,
        7590
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2616": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2618": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2619": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA48"
    },
    "2622": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "2623": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2624": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2625": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2626": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2627": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2628": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16C3"
    },
    "2631": {
      "fn": "StakingPool.depositShares",
      "jump": "i",
      "offset": [
        7546,
        7591
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2632": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2633": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2635": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2636": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2637": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2638": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "SUB",
      "path": "13"
    },
    "2639": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2640": {
      "fn": "StakingPool.depositShares",
      "offset": [
        7546,
        7591
      ],
      "op": "LOG1",
      "path": "13"
    },
    "2641": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "POP",
      "path": "13"
    },
    "2642": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "POP",
      "path": "13"
    },
    "2643": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "POP",
      "path": "13"
    },
    "2644": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "POP",
      "path": "13"
    },
    "2645": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "POP",
      "path": "13"
    },
    "2646": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "POP",
      "path": "13"
    },
    "2647": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "POP",
      "path": "13"
    },
    "2648": {
      "fn": "StakingPool.depositShares",
      "offset": [
        6428,
        7598
      ],
      "op": "POP",
      "path": "13"
    },
    "2649": {
      "fn": "StakingPool.depositShares",
      "jump": "o",
      "offset": [
        6428,
        7598
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2650": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2651": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2707,
        2721
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2653": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2740,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 22,
      "value": "0x8"
    },
    "2655": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2656": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2657": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2658": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2660": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MUL",
      "path": "13"
    },
    "2661": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2663": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2664": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2666": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2667": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2668": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2669": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2670": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2672": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2673": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2674": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2675": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2676": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2677": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2678": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2679": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2680": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2682": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2683": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2685": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2686": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2687": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2688": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2689": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "LT",
      "path": "13"
    },
    "2690": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2691": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB2A"
    },
    "2694": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2695": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2696": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2697": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2698": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2700": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2701": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2703": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2705": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2706": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2707": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2708": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2709": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA9D"
    },
    "2712": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2713": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1400"
    },
    "2716": {
      "fn": "StakingPool.getValidators",
      "jump": "i",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2717": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2718": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2719": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2721": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2722": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2724": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2725": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2726": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DIV",
      "path": "13"
    },
    "2727": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MUL",
      "path": "13"
    },
    "2728": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2730": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2731": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2733": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2734": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2735": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2736": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2737": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2739": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2740": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2741": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2742": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2743": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2744": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2745": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2746": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2747": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2749": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2750": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2751": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2752": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2753": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAC9"
    },
    "2756": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2757": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1400"
    },
    "2760": {
      "fn": "StakingPool.getValidators",
      "jump": "i",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2761": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2762": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2763": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2764": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB16"
    },
    "2767": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2768": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2769": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2771": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "LT",
      "path": "13"
    },
    "2772": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAEB"
    },
    "2775": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2776": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "2779": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2780": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2781": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2782": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DIV",
      "path": "13"
    },
    "2783": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MUL",
      "path": "13"
    },
    "2784": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2785": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2786": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2787": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2789": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2790": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2791": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB16"
    },
    "2794": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2795": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2796": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2797": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2798": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2799": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2800": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2802": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2803": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2805": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2807": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2808": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2809": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2810": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2811": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2812": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2813": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2814": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2815": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2817": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2818": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2819": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2821": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2822": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2823": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2824": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "GT",
      "path": "13"
    },
    "2825": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAF9"
    },
    "2828": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2829": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2830": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2831": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SUB",
      "path": "13"
    },
    "2832": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2834": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "AND",
      "path": "13"
    },
    "2835": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2836": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2837": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2838": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2839": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "POP",
      "path": "13"
    },
    "2840": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "POP",
      "path": "13"
    },
    "2841": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "POP",
      "path": "13"
    },
    "2842": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "POP",
      "path": "13"
    },
    "2843": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "POP",
      "path": "13"
    },
    "2844": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2845": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2846": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2848": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2849": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2850": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2852": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "ADD",
      "path": "13"
    },
    "2853": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2854": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA7E"
    },
    "2857": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2858": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2859": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "POP",
      "path": "13"
    },
    "2860": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "POP",
      "path": "13"
    },
    "2861": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "POP",
      "path": "13"
    },
    "2862": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "POP",
      "path": "13"
    },
    "2863": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2864": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2733,
        2750
      ],
      "op": "POP",
      "path": "13"
    },
    "2865": {
      "fn": "StakingPool.getValidators",
      "offset": [
        2661,
        2757
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2866": {
      "fn": "StakingPool.getValidators",
      "jump": "o",
      "offset": [
        2661,
        2757
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2867": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2868": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 23,
      "value": "0x40"
    },
    "2870": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2871": {
      "op": "PUSH4",
      "value": "0x4512A23"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2878": {
      "op": "SHL"
    },
    "2879": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2880": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2887": {
      "op": "SHL"
    },
    "2888": {
      "op": "SUB"
    },
    "2889": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5779
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "2922": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5787
      ],
      "op": "AND",
      "path": "13"
    },
    "2923": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5787
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2924": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5787
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x22895118"
    },
    "2929": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5787
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2930": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5795,
        5811
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x0"
    },
    "2963": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5795,
        5811
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2964": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBAD"
    },
    "2967": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2968": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5826,
        5833
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2969": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5826,
        5833
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2970": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5826,
        5833
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2971": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5826,
        5833
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2972": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5847,
        5870
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2973": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5847,
        5870
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2974": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5847,
        5870
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2975": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5847,
        5870
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2976": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5884,
        5894
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2977": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5884,
        5894
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2978": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5884,
        5894
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2979": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5884,
        5894
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2980": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5908,
        5926
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2981": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5908,
        5926
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2982": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2984": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "ADD",
      "path": "13"
    },
    "2985": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16FD"
    },
    "2988": {
      "fn": "StakingPool.depositValidator",
      "jump": "i",
      "offset": [
        5764,
        5936
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2989": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2990": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2992": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2994": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2995": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2996": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2997": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "SUB",
      "path": "13"
    },
    "2998": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2999": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "DUP6",
      "path": "13"
    },
    "3000": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "DUP9",
      "path": "13"
    },
    "3001": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3002": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3003": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3004": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3005": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3006": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBC6"
    },
    "3009": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3010": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3012": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3013": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3014": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3015": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "POP",
      "path": "13"
    },
    "3016": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "GAS",
      "path": "13"
    },
    "3017": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "CALL",
      "path": "13"
    },
    "3018": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3019": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3020": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3021": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBDA"
    },
    "3024": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3025": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3026": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3028": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3029": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3030": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3031": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3033": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3034": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3035": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "POP",
      "path": "13"
    },
    "3036": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "POP",
      "path": "13"
    },
    "3037": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "POP",
      "path": "13"
    },
    "3038": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "POP",
      "path": "13"
    },
    "3039": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5764,
        5936
      ],
      "op": "POP",
      "path": "13"
    },
    "3040": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 24,
      "value": "0x144679C9E19454710222D38E13B257573A15B6CA6A4D10A1254EBC2480CB6863"
    },
    "3073": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6029,
        6036
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3074": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6029,
        6036
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3075": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3077": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3078": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC10"
    },
    "3081": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3082": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3083": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3084": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x174E"
    },
    "3087": {
      "fn": "StakingPool.depositValidator",
      "jump": "i",
      "offset": [
        6013,
        6037
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3088": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3089": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3091": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3092": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3093": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3094": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "SUB",
      "path": "13"
    },
    "3095": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3096": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        6013,
        6037
      ],
      "op": "LOG1",
      "path": "13"
    },
    "3097": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "POP",
      "path": "13"
    },
    "3098": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "POP",
      "path": "13"
    },
    "3099": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "POP",
      "path": "13"
    },
    "3100": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "POP",
      "path": "13"
    },
    "3101": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "POP",
      "path": "13"
    },
    "3102": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "POP",
      "path": "13"
    },
    "3103": {
      "fn": "StakingPool.depositValidator",
      "offset": [
        5505,
        6044
      ],
      "op": "POP",
      "path": "13"
    },
    "3104": {
      "fn": "StakingPool.depositValidator",
      "jump": "o",
      "offset": [
        5505,
        6044
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3105": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3106": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3086
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3108": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3086
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3109": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3086
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3110": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3112": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3113": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3114": {
      "op": "PUSH4",
      "value": "0x87269729"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3121": {
      "op": "SHL"
    },
    "3122": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3123": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3124": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3125": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3126": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3039,
        3046
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3128": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3039,
        3046
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3129": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3039,
        3046
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3130": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3039,
        3046
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3137": {
      "op": "SHL"
    },
    "3138": {
      "op": "SUB"
    },
    "3139": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3086
      ],
      "op": "AND",
      "path": "13"
    },
    "3140": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3086
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3141": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3097
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x87269729"
    },
    "3146": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3097
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3147": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3148": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3149": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "ADD",
      "path": "13"
    },
    "3150": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3151": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3153": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3154": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3155": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3156": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "SUB",
      "path": "13"
    },
    "3157": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "ADD",
      "path": "13"
    },
    "3158": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3159": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3086
      ],
      "op": "DUP7",
      "path": "13"
    },
    "3160": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "GAS",
      "path": "13"
    },
    "3161": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "STATICCALL",
      "path": "13"
    },
    "3162": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3163": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3164": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3165": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC6A"
    },
    "3168": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3169": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3170": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3172": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3173": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3174": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3175": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3177": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3178": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3179": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "POP",
      "path": "13"
    },
    "3180": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "POP",
      "path": "13"
    },
    "3181": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "POP",
      "path": "13"
    },
    "3182": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "POP",
      "path": "13"
    },
    "3183": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3185": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3186": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3187": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3189": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "NOT",
      "path": "13"
    },
    "3190": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3192": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3193": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "ADD",
      "path": "13"
    },
    "3194": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "AND",
      "path": "13"
    },
    "3195": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3196": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "ADD",
      "path": "13"
    },
    "3197": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3198": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3200": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3201": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "POP",
      "path": "13"
    },
    "3202": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3203": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "ADD",
      "path": "13"
    },
    "3204": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3205": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC8E"
    },
    "3208": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3209": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3210": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1473"
    },
    "3213": {
      "fn": "StakingPool.getShareprice",
      "jump": "i",
      "offset": [
        3080,
        3099
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3214": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3080,
        3099
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3215": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        3058,
        3099
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3216": {
      "fn": "StakingPool.getShareprice",
      "offset": [
        2993,
        3134
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3217": {
      "op": "POP"
    },
    "3218": {
      "op": "POP"
    },
    "3219": {
      "fn": "StakingPool.getShareprice",
      "jump": "o",
      "offset": [
        2993,
        3134
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3220": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3221": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC9C"
    },
    "3224": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5D"
    },
    "3227": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3228": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3229": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3644,
        3671
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 25,
      "value": "0xCA9"
    },
    "3232": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3644,
        3655
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "3234": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3658,
        3671
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3235": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3644,
        3671
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3237": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3644,
        3671
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEB2"
    },
    "3240": {
      "fn": "StakingPool.updateOperators",
      "jump": "i",
      "offset": [
        3644,
        3671
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3241": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3644,
        3671
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3242": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3644,
        3671
      ],
      "op": "POP",
      "path": "13"
    },
    "3243": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 26,
      "value": "0xA31D33307023A78B2B477792A91EFBED5EE91448638292C891E81233CB6108F8"
    },
    "3276": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3705,
        3718
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3277": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3279": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3280": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCD9"
    },
    "3283": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3284": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3285": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFDC"
    },
    "3288": {
      "fn": "StakingPool.updateOperators",
      "jump": "i",
      "offset": [
        3686,
        3719
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3289": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3290": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3292": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3293": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3294": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3295": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "SUB",
      "path": "13"
    },
    "3296": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3297": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3686,
        3719
      ],
      "op": "LOG1",
      "path": "13"
    },
    "3298": {
      "fn": "StakingPool.updateOperators",
      "offset": [
        3560,
        3726
      ],
      "op": "POP",
      "path": "13"
    },
    "3299": {
      "fn": "StakingPool.updateOperators",
      "jump": "o",
      "offset": [
        3560,
        3726
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3301": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCEC"
    },
    "3304": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5D"
    },
    "3307": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3308": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3315": {
      "op": "SHL"
    },
    "3316": {
      "op": "SUB"
    },
    "3317": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 27
    },
    "3318": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "2"
    },
    "3319": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD51"
    },
    "3322": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3325": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3326": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3332": {
      "op": "SHL"
    },
    "3333": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3334": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3337": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3339": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3340": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "2"
    },
    "3341": {
      "op": "MSTORE"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3346": {
      "op": "DUP3"
    },
    "3347": {
      "op": "ADD"
    },
    "3348": {
      "op": "MSTORE"
    },
    "3349": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3384": {
      "op": "DUP3"
    },
    "3385": {
      "op": "ADD"
    },
    "3386": {
      "op": "MSTORE"
    },
    "3387": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3396": {
      "op": "SHL"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3399": {
      "op": "DUP3"
    },
    "3400": {
      "op": "ADD"
    },
    "3401": {
      "op": "MSTORE"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3404": {
      "op": "ADD"
    },
    "3405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D4"
    },
    "3408": {
      "op": "JUMP"
    },
    "3409": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3410": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0xD5A"
    },
    "3413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE44"
    },
    "3417": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3419": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "2"
    },
    "3420": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3421": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3422": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3424": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3431": {
      "op": "SHL"
    },
    "3432": {
      "op": "SUB"
    },
    "3433": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "2"
    },
    "3434": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 29
    },
    "3435": {
      "branch": 38,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "2",
      "statement": 30
    },
    "3436": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A5"
    },
    "3439": {
      "branch": 38,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3440": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3442": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3449": {
      "op": "SHL"
    },
    "3450": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3451": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3454": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3456": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3457": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "2"
    },
    "3458": {
      "op": "DUP2"
    },
    "3459": {
      "op": "SWAP1"
    },
    "3460": {
      "op": "MSTORE"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3463": {
      "op": "DUP3"
    },
    "3464": {
      "op": "ADD"
    },
    "3465": {
      "op": "MSTORE"
    },
    "3466": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3501": {
      "op": "DUP3"
    },
    "3502": {
      "op": "ADD"
    },
    "3503": {
      "op": "MSTORE"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3506": {
      "op": "ADD"
    },
    "3507": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D4"
    },
    "3510": {
      "op": "JUMP"
    },
    "3511": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        7986,
        8149
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3512": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8061
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 31,
      "value": "0x4"
    },
    "3514": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8061
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3515": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8061
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3516": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3518": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3519": {
      "op": "PUSH4",
      "value": "0x41640201"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3526": {
      "op": "SHL"
    },
    "3527": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3528": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3529": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3530": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3531": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "ADD",
      "path": "13"
    },
    "3532": {
      "op": "DUP4"
    },
    "3533": {
      "op": "SWAP1"
    },
    "3534": {
      "op": "MSTORE"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3541": {
      "op": "SHL"
    },
    "3542": {
      "op": "SUB"
    },
    "3543": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8061
      ],
      "op": "AND",
      "path": "13"
    },
    "3544": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8061
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3545": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8078
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x41640201"
    },
    "3550": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8078
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3553": {
      "op": "ADD"
    },
    "3554": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3556": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3558": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3559": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3560": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3561": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "SUB",
      "path": "13"
    },
    "3562": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3563": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3565": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3566": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3567": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "EXTCODESIZE",
      "path": "13"
    },
    "3568": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3569": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3570": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3571": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDFB"
    },
    "3574": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3575": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3577": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3578": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3579": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3580": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "POP",
      "path": "13"
    },
    "3581": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "GAS",
      "path": "13"
    },
    "3582": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "CALL",
      "path": "13"
    },
    "3583": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3584": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3585": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3586": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE0F"
    },
    "3589": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3590": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3591": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3593": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3594": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3595": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3596": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3598": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3599": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3600": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "POP",
      "path": "13"
    },
    "3601": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "POP",
      "path": "13"
    },
    "3602": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "POP",
      "path": "13"
    },
    "3603": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8055,
        8094
      ],
      "op": "POP",
      "path": "13"
    },
    "3604": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8109,
        8142
      ],
      "op": "PUSH32",
      "path": "13",
      "statement": 32,
      "value": "0xCE44720B7462058F31DDECAB3DAA427921E5975D9ACB555F043682DADA866569"
    },
    "3637": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8127,
        8141
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3638": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8109,
        8142
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3640": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8109,
        8142
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3641": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8109,
        8142
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCD9"
    },
    "3644": {
      "fn": "StakingPool.updateSharePrice",
      "offset": [
        8109,
        8142
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3645": {
      "op": "DUP2"
    },
    "3646": {
      "op": "MSTORE"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3649": {
      "op": "ADD"
    },
    "3650": {
      "op": "SWAP1"
    },
    "3651": {
      "op": "JUMP"
    },
    "3652": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3653": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3655": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3656": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3663": {
      "op": "SHL"
    },
    "3664": {
      "op": "SUB"
    },
    "3665": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 33
    },
    "3666": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3667": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "2"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3674": {
      "op": "SHL"
    },
    "3675": {
      "op": "SUB"
    },
    "3676": {
      "op": "NOT"
    },
    "3677": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3678": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "2"
    },
    "3679": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3680": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "2"
    },
    "3681": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3682": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3683": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 34,
      "value": "0x40"
    },
    "3685": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3686": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3687": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3688": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3689": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "2"
    },
    "3690": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3691": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3692": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3693": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3726": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3727": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3728": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3729": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "2"
    },
    "3730": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "2"
    },
    "3731": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3732": {
      "op": "JUMPDEST"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3735": {
      "op": "MLOAD"
    },
    "3736": {
      "op": "DUP1"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3739": {
      "op": "ADD"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3742": {
      "op": "MSTORE"
    },
    "3743": {
      "op": "DUP1"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3746": {
      "op": "SWAP1"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3749": {
      "op": "DUP3"
    },
    "3750": {
      "op": "MUL"
    },
    "3751": {
      "op": "DUP1"
    },
    "3752": {
      "op": "CALLDATASIZE"
    },
    "3753": {
      "op": "DUP4"
    },
    "3754": {
      "op": "CALLDATACOPY"
    },
    "3755": {
      "op": "POP"
    },
    "3756": {
      "op": "SWAP2"
    },
    "3757": {
      "op": "SWAP3"
    },
    "3758": {
      "op": "SWAP2"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "op": "POP"
    },
    "3761": {
      "jump": "o",
      "op": "JUMP"
    },
    "3762": {
      "op": "JUMPDEST"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3765": {
      "op": "DUP4"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "op": "SWAP2"
    },
    "3768": {
      "op": "DUP4"
    },
    "3769": {
      "op": "SWAP1"
    },
    "3770": {
      "op": "DUP3"
    },
    "3771": {
      "op": "ISZERO"
    },
    "3772": {
      "op": "PUSH2",
      "value": "0xF3E"
    },
    "3775": {
      "op": "JUMPI"
    },
    "3776": {
      "op": "SWAP2"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3779": {
      "op": "MUL"
    },
    "3780": {
      "op": "DUP3"
    },
    "3781": {
      "op": "ADD"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3784": {
      "op": "JUMPDEST"
    },
    "3785": {
      "op": "DUP4"
    },
    "3786": {
      "op": "DUP3"
    },
    "3787": {
      "op": "GT"
    },
    "3788": {
      "op": "ISZERO"
    },
    "3789": {
      "op": "PUSH2",
      "value": "0xF0C"
    },
    "3792": {
      "op": "JUMPI"
    },
    "3793": {
      "op": "DUP4"
    },
    "3794": {
      "op": "MLOAD"
    },
    "3795": {
      "op": "DUP4"
    },
    "3796": {
      "op": "DUP3"
    },
    "3797": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3800": {
      "op": "EXP"
    },
    "3801": {
      "op": "DUP2"
    },
    "3802": {
      "op": "SLOAD"
    },
    "3803": {
      "op": "DUP2"
    },
    "3804": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3809": {
      "op": "MUL"
    },
    "3810": {
      "op": "NOT"
    },
    "3811": {
      "op": "AND"
    },
    "3812": {
      "op": "SWAP1"
    },
    "3813": {
      "op": "DUP4"
    },
    "3814": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3819": {
      "op": "AND"
    },
    "3820": {
      "op": "MUL"
    },
    "3821": {
      "op": "OR"
    },
    "3822": {
      "op": "SWAP1"
    },
    "3823": {
      "op": "SSTORE"
    },
    "3824": {
      "op": "POP"
    },
    "3825": {
      "op": "SWAP3"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3828": {
      "op": "ADD"
    },
    "3829": {
      "op": "SWAP3"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3832": {
      "op": "ADD"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3835": {
      "op": "DUP2"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3838": {
      "op": "ADD"
    },
    "3839": {
      "op": "DIV"
    },
    "3840": {
      "op": "SWAP3"
    },
    "3841": {
      "op": "DUP4"
    },
    "3842": {
      "op": "ADD"
    },
    "3843": {
      "op": "SWAP3"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3846": {
      "op": "SUB"
    },
    "3847": {
      "op": "MUL"
    },
    "3848": {
      "op": "PUSH2",
      "value": "0xEC8"
    },
    "3851": {
      "op": "JUMP"
    },
    "3852": {
      "op": "JUMPDEST"
    },
    "3853": {
      "op": "DUP1"
    },
    "3854": {
      "op": "ISZERO"
    },
    "3855": {
      "op": "PUSH2",
      "value": "0xF3C"
    },
    "3858": {
      "op": "JUMPI"
    },
    "3859": {
      "op": "DUP3"
    },
    "3860": {
      "op": "DUP2"
    },
    "3861": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3864": {
      "op": "EXP"
    },
    "3865": {
      "op": "DUP2"
    },
    "3866": {
      "op": "SLOAD"
    },
    "3867": {
      "op": "SWAP1"
    },
    "3868": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3873": {
      "op": "MUL"
    },
    "3874": {
      "op": "NOT"
    },
    "3875": {
      "op": "AND"
    },
    "3876": {
      "op": "SWAP1"
    },
    "3877": {
      "op": "SSTORE"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3880": {
      "op": "ADD"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3883": {
      "op": "DUP2"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "DIV"
    },
    "3888": {
      "op": "SWAP3"
    },
    "3889": {
      "op": "DUP4"
    },
    "3890": {
      "op": "ADD"
    },
    "3891": {
      "op": "SWAP3"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3894": {
      "op": "SUB"
    },
    "3895": {
      "op": "MUL"
    },
    "3896": {
      "op": "PUSH2",
      "value": "0xF0C"
    },
    "3899": {
      "op": "JUMP"
    },
    "3900": {
      "op": "JUMPDEST"
    },
    "3901": {
      "op": "POP"
    },
    "3902": {
      "op": "JUMPDEST"
    },
    "3903": {
      "op": "POP"
    },
    "3904": {
      "op": "PUSH2",
      "value": "0xF4A"
    },
    "3907": {
      "op": "SWAP3"
    },
    "3908": {
      "op": "SWAP2"
    },
    "3909": {
      "op": "POP"
    },
    "3910": {
      "op": "PUSH2",
      "value": "0xF4E"
    },
    "3913": {
      "jump": "i",
      "op": "JUMP"
    },
    "3914": {
      "op": "JUMPDEST"
    },
    "3915": {
      "op": "POP"
    },
    "3916": {
      "op": "SWAP1"
    },
    "3917": {
      "jump": "o",
      "op": "JUMP"
    },
    "3918": {
      "op": "JUMPDEST"
    },
    "3919": {
      "op": "JUMPDEST"
    },
    "3920": {
      "op": "DUP1"
    },
    "3921": {
      "op": "DUP3"
    },
    "3922": {
      "op": "GT"
    },
    "3923": {
      "op": "ISZERO"
    },
    "3924": {
      "op": "PUSH2",
      "value": "0xF4A"
    },
    "3927": {
      "op": "JUMPI"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3930": {
      "op": "DUP2"
    },
    "3931": {
      "op": "SSTORE"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3934": {
      "op": "ADD"
    },
    "3935": {
      "op": "PUSH2",
      "value": "0xF4F"
    },
    "3938": {
      "op": "JUMP"
    },
    "3939": {
      "op": "JUMPDEST"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3944": {
      "op": "DUP3"
    },
    "3945": {
      "op": "DUP5"
    },
    "3946": {
      "op": "SUB"
    },
    "3947": {
      "op": "SLT"
    },
    "3948": {
      "op": "ISZERO"
    },
    "3949": {
      "op": "PUSH2",
      "value": "0xF75"
    },
    "3952": {
      "op": "JUMPI"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3955": {
      "op": "DUP1"
    },
    "3956": {
      "op": "REVERT"
    },
    "3957": {
      "op": "JUMPDEST"
    },
    "3958": {
      "op": "POP"
    },
    "3959": {
      "op": "CALLDATALOAD"
    },
    "3960": {
      "op": "SWAP2"
    },
    "3961": {
      "op": "SWAP1"
    },
    "3962": {
      "op": "POP"
    },
    "3963": {
      "jump": "o",
      "op": "JUMP"
    },
    "3964": {
      "op": "JUMPDEST"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3967": {
      "op": "DUP2"
    },
    "3968": {
      "op": "MLOAD"
    },
    "3969": {
      "op": "DUP1"
    },
    "3970": {
      "op": "DUP5"
    },
    "3971": {
      "op": "MSTORE"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3974": {
      "op": "JUMPDEST"
    },
    "3975": {
      "op": "DUP2"
    },
    "3976": {
      "op": "DUP2"
    },
    "3977": {
      "op": "LT"
    },
    "3978": {
      "op": "ISZERO"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0xFA2"
    },
    "3982": {
      "op": "JUMPI"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3985": {
      "op": "DUP2"
    },
    "3986": {
      "op": "DUP6"
    },
    "3987": {
      "op": "ADD"
    },
    "3988": {
      "op": "DUP2"
    },
    "3989": {
      "op": "ADD"
    },
    "3990": {
      "op": "MLOAD"
    },
    "3991": {
      "op": "DUP7"
    },
    "3992": {
      "op": "DUP4"
    },
    "3993": {
      "op": "ADD"
    },
    "3994": {
      "op": "DUP3"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "MSTORE"
    },
    "3997": {
      "op": "ADD"
    },
    "3998": {
      "op": "PUSH2",
      "value": "0xF86"
    },
    "4001": {
      "op": "JUMP"
    },
    "4002": {
      "op": "JUMPDEST"
    },
    "4003": {
      "op": "POP"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4008": {
      "op": "DUP3"
    },
    "4009": {
      "op": "DUP7"
    },
    "4010": {
      "op": "ADD"
    },
    "4011": {
      "op": "ADD"
    },
    "4012": {
      "op": "MSTORE"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4017": {
      "op": "NOT"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4020": {
      "op": "DUP4"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "AND"
    },
    "4023": {
      "op": "DUP6"
    },
    "4024": {
      "op": "ADD"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "op": "SWAP2"
    },
    "4027": {
      "op": "POP"
    },
    "4028": {
      "op": "POP"
    },
    "4029": {
      "op": "SWAP3"
    },
    "4030": {
      "op": "SWAP2"
    },
    "4031": {
      "op": "POP"
    },
    "4032": {
      "op": "POP"
    },
    "4033": {
      "jump": "o",
      "op": "JUMP"
    },
    "4034": {
      "op": "JUMPDEST"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4037": {
      "op": "DUP2"
    },
    "4038": {
      "op": "MSTORE"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4041": {
      "op": "PUSH2",
      "value": "0xFD5"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4046": {
      "op": "DUP4"
    },
    "4047": {
      "op": "ADD"
    },
    "4048": {
      "op": "DUP5"
    },
    "4049": {
      "op": "PUSH2",
      "value": "0xF7C"
    },
    "4052": {
      "jump": "i",
      "op": "JUMP"
    },
    "4053": {
      "op": "JUMPDEST"
    },
    "4054": {
      "op": "SWAP4"
    },
    "4055": {
      "op": "SWAP3"
    },
    "4056": {
      "op": "POP"
    },
    "4057": {
      "op": "POP"
    },
    "4058": {
      "op": "POP"
    },
    "4059": {
      "jump": "o",
      "op": "JUMP"
    },
    "4060": {
      "op": "JUMPDEST"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4063": {
      "op": "DUP2"
    },
    "4064": {
      "op": "ADD"
    },
    "4065": {
      "op": "DUP2"
    },
    "4066": {
      "op": "DUP4"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4069": {
      "op": "JUMPDEST"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4072": {
      "op": "DUP2"
    },
    "4073": {
      "op": "LT"
    },
    "4074": {
      "op": "ISZERO"
    },
    "4075": {
      "op": "PUSH2",
      "value": "0x100A"
    },
    "4078": {
      "op": "JUMPI"
    },
    "4079": {
      "op": "DUP2"
    },
    "4080": {
      "op": "MLOAD"
    },
    "4081": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4086": {
      "op": "AND"
    },
    "4087": {
      "op": "DUP4"
    },
    "4088": {
      "op": "MSTORE"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4091": {
      "op": "SWAP3"
    },
    "4092": {
      "op": "DUP4"
    },
    "4093": {
      "op": "ADD"
    },
    "4094": {
      "op": "SWAP3"
    },
    "4095": {
      "op": "SWAP1"
    },
    "4096": {
      "op": "SWAP2"
    },
    "4097": {
      "op": "ADD"
    },
    "4098": {
      "op": "SWAP1"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4101": {
      "op": "ADD"
    },
    "4102": {
      "op": "PUSH2",
      "value": "0xFE5"
    },
    "4105": {
      "op": "JUMP"
    },
    "4106": {
      "op": "JUMPDEST"
    },
    "4107": {
      "op": "POP"
    },
    "4108": {
      "op": "POP"
    },
    "4109": {
      "op": "POP"
    },
    "4110": {
      "op": "SWAP3"
    },
    "4111": {
      "op": "SWAP2"
    },
    "4112": {
      "op": "POP"
    },
    "4113": {
      "op": "POP"
    },
    "4114": {
      "jump": "o",
      "op": "JUMP"
    },
    "4115": {
      "op": "JUMPDEST"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4118": {
      "op": "DUP1"
    },
    "4119": {
      "op": "DUP4"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4122": {
      "op": "DUP5"
    },
    "4123": {
      "op": "ADD"
    },
    "4124": {
      "op": "SLT"
    },
    "4125": {
      "op": "PUSH2",
      "value": "0x1025"
    },
    "4128": {
      "op": "JUMPI"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4131": {
      "op": "DUP1"
    },
    "4132": {
      "op": "REVERT"
    },
    "4133": {
      "op": "JUMPDEST"
    },
    "4134": {
      "op": "POP"
    },
    "4135": {
      "op": "DUP2"
    },
    "4136": {
      "op": "CALLDATALOAD"
    },
    "4137": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4146": {
      "op": "DUP2"
    },
    "4147": {
      "op": "GT"
    },
    "4148": {
      "op": "ISZERO"
    },
    "4149": {
      "op": "PUSH2",
      "value": "0x103D"
    },
    "4152": {
      "op": "JUMPI"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4155": {
      "op": "DUP1"
    },
    "4156": {
      "op": "REVERT"
    },
    "4157": {
      "op": "JUMPDEST"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4160": {
      "op": "DUP4"
    },
    "4161": {
      "op": "ADD"
    },
    "4162": {
      "op": "SWAP2"
    },
    "4163": {
      "op": "POP"
    },
    "4164": {
      "op": "DUP4"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4167": {
      "op": "DUP3"
    },
    "4168": {
      "op": "DUP6"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "op": "ADD"
    },
    "4171": {
      "op": "GT"
    },
    "4172": {
      "op": "ISZERO"
    },
    "4173": {
      "op": "PUSH2",
      "value": "0x1055"
    },
    "4176": {
      "op": "JUMPI"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4179": {
      "op": "DUP1"
    },
    "4180": {
      "op": "REVERT"
    },
    "4181": {
      "op": "JUMPDEST"
    },
    "4182": {
      "op": "SWAP3"
    },
    "4183": {
      "op": "POP"
    },
    "4184": {
      "op": "SWAP3"
    },
    "4185": {
      "op": "SWAP1"
    },
    "4186": {
      "op": "POP"
    },
    "4187": {
      "jump": "o",
      "op": "JUMP"
    },
    "4188": {
      "op": "JUMPDEST"
    },
    "4189": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4196": {
      "op": "SHL"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4199": {
      "op": "MSTORE"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4204": {
      "op": "MSTORE"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4209": {
      "op": "REVERT"
    },
    "4210": {
      "op": "JUMPDEST"
    },
    "4211": {
      "op": "DUP1"
    },
    "4212": {
      "op": "CALLDATALOAD"
    },
    "4213": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4218": {
      "op": "DUP2"
    },
    "4219": {
      "op": "AND"
    },
    "4220": {
      "op": "DUP2"
    },
    "4221": {
      "op": "EQ"
    },
    "4222": {
      "op": "PUSH2",
      "value": "0x1086"
    },
    "4225": {
      "op": "JUMPI"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4228": {
      "op": "DUP1"
    },
    "4229": {
      "op": "REVERT"
    },
    "4230": {
      "op": "JUMPDEST"
    },
    "4231": {
      "op": "SWAP2"
    },
    "4232": {
      "op": "SWAP1"
    },
    "4233": {
      "op": "POP"
    },
    "4234": {
      "jump": "o",
      "op": "JUMP"
    },
    "4235": {
      "op": "JUMPDEST"
    },
    "4236": {
      "op": "DUP1"
    },
    "4237": {
      "op": "CALLDATALOAD"
    },
    "4238": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4247": {
      "op": "DUP2"
    },
    "4248": {
      "op": "AND"
    },
    "4249": {
      "op": "DUP2"
    },
    "4250": {
      "op": "EQ"
    },
    "4251": {
      "op": "PUSH2",
      "value": "0x1086"
    },
    "4254": {
      "op": "JUMPI"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4257": {
      "op": "DUP1"
    },
    "4258": {
      "op": "REVERT"
    },
    "4259": {
      "op": "JUMPDEST"
    },
    "4260": {
      "op": "DUP1"
    },
    "4261": {
      "op": "ISZERO"
    },
    "4262": {
      "op": "ISZERO"
    },
    "4263": {
      "op": "DUP2"
    },
    "4264": {
      "op": "EQ"
    },
    "4265": {
      "op": "PUSH2",
      "value": "0xD5A"
    },
    "4268": {
      "op": "JUMPI"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4271": {
      "op": "DUP1"
    },
    "4272": {
      "op": "REVERT"
    },
    "4273": {
      "op": "JUMPDEST"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4278": {
      "op": "DUP3"
    },
    "4279": {
      "op": "DUP5"
    },
    "4280": {
      "op": "SUB"
    },
    "4281": {
      "op": "SLT"
    },
    "4282": {
      "op": "ISZERO"
    },
    "4283": {
      "op": "PUSH2",
      "value": "0x10C3"
    },
    "4286": {
      "op": "JUMPI"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4289": {
      "op": "DUP1"
    },
    "4290": {
      "op": "REVERT"
    },
    "4291": {
      "op": "JUMPDEST"
    },
    "4292": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4294": {
      "op": "MLOAD"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4297": {
      "op": "DUP2"
    },
    "4298": {
      "op": "ADD"
    },
    "4299": {
      "op": "DUP2"
    },
    "4300": {
      "op": "DUP2"
    },
    "4301": {
      "op": "LT"
    },
    "4302": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "GT"
    },
    "4313": {
      "op": "OR"
    },
    "4314": {
      "op": "ISZERO"
    },
    "4315": {
      "op": "PUSH2",
      "value": "0x10E6"
    },
    "4318": {
      "op": "JUMPI"
    },
    "4319": {
      "op": "PUSH2",
      "value": "0x10E6"
    },
    "4322": {
      "op": "PUSH2",
      "value": "0x105C"
    },
    "4325": {
      "jump": "i",
      "op": "JUMP"
    },
    "4326": {
      "op": "JUMPDEST"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4329": {
      "op": "MSTORE"
    },
    "4330": {
      "op": "SWAP1"
    },
    "4331": {
      "op": "POP"
    },
    "4332": {
      "op": "DUP1"
    },
    "4333": {
      "op": "PUSH2",
      "value": "0x10F5"
    },
    "4336": {
      "op": "DUP4"
    },
    "4337": {
      "op": "PUSH2",
      "value": "0x1072"
    },
    "4340": {
      "jump": "i",
      "op": "JUMP"
    },
    "4341": {
      "op": "JUMPDEST"
    },
    "4342": {
      "op": "DUP2"
    },
    "4343": {
      "op": "MSTORE"
    },
    "4344": {
      "op": "PUSH2",
      "value": "0x1103"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4349": {
      "op": "DUP5"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "PUSH2",
      "value": "0x108B"
    },
    "4354": {
      "jump": "i",
      "op": "JUMP"
    },
    "4355": {
      "op": "JUMPDEST"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4358": {
      "op": "DUP3"
    },
    "4359": {
      "op": "ADD"
    },
    "4360": {
      "op": "MSTORE"
    },
    "4361": {
      "op": "PUSH2",
      "value": "0x1114"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4366": {
      "op": "DUP5"
    },
    "4367": {
      "op": "ADD"
    },
    "4368": {
      "op": "PUSH2",
      "value": "0x108B"
    },
    "4371": {
      "jump": "i",
      "op": "JUMP"
    },
    "4372": {
      "op": "JUMPDEST"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4375": {
      "op": "DUP3"
    },
    "4376": {
      "op": "ADD"
    },
    "4377": {
      "op": "MSTORE"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4380": {
      "op": "DUP4"
    },
    "4381": {
      "op": "ADD"
    },
    "4382": {
      "op": "CALLDATALOAD"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4385": {
      "op": "DUP3"
    },
    "4386": {
      "op": "ADD"
    },
    "4387": {
      "op": "MSTORE"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4390": {
      "op": "DUP4"
    },
    "4391": {
      "op": "ADD"
    },
    "4392": {
      "op": "CALLDATALOAD"
    },
    "4393": {
      "op": "PUSH2",
      "value": "0x1131"
    },
    "4396": {
      "op": "DUP2"
    },
    "4397": {
      "op": "PUSH2",
      "value": "0x10A3"
    },
    "4400": {
      "jump": "i",
      "op": "JUMP"
    },
    "4401": {
      "op": "JUMPDEST"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4404": {
      "op": "SWAP2"
    },
    "4405": {
      "op": "SWAP1"
    },
    "4406": {
      "op": "SWAP2"
    },
    "4407": {
      "op": "ADD"
    },
    "4408": {
      "op": "MSTORE"
    },
    "4409": {
      "op": "SWAP3"
    },
    "4410": {
      "op": "SWAP2"
    },
    "4411": {
      "op": "POP"
    },
    "4412": {
      "op": "POP"
    },
    "4413": {
      "jump": "o",
      "op": "JUMP"
    },
    "4414": {
      "op": "JUMPDEST"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4417": {
      "op": "DUP1"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4420": {
      "op": "DUP1"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4423": {
      "op": "DUP1"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4426": {
      "op": "DUP1"
    },
    "4427": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4430": {
      "op": "DUP10"
    },
    "4431": {
      "op": "DUP12"
    },
    "4432": {
      "op": "SUB"
    },
    "4433": {
      "op": "SLT"
    },
    "4434": {
      "op": "ISZERO"
    },
    "4435": {
      "op": "PUSH2",
      "value": "0x115B"
    },
    "4438": {
      "op": "JUMPI"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4441": {
      "op": "DUP1"
    },
    "4442": {
      "op": "REVERT"
    },
    "4443": {
      "op": "JUMPDEST"
    },
    "4444": {
      "op": "DUP9"
    },
    "4445": {
      "op": "CALLDATALOAD"
    },
    "4446": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4455": {
      "op": "DUP1"
    },
    "4456": {
      "op": "DUP3"
    },
    "4457": {
      "op": "GT"
    },
    "4458": {
      "op": "ISZERO"
    },
    "4459": {
      "op": "PUSH2",
      "value": "0x1173"
    },
    "4462": {
      "op": "JUMPI"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4465": {
      "op": "DUP1"
    },
    "4466": {
      "op": "REVERT"
    },
    "4467": {
      "op": "JUMPDEST"
    },
    "4468": {
      "op": "PUSH2",
      "value": "0x117F"
    },
    "4471": {
      "op": "DUP13"
    },
    "4472": {
      "op": "DUP4"
    },
    "4473": {
      "op": "DUP14"
    },
    "4474": {
      "op": "ADD"
    },
    "4475": {
      "op": "PUSH2",
      "value": "0x1013"
    },
    "4478": {
      "jump": "i",
      "op": "JUMP"
    },
    "4479": {
      "op": "JUMPDEST"
    },
    "4480": {
      "op": "SWAP1"
    },
    "4481": {
      "op": "SWAP11"
    },
    "4482": {
      "op": "POP"
    },
    "4483": {
      "op": "SWAP9"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4487": {
      "op": "DUP12"
    },
    "4488": {
      "op": "ADD"
    },
    "4489": {
      "op": "CALLDATALOAD"
    },
    "4490": {
      "op": "SWAP2"
    },
    "4491": {
      "op": "POP"
    },
    "4492": {
      "op": "DUP1"
    },
    "4493": {
      "op": "DUP3"
    },
    "4494": {
      "op": "GT"
    },
    "4495": {
      "op": "ISZERO"
    },
    "4496": {
      "op": "PUSH2",
      "value": "0x1198"
    },
    "4499": {
      "op": "JUMPI"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4502": {
      "op": "DUP1"
    },
    "4503": {
      "op": "REVERT"
    },
    "4504": {
      "op": "JUMPDEST"
    },
    "4505": {
      "op": "DUP2"
    },
    "4506": {
      "op": "DUP12"
    },
    "4507": {
      "op": "ADD"
    },
    "4508": {
      "op": "SWAP2"
    },
    "4509": {
      "op": "POP"
    },
    "4510": {
      "op": "DUP12"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4513": {
      "op": "DUP4"
    },
    "4514": {
      "op": "ADD"
    },
    "4515": {
      "op": "SLT"
    },
    "4516": {
      "op": "PUSH2",
      "value": "0x11AC"
    },
    "4519": {
      "op": "JUMPI"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4522": {
      "op": "DUP1"
    },
    "4523": {
      "op": "REVERT"
    },
    "4524": {
      "op": "JUMPDEST"
    },
    "4525": {
      "op": "DUP2"
    },
    "4526": {
      "op": "CALLDATALOAD"
    },
    "4527": {
      "op": "DUP2"
    },
    "4528": {
      "op": "DUP2"
    },
    "4529": {
      "op": "GT"
    },
    "4530": {
      "op": "ISZERO"
    },
    "4531": {
      "op": "PUSH2",
      "value": "0x11BB"
    },
    "4534": {
      "op": "JUMPI"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4537": {
      "op": "DUP1"
    },
    "4538": {
      "op": "REVERT"
    },
    "4539": {
      "op": "JUMPDEST"
    },
    "4540": {
      "op": "DUP13"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4543": {
      "op": "DUP3"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4546": {
      "op": "SHL"
    },
    "4547": {
      "op": "DUP6"
    },
    "4548": {
      "op": "ADD"
    },
    "4549": {
      "op": "ADD"
    },
    "4550": {
      "op": "GT"
    },
    "4551": {
      "op": "ISZERO"
    },
    "4552": {
      "op": "PUSH2",
      "value": "0x11D0"
    },
    "4555": {
      "op": "JUMPI"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4558": {
      "op": "DUP1"
    },
    "4559": {
      "op": "REVERT"
    },
    "4560": {
      "op": "JUMPDEST"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4563": {
      "op": "DUP4"
    },
    "4564": {
      "op": "ADD"
    },
    "4565": {
      "op": "SWAP9"
    },
    "4566": {
      "op": "POP"
    },
    "4567": {
      "op": "DUP1"
    },
    "4568": {
      "op": "SWAP8"
    },
    "4569": {
      "op": "POP"
    },
    "4570": {
      "op": "POP"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4573": {
      "op": "DUP12"
    },
    "4574": {
      "op": "ADD"
    },
    "4575": {
      "op": "CALLDATALOAD"
    },
    "4576": {
      "op": "SWAP2"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "DUP1"
    },
    "4579": {
      "op": "DUP3"
    },
    "4580": {
      "op": "GT"
    },
    "4581": {
      "op": "ISZERO"
    },
    "4582": {
      "op": "PUSH2",
      "value": "0x11EE"
    },
    "4585": {
      "op": "JUMPI"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4588": {
      "op": "DUP1"
    },
    "4589": {
      "op": "REVERT"
    },
    "4590": {
      "op": "JUMPDEST"
    },
    "4591": {
      "op": "POP"
    },
    "4592": {
      "op": "PUSH2",
      "value": "0x11FB"
    },
    "4595": {
      "op": "DUP12"
    },
    "4596": {
      "op": "DUP3"
    },
    "4597": {
      "op": "DUP13"
    },
    "4598": {
      "op": "ADD"
    },
    "4599": {
      "op": "PUSH2",
      "value": "0x1013"
    },
    "4602": {
      "jump": "i",
      "op": "JUMP"
    },
    "4603": {
      "op": "JUMPDEST"
    },
    "4604": {
      "op": "SWAP1"
    },
    "4605": {
      "op": "SWAP6"
    },
    "4606": {
      "op": "POP"
    },
    "4607": {
      "op": "SWAP4"
    },
    "4608": {
      "op": "POP"
    },
    "4609": {
      "op": "POP"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4612": {
      "op": "DUP10"
    },
    "4613": {
      "op": "ADD"
    },
    "4614": {
      "op": "CALLDATALOAD"
    },
    "4615": {
      "op": "SWAP2"
    },
    "4616": {
      "op": "POP"
    },
    "4617": {
      "op": "PUSH2",
      "value": "0x1215"
    },
    "4620": {
      "op": "DUP11"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4623": {
      "op": "DUP12"
    },
    "4624": {
      "op": "ADD"
    },
    "4625": {
      "op": "PUSH2",
      "value": "0x10B1"
    },
    "4628": {
      "jump": "i",
      "op": "JUMP"
    },
    "4629": {
      "op": "JUMPDEST"
    },
    "4630": {
      "op": "SWAP1"
    },
    "4631": {
      "op": "POP"
    },
    "4632": {
      "op": "SWAP3"
    },
    "4633": {
      "op": "SWAP6"
    },
    "4634": {
      "op": "SWAP9"
    },
    "4635": {
      "op": "POP"
    },
    "4636": {
      "op": "SWAP3"
    },
    "4637": {
      "op": "SWAP6"
    },
    "4638": {
      "op": "SWAP9"
    },
    "4639": {
      "op": "SWAP1"
    },
    "4640": {
      "op": "SWAP4"
    },
    "4641": {
      "op": "SWAP7"
    },
    "4642": {
      "op": "POP"
    },
    "4643": {
      "jump": "o",
      "op": "JUMP"
    },
    "4644": {
      "op": "JUMPDEST"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4649": {
      "op": "DUP1"
    },
    "4650": {
      "op": "DUP4"
    },
    "4651": {
      "op": "ADD"
    },
    "4652": {
      "op": "DUP2"
    },
    "4653": {
      "op": "DUP5"
    },
    "4654": {
      "op": "MSTORE"
    },
    "4655": {
      "op": "DUP1"
    },
    "4656": {
      "op": "DUP6"
    },
    "4657": {
      "op": "MLOAD"
    },
    "4658": {
      "op": "DUP1"
    },
    "4659": {
      "op": "DUP4"
    },
    "4660": {
      "op": "MSTORE"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4663": {
      "op": "DUP7"
    },
    "4664": {
      "op": "ADD"
    },
    "4665": {
      "op": "SWAP2"
    },
    "4666": {
      "op": "POP"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4669": {
      "op": "DUP2"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4672": {
      "op": "SHL"
    },
    "4673": {
      "op": "DUP8"
    },
    "4674": {
      "op": "ADD"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "op": "SWAP3"
    },
    "4677": {
      "op": "POP"
    },
    "4678": {
      "op": "DUP4"
    },
    "4679": {
      "op": "DUP8"
    },
    "4680": {
      "op": "ADD"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4683": {
      "op": "JUMPDEST"
    },
    "4684": {
      "op": "DUP3"
    },
    "4685": {
      "op": "DUP2"
    },
    "4686": {
      "op": "LT"
    },
    "4687": {
      "op": "ISZERO"
    },
    "4688": {
      "op": "PUSH2",
      "value": "0x1279"
    },
    "4691": {
      "op": "JUMPI"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4694": {
      "op": "NOT"
    },
    "4695": {
      "op": "DUP9"
    },
    "4696": {
      "op": "DUP7"
    },
    "4697": {
      "op": "SUB"
    },
    "4698": {
      "op": "ADD"
    },
    "4699": {
      "op": "DUP5"
    },
    "4700": {
      "op": "MSTORE"
    },
    "4701": {
      "op": "PUSH2",
      "value": "0x1267"
    },
    "4704": {
      "op": "DUP6"
    },
    "4705": {
      "op": "DUP4"
    },
    "4706": {
      "op": "MLOAD"
    },
    "4707": {
      "op": "PUSH2",
      "value": "0xF7C"
    },
    "4710": {
      "jump": "i",
      "op": "JUMP"
    },
    "4711": {
      "op": "JUMPDEST"
    },
    "4712": {
      "op": "SWAP5"
    },
    "4713": {
      "op": "POP"
    },
    "4714": {
      "op": "SWAP3"
    },
    "4715": {
      "op": "DUP6"
    },
    "4716": {
      "op": "ADD"
    },
    "4717": {
      "op": "SWAP3"
    },
    "4718": {
      "op": "SWAP1"
    },
    "4719": {
      "op": "DUP6"
    },
    "4720": {
      "op": "ADD"
    },
    "4721": {
      "op": "SWAP1"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4724": {
      "op": "ADD"
    },
    "4725": {
      "op": "PUSH2",
      "value": "0x124B"
    },
    "4728": {
      "op": "JUMP"
    },
    "4729": {
      "op": "JUMPDEST"
    },
    "4730": {
      "op": "POP"
    },
    "4731": {
      "op": "SWAP3"
    },
    "4732": {
      "op": "SWAP8"
    },
    "4733": {
      "op": "SWAP7"
    },
    "4734": {
      "op": "POP"
    },
    "4735": {
      "op": "POP"
    },
    "4736": {
      "op": "POP"
    },
    "4737": {
      "op": "POP"
    },
    "4738": {
      "op": "POP"
    },
    "4739": {
      "op": "POP"
    },
    "4740": {
      "op": "POP"
    },
    "4741": {
      "jump": "o",
      "op": "JUMP"
    },
    "4742": {
      "op": "JUMPDEST"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4747": {
      "op": "DUP3"
    },
    "4748": {
      "op": "DUP5"
    },
    "4749": {
      "op": "SUB"
    },
    "4750": {
      "op": "SLT"
    },
    "4751": {
      "op": "ISZERO"
    },
    "4752": {
      "op": "PUSH2",
      "value": "0x1298"
    },
    "4755": {
      "op": "JUMPI"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4758": {
      "op": "DUP1"
    },
    "4759": {
      "op": "REVERT"
    },
    "4760": {
      "op": "JUMPDEST"
    },
    "4761": {
      "op": "DUP2"
    },
    "4762": {
      "op": "CALLDATALOAD"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4769": {
      "op": "SHL"
    },
    "4770": {
      "op": "SUB"
    },
    "4771": {
      "op": "DUP2"
    },
    "4772": {
      "op": "AND"
    },
    "4773": {
      "op": "DUP2"
    },
    "4774": {
      "op": "EQ"
    },
    "4775": {
      "op": "PUSH2",
      "value": "0xFD5"
    },
    "4778": {
      "op": "JUMPI"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4781": {
      "op": "DUP1"
    },
    "4782": {
      "op": "REVERT"
    },
    "4783": {
      "op": "JUMPDEST"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4786": {
      "op": "DUP1"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4789": {
      "op": "DUP1"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4792": {
      "op": "DUP1"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4797": {
      "op": "DUP9"
    },
    "4798": {
      "op": "DUP11"
    },
    "4799": {
      "op": "SUB"
    },
    "4800": {
      "op": "SLT"
    },
    "4801": {
      "op": "ISZERO"
    },
    "4802": {
      "op": "PUSH2",
      "value": "0x12CA"
    },
    "4805": {
      "op": "JUMPI"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4808": {
      "op": "DUP1"
    },
    "4809": {
      "op": "REVERT"
    },
    "4810": {
      "op": "JUMPDEST"
    },
    "4811": {
      "op": "DUP8"
    },
    "4812": {
      "op": "CALLDATALOAD"
    },
    "4813": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4822": {
      "op": "DUP1"
    },
    "4823": {
      "op": "DUP3"
    },
    "4824": {
      "op": "GT"
    },
    "4825": {
      "op": "ISZERO"
    },
    "4826": {
      "op": "PUSH2",
      "value": "0x12E2"
    },
    "4829": {
      "op": "JUMPI"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4832": {
      "op": "DUP1"
    },
    "4833": {
      "op": "REVERT"
    },
    "4834": {
      "op": "JUMPDEST"
    },
    "4835": {
      "op": "PUSH2",
      "value": "0x12EE"
    },
    "4838": {
      "op": "DUP12"
    },
    "4839": {
      "op": "DUP4"
    },
    "4840": {
      "op": "DUP13"
    },
    "4841": {
      "op": "ADD"
    },
    "4842": {
      "op": "PUSH2",
      "value": "0x1013"
    },
    "4845": {
      "jump": "i",
      "op": "JUMP"
    },
    "4846": {
      "op": "JUMPDEST"
    },
    "4847": {
      "op": "SWAP1"
    },
    "4848": {
      "op": "SWAP10"
    },
    "4849": {
      "op": "POP"
    },
    "4850": {
      "op": "SWAP8"
    },
    "4851": {
      "op": "POP"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4854": {
      "op": "DUP11"
    },
    "4855": {
      "op": "ADD"
    },
    "4856": {
      "op": "CALLDATALOAD"
    },
    "4857": {
      "op": "SWAP2"
    },
    "4858": {
      "op": "POP"
    },
    "4859": {
      "op": "DUP1"
    },
    "4860": {
      "op": "DUP3"
    },
    "4861": {
      "op": "GT"
    },
    "4862": {
      "op": "ISZERO"
    },
    "4863": {
      "op": "PUSH2",
      "value": "0x1307"
    },
    "4866": {
      "op": "JUMPI"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4869": {
      "op": "DUP1"
    },
    "4870": {
      "op": "REVERT"
    },
    "4871": {
      "op": "JUMPDEST"
    },
    "4872": {
      "op": "PUSH2",
      "value": "0x1313"
    },
    "4875": {
      "op": "DUP12"
    },
    "4876": {
      "op": "DUP4"
    },
    "4877": {
      "op": "DUP13"
    },
    "4878": {
      "op": "ADD"
    },
    "4879": {
      "op": "PUSH2",
      "value": "0x1013"
    },
    "4882": {
      "jump": "i",
      "op": "JUMP"
    },
    "4883": {
      "op": "JUMPDEST"
    },
    "4884": {
      "op": "SWAP1"
    },
    "4885": {
      "op": "SWAP8"
    },
    "4886": {
      "op": "POP"
    },
    "4887": {
      "op": "SWAP6"
    },
    "4888": {
      "op": "POP"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4891": {
      "op": "DUP11"
    },
    "4892": {
      "op": "ADD"
    },
    "4893": {
      "op": "CALLDATALOAD"
    },
    "4894": {
      "op": "SWAP2"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "op": "DUP1"
    },
    "4897": {
      "op": "DUP3"
    },
    "4898": {
      "op": "GT"
    },
    "4899": {
      "op": "ISZERO"
    },
    "4900": {
      "op": "PUSH2",
      "value": "0x132C"
    },
    "4903": {
      "op": "JUMPI"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4906": {
      "op": "DUP1"
    },
    "4907": {
      "op": "REVERT"
    },
    "4908": {
      "op": "JUMPDEST"
    },
    "4909": {
      "op": "POP"
    },
    "4910": {
      "op": "PUSH2",
      "value": "0x1339"
    },
    "4913": {
      "op": "DUP11"
    },
    "4914": {
      "op": "DUP3"
    },
    "4915": {
      "op": "DUP12"
    },
    "4916": {
      "op": "ADD"
    },
    "4917": {
      "op": "PUSH2",
      "value": "0x1013"
    },
    "4920": {
      "jump": "i",
      "op": "JUMP"
    },
    "4921": {
      "op": "JUMPDEST"
    },
    "4922": {
      "op": "SWAP9"
    },
    "4923": {
      "op": "SWAP12"
    },
    "4924": {
      "op": "SWAP8"
    },
    "4925": {
      "op": "SWAP11"
    },
    "4926": {
      "op": "POP"
    },
    "4927": {
      "op": "SWAP6"
    },
    "4928": {
      "op": "SWAP9"
    },
    "4929": {
      "op": "SWAP5"
    },
    "4930": {
      "op": "SWAP8"
    },
    "4931": {
      "op": "SWAP6"
    },
    "4932": {
      "op": "SWAP7"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4935": {
      "op": "SWAP1"
    },
    "4936": {
      "op": "SWAP6"
    },
    "4937": {
      "op": "ADD"
    },
    "4938": {
      "op": "CALLDATALOAD"
    },
    "4939": {
      "op": "SWAP5"
    },
    "4940": {
      "op": "SWAP4"
    },
    "4941": {
      "op": "POP"
    },
    "4942": {
      "op": "POP"
    },
    "4943": {
      "op": "POP"
    },
    "4944": {
      "op": "POP"
    },
    "4945": {
      "jump": "o",
      "op": "JUMP"
    },
    "4946": {
      "op": "JUMPDEST"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4951": {
      "op": "DUP3"
    },
    "4952": {
      "op": "DUP5"
    },
    "4953": {
      "op": "SUB"
    },
    "4954": {
      "op": "SLT"
    },
    "4955": {
      "op": "ISZERO"
    },
    "4956": {
      "op": "PUSH2",
      "value": "0x1364"
    },
    "4959": {
      "op": "JUMPI"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4962": {
      "op": "DUP1"
    },
    "4963": {
      "op": "REVERT"
    },
    "4964": {
      "op": "JUMPDEST"
    },
    "4965": {
      "op": "DUP3"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4968": {
      "op": "DUP4"
    },
    "4969": {
      "op": "ADD"
    },
    "4970": {
      "op": "SLT"
    },
    "4971": {
      "op": "PUSH2",
      "value": "0x1373"
    },
    "4974": {
      "op": "JUMPI"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4977": {
      "op": "DUP1"
    },
    "4978": {
      "op": "REVERT"
    },
    "4979": {
      "op": "JUMPDEST"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4982": {
      "op": "MLOAD"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4985": {
      "op": "DUP2"
    },
    "4986": {
      "op": "ADD"
    },
    "4987": {
      "op": "DUP2"
    },
    "4988": {
      "op": "DUP2"
    },
    "4989": {
      "op": "LT"
    },
    "4990": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4999": {
      "op": "DUP3"
    },
    "5000": {
      "op": "GT"
    },
    "5001": {
      "op": "OR"
    },
    "5002": {
      "op": "ISZERO"
    },
    "5003": {
      "op": "PUSH2",
      "value": "0x1396"
    },
    "5006": {
      "op": "JUMPI"
    },
    "5007": {
      "op": "PUSH2",
      "value": "0x1396"
    },
    "5010": {
      "op": "PUSH2",
      "value": "0x105C"
    },
    "5013": {
      "jump": "i",
      "op": "JUMP"
    },
    "5014": {
      "op": "JUMPDEST"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5017": {
      "op": "MSTORE"
    },
    "5018": {
      "op": "DUP1"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5021": {
      "op": "DUP5"
    },
    "5022": {
      "op": "ADD"
    },
    "5023": {
      "op": "DUP6"
    },
    "5024": {
      "op": "DUP2"
    },
    "5025": {
      "op": "GT"
    },
    "5026": {
      "op": "ISZERO"
    },
    "5027": {
      "op": "PUSH2",
      "value": "0x13AB"
    },
    "5030": {
      "op": "JUMPI"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5033": {
      "op": "DUP1"
    },
    "5034": {
      "op": "REVERT"
    },
    "5035": {
      "op": "JUMPDEST"
    },
    "5036": {
      "op": "DUP5"
    },
    "5037": {
      "op": "JUMPDEST"
    },
    "5038": {
      "op": "DUP2"
    },
    "5039": {
      "op": "DUP2"
    },
    "5040": {
      "op": "LT"
    },
    "5041": {
      "op": "ISZERO"
    },
    "5042": {
      "op": "PUSH2",
      "value": "0x13CC"
    },
    "5045": {
      "op": "JUMPI"
    },
    "5046": {
      "op": "PUSH2",
      "value": "0x13BE"
    },
    "5049": {
      "op": "DUP2"
    },
    "5050": {
      "op": "PUSH2",
      "value": "0x1072"
    },
    "5053": {
      "jump": "i",
      "op": "JUMP"
    },
    "5054": {
      "op": "JUMPDEST"
    },
    "5055": {
      "op": "DUP4"
    },
    "5056": {
      "op": "MSTORE"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5059": {
      "op": "SWAP3"
    },
    "5060": {
      "op": "DUP4"
    },
    "5061": {
      "op": "ADD"
    },
    "5062": {
      "op": "SWAP3"
    },
    "5063": {
      "op": "ADD"
    },
    "5064": {
      "op": "PUSH2",
      "value": "0x13AD"
    },
    "5067": {
      "op": "JUMP"
    },
    "5068": {
      "op": "JUMPDEST"
    },
    "5069": {
      "op": "POP"
    },
    "5070": {
      "op": "SWAP2"
    },
    "5071": {
      "op": "SWAP6"
    },
    "5072": {
      "op": "SWAP5"
    },
    "5073": {
      "op": "POP"
    },
    "5074": {
      "op": "POP"
    },
    "5075": {
      "op": "POP"
    },
    "5076": {
      "op": "POP"
    },
    "5077": {
      "op": "POP"
    },
    "5078": {
      "jump": "o",
      "op": "JUMP"
    },
    "5079": {
      "op": "JUMPDEST"
    },
    "5080": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5087": {
      "op": "SHL"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5090": {
      "op": "MSTORE"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5095": {
      "op": "MSTORE"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5100": {
      "op": "REVERT"
    },
    "5101": {
      "op": "JUMPDEST"
    },
    "5102": {
      "op": "DUP1"
    },
    "5103": {
      "op": "DUP3"
    },
    "5104": {
      "op": "ADD"
    },
    "5105": {
      "op": "DUP1"
    },
    "5106": {
      "op": "DUP3"
    },
    "5107": {
      "op": "GT"
    },
    "5108": {
      "op": "ISZERO"
    },
    "5109": {
      "op": "PUSH2",
      "value": "0xC8E"
    },
    "5112": {
      "op": "JUMPI"
    },
    "5113": {
      "op": "PUSH2",
      "value": "0xC8E"
    },
    "5116": {
      "op": "PUSH2",
      "value": "0x13D7"
    },
    "5119": {
      "jump": "i",
      "op": "JUMP"
    },
    "5120": {
      "op": "JUMPDEST"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5123": {
      "op": "DUP2"
    },
    "5124": {
      "op": "DUP2"
    },
    "5125": {
      "op": "SHR"
    },
    "5126": {
      "op": "SWAP1"
    },
    "5127": {
      "op": "DUP3"
    },
    "5128": {
      "op": "AND"
    },
    "5129": {
      "op": "DUP1"
    },
    "5130": {
      "op": "PUSH2",
      "value": "0x1414"
    },
    "5133": {
      "op": "JUMPI"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5136": {
      "op": "DUP3"
    },
    "5137": {
      "op": "AND"
    },
    "5138": {
      "op": "SWAP2"
    },
    "5139": {
      "op": "POP"
    },
    "5140": {
      "op": "JUMPDEST"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5143": {
      "op": "DUP3"
    },
    "5144": {
      "op": "LT"
    },
    "5145": {
      "op": "DUP2"
    },
    "5146": {
      "op": "SUB"
    },
    "5147": {
      "op": "PUSH2",
      "value": "0x1434"
    },
    "5150": {
      "op": "JUMPI"
    },
    "5151": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5158": {
      "op": "SHL"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5161": {
      "op": "MSTORE"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5166": {
      "op": "MSTORE"
    },
    "5167": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5171": {
      "op": "REVERT"
    },
    "5172": {
      "op": "JUMPDEST"
    },
    "5173": {
      "op": "POP"
    },
    "5174": {
      "op": "SWAP2"
    },
    "5175": {
      "op": "SWAP1"
    },
    "5176": {
      "op": "POP"
    },
    "5177": {
      "jump": "o",
      "op": "JUMP"
    },
    "5178": {
      "op": "JUMPDEST"
    },
    "5179": {
      "op": "DUP1"
    },
    "5180": {
      "op": "DUP3"
    },
    "5181": {
      "op": "MUL"
    },
    "5182": {
      "op": "DUP2"
    },
    "5183": {
      "op": "ISZERO"
    },
    "5184": {
      "op": "DUP3"
    },
    "5185": {
      "op": "DUP3"
    },
    "5186": {
      "op": "DIV"
    },
    "5187": {
      "op": "DUP5"
    },
    "5188": {
      "op": "EQ"
    },
    "5189": {
      "op": "OR"
    },
    "5190": {
      "op": "PUSH2",
      "value": "0xC8E"
    },
    "5193": {
      "op": "JUMPI"
    },
    "5194": {
      "op": "PUSH2",
      "value": "0xC8E"
    },
    "5197": {
      "op": "PUSH2",
      "value": "0x13D7"
    },
    "5200": {
      "jump": "i",
      "op": "JUMP"
    },
    "5201": {
      "op": "JUMPDEST"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5204": {
      "op": "DUP3"
    },
    "5205": {
      "op": "PUSH2",
      "value": "0x146E"
    },
    "5208": {
      "op": "JUMPI"
    },
    "5209": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5216": {
      "op": "SHL"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5219": {
      "op": "MSTORE"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5224": {
      "op": "MSTORE"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5229": {
      "op": "REVERT"
    },
    "5230": {
      "op": "JUMPDEST"
    },
    "5231": {
      "op": "POP"
    },
    "5232": {
      "op": "DIV"
    },
    "5233": {
      "op": "SWAP1"
    },
    "5234": {
      "jump": "o",
      "op": "JUMP"
    },
    "5235": {
      "op": "JUMPDEST"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5240": {
      "op": "DUP3"
    },
    "5241": {
      "op": "DUP5"
    },
    "5242": {
      "op": "SUB"
    },
    "5243": {
      "op": "SLT"
    },
    "5244": {
      "op": "ISZERO"
    },
    "5245": {
      "op": "PUSH2",
      "value": "0x1485"
    },
    "5248": {
      "op": "JUMPI"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5251": {
      "op": "DUP1"
    },
    "5252": {
      "op": "REVERT"
    },
    "5253": {
      "op": "JUMPDEST"
    },
    "5254": {
      "op": "POP"
    },
    "5255": {
      "op": "MLOAD"
    },
    "5256": {
      "op": "SWAP2"
    },
    "5257": {
      "op": "SWAP1"
    },
    "5258": {
      "op": "POP"
    },
    "5259": {
      "jump": "o",
      "op": "JUMP"
    },
    "5260": {
      "op": "JUMPDEST"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5265": {
      "op": "DUP3"
    },
    "5266": {
      "op": "DUP5"
    },
    "5267": {
      "op": "SUB"
    },
    "5268": {
      "op": "SLT"
    },
    "5269": {
      "op": "ISZERO"
    },
    "5270": {
      "op": "PUSH2",
      "value": "0x149E"
    },
    "5273": {
      "op": "JUMPI"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5276": {
      "op": "DUP1"
    },
    "5277": {
      "op": "REVERT"
    },
    "5278": {
      "op": "JUMPDEST"
    },
    "5279": {
      "op": "DUP2"
    },
    "5280": {
      "op": "MLOAD"
    },
    "5281": {
      "op": "PUSH2",
      "value": "0xFD5"
    },
    "5284": {
      "op": "DUP2"
    },
    "5285": {
      "op": "PUSH2",
      "value": "0x10A3"
    },
    "5288": {
      "jump": "i",
      "op": "JUMP"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "DUP2"
    },
    "5291": {
      "op": "DUP2"
    },
    "5292": {
      "op": "SUB"
    },
    "5293": {
      "op": "DUP2"
    },
    "5294": {
      "op": "DUP2"
    },
    "5295": {
      "op": "GT"
    },
    "5296": {
      "op": "ISZERO"
    },
    "5297": {
      "op": "PUSH2",
      "value": "0xC8E"
    },
    "5300": {
      "op": "JUMPI"
    },
    "5301": {
      "op": "PUSH2",
      "value": "0xC8E"
    },
    "5304": {
      "op": "PUSH2",
      "value": "0x13D7"
    },
    "5307": {
      "jump": "i",
      "op": "JUMP"
    },
    "5308": {
      "op": "JUMPDEST"
    },
    "5309": {
      "op": "DUP2"
    },
    "5310": {
      "op": "DUP4"
    },
    "5311": {
      "op": "MSTORE"
    },
    "5312": {
      "op": "DUP2"
    },
    "5313": {
      "op": "DUP2"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5316": {
      "op": "DUP6"
    },
    "5317": {
      "op": "ADD"
    },
    "5318": {
      "op": "CALLDATACOPY"
    },
    "5319": {
      "op": "POP"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5322": {
      "op": "DUP3"
    },
    "5323": {
      "op": "DUP3"
    },
    "5324": {
      "op": "ADD"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5327": {
      "op": "SWAP1"
    },
    "5328": {
      "op": "DUP2"
    },
    "5329": {
      "op": "ADD"
    },
    "5330": {
      "op": "SWAP2"
    },
    "5331": {
      "op": "SWAP1"
    },
    "5332": {
      "op": "SWAP2"
    },
    "5333": {
      "op": "MSTORE"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5336": {
      "op": "SWAP1"
    },
    "5337": {
      "op": "SWAP2"
    },
    "5338": {
      "op": "ADD"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5341": {
      "op": "NOT"
    },
    "5342": {
      "op": "AND"
    },
    "5343": {
      "op": "SWAP1"
    },
    "5344": {
      "op": "SWAP2"
    },
    "5345": {
      "op": "ADD"
    },
    "5346": {
      "op": "ADD"
    },
    "5347": {
      "op": "SWAP1"
    },
    "5348": {
      "jump": "o",
      "op": "JUMP"
    },
    "5349": {
      "op": "JUMPDEST"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5352": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5355": {
      "op": "DUP1"
    },
    "5356": {
      "op": "DUP4"
    },
    "5357": {
      "op": "MSTORE"
    },
    "5358": {
      "op": "PUSH2",
      "value": "0x14FA"
    },
    "5361": {
      "op": "DUP2"
    },
    "5362": {
      "op": "DUP5"
    },
    "5363": {
      "op": "ADD"
    },
    "5364": {
      "op": "DUP12"
    },
    "5365": {
      "op": "DUP14"
    },
    "5366": {
      "op": "PUSH2",
      "value": "0x14BC"
    },
    "5369": {
      "jump": "i",
      "op": "JUMP"
    },
    "5370": {
      "op": "JUMPDEST"
    },
    "5371": {
      "op": "DUP4"
    },
    "5372": {
      "op": "DUP2"
    },
    "5373": {
      "op": "SUB"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5376": {
      "op": "DUP6"
    },
    "5377": {
      "op": "DUP2"
    },
    "5378": {
      "op": "ADD"
    },
    "5379": {
      "op": "SWAP2"
    },
    "5380": {
      "op": "SWAP1"
    },
    "5381": {
      "op": "SWAP2"
    },
    "5382": {
      "op": "MSTORE"
    },
    "5383": {
      "op": "DUP10"
    },
    "5384": {
      "op": "DUP3"
    },
    "5385": {
      "op": "MSTORE"
    },
    "5386": {
      "op": "DUP11"
    },
    "5387": {
      "op": "SWAP3"
    },
    "5388": {
      "op": "POP"
    },
    "5389": {
      "op": "SWAP1"
    },
    "5390": {
      "op": "DUP2"
    },
    "5391": {
      "op": "ADD"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5394": {
      "op": "JUMPDEST"
    },
    "5395": {
      "op": "DUP11"
    },
    "5396": {
      "op": "DUP2"
    },
    "5397": {
      "op": "LT"
    },
    "5398": {
      "op": "ISZERO"
    },
    "5399": {
      "op": "PUSH2",
      "value": "0x153F"
    },
    "5402": {
      "op": "JUMPI"
    },
    "5403": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5412": {
      "op": "PUSH2",
      "value": "0x152C"
    },
    "5415": {
      "op": "DUP6"
    },
    "5416": {
      "op": "PUSH2",
      "value": "0x108B"
    },
    "5419": {
      "jump": "i",
      "op": "JUMP"
    },
    "5420": {
      "op": "JUMPDEST"
    },
    "5421": {
      "op": "AND"
    },
    "5422": {
      "op": "DUP3"
    },
    "5423": {
      "op": "MSTORE"
    },
    "5424": {
      "op": "SWAP3"
    },
    "5425": {
      "op": "DUP3"
    },
    "5426": {
      "op": "ADD"
    },
    "5427": {
      "op": "SWAP3"
    },
    "5428": {
      "op": "SWAP1"
    },
    "5429": {
      "op": "DUP3"
    },
    "5430": {
      "op": "ADD"
    },
    "5431": {
      "op": "SWAP1"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5434": {
      "op": "ADD"
    },
    "5435": {
      "op": "PUSH2",
      "value": "0x1512"
    },
    "5438": {
      "op": "JUMP"
    },
    "5439": {
      "op": "JUMPDEST"
    },
    "5440": {
      "op": "POP"
    },
    "5441": {
      "op": "DUP5"
    },
    "5442": {
      "op": "DUP2"
    },
    "5443": {
      "op": "SUB"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5446": {
      "op": "DUP7"
    },
    "5447": {
      "op": "ADD"
    },
    "5448": {
      "op": "MSTORE"
    },
    "5449": {
      "op": "PUSH2",
      "value": "0x1553"
    },
    "5452": {
      "op": "DUP2"
    },
    "5453": {
      "op": "DUP10"
    },
    "5454": {
      "op": "DUP12"
    },
    "5455": {
      "op": "PUSH2",
      "value": "0x14BC"
    },
    "5458": {
      "jump": "i",
      "op": "JUMP"
    },
    "5459": {
      "op": "JUMPDEST"
    },
    "5460": {
      "op": "SWAP4"
    },
    "5461": {
      "op": "POP"
    },
    "5462": {
      "op": "POP"
    },
    "5463": {
      "op": "DUP6"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5466": {
      "op": "DUP6"
    },
    "5467": {
      "op": "ADD"
    },
    "5468": {
      "op": "MSTORE"
    },
    "5469": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5474": {
      "op": "DUP6"
    },
    "5475": {
      "op": "MLOAD"
    },
    "5476": {
      "op": "AND"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5479": {
      "op": "DUP6"
    },
    "5480": {
      "op": "ADD"
    },
    "5481": {
      "op": "MSTORE"
    },
    "5482": {
      "op": "DUP1"
    },
    "5483": {
      "op": "DUP6"
    },
    "5484": {
      "op": "ADD"
    },
    "5485": {
      "op": "MLOAD"
    },
    "5486": {
      "op": "SWAP2"
    },
    "5487": {
      "op": "POP"
    },
    "5488": {
      "op": "POP"
    },
    "5489": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5498": {
      "op": "DUP1"
    },
    "5499": {
      "op": "DUP3"
    },
    "5500": {
      "op": "AND"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5503": {
      "op": "DUP6"
    },
    "5504": {
      "op": "ADD"
    },
    "5505": {
      "op": "MSTORE"
    },
    "5506": {
      "op": "DUP1"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5509": {
      "op": "DUP7"
    },
    "5510": {
      "op": "ADD"
    },
    "5511": {
      "op": "MLOAD"
    },
    "5512": {
      "op": "AND"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5515": {
      "op": "DUP6"
    },
    "5516": {
      "op": "ADD"
    },
    "5517": {
      "op": "MSTORE"
    },
    "5518": {
      "op": "POP"
    },
    "5519": {
      "op": "POP"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5522": {
      "op": "DUP4"
    },
    "5523": {
      "op": "ADD"
    },
    "5524": {
      "op": "MLOAD"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5527": {
      "op": "DUP4"
    },
    "5528": {
      "op": "ADD"
    },
    "5529": {
      "op": "MSTORE"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5532": {
      "op": "DUP4"
    },
    "5533": {
      "op": "ADD"
    },
    "5534": {
      "op": "MLOAD"
    },
    "5535": {
      "op": "ISZERO"
    },
    "5536": {
      "op": "ISZERO"
    },
    "5537": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5540": {
      "op": "DUP4"
    },
    "5541": {
      "op": "ADD"
    },
    "5542": {
      "op": "MSTORE"
    },
    "5543": {
      "op": "SWAP10"
    },
    "5544": {
      "op": "SWAP9"
    },
    "5545": {
      "op": "POP"
    },
    "5546": {
      "op": "POP"
    },
    "5547": {
      "op": "POP"
    },
    "5548": {
      "op": "POP"
    },
    "5549": {
      "op": "POP"
    },
    "5550": {
      "op": "POP"
    },
    "5551": {
      "op": "POP"
    },
    "5552": {
      "op": "POP"
    },
    "5553": {
      "op": "POP"
    },
    "5554": {
      "jump": "o",
      "op": "JUMP"
    },
    "5555": {
      "op": "JUMPDEST"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5558": {
      "op": "DUP3"
    },
    "5559": {
      "op": "GT"
    },
    "5560": {
      "op": "ISZERO"
    },
    "5561": {
      "op": "PUSH2",
      "value": "0x15FD"
    },
    "5564": {
      "op": "JUMPI"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5567": {
      "op": "DUP2"
    },
    "5568": {
      "op": "DUP2"
    },
    "5569": {
      "op": "MSTORE"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5572": {
      "op": "DUP2"
    },
    "5573": {
      "op": "KECCAK256"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5576": {
      "op": "DUP6"
    },
    "5577": {
      "op": "ADD"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5580": {
      "op": "SHR"
    },
    "5581": {
      "op": "DUP2"
    },
    "5582": {
      "op": "ADD"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5585": {
      "op": "DUP7"
    },
    "5586": {
      "op": "LT"
    },
    "5587": {
      "op": "ISZERO"
    },
    "5588": {
      "op": "PUSH2",
      "value": "0x15DA"
    },
    "5591": {
      "op": "JUMPI"
    },
    "5592": {
      "op": "POP"
    },
    "5593": {
      "op": "DUP1"
    },
    "5594": {
      "op": "JUMPDEST"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5597": {
      "op": "DUP6"
    },
    "5598": {
      "op": "ADD"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5601": {
      "op": "SHR"
    },
    "5602": {
      "op": "DUP3"
    },
    "5603": {
      "op": "ADD"
    },
    "5604": {
      "op": "SWAP2"
    },
    "5605": {
      "op": "POP"
    },
    "5606": {
      "op": "JUMPDEST"
    },
    "5607": {
      "op": "DUP2"
    },
    "5608": {
      "op": "DUP2"
    },
    "5609": {
      "op": "LT"
    },
    "5610": {
      "op": "ISZERO"
    },
    "5611": {
      "op": "PUSH2",
      "value": "0x15F9"
    },
    "5614": {
      "op": "JUMPI"
    },
    "5615": {
      "op": "DUP3"
    },
    "5616": {
      "op": "DUP2"
    },
    "5617": {
      "op": "SSTORE"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5620": {
      "op": "ADD"
    },
    "5621": {
      "op": "PUSH2",
      "value": "0x15E6"
    },
    "5624": {
      "op": "JUMP"
    },
    "5625": {
      "op": "JUMPDEST"
    },
    "5626": {
      "op": "POP"
    },
    "5627": {
      "op": "POP"
    },
    "5628": {
      "op": "POP"
    },
    "5629": {
      "op": "JUMPDEST"
    },
    "5630": {
      "op": "POP"
    },
    "5631": {
      "op": "POP"
    },
    "5632": {
      "op": "POP"
    },
    "5633": {
      "jump": "o",
      "op": "JUMP"
    },
    "5634": {
      "op": "JUMPDEST"
    },
    "5635": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5644": {
      "op": "DUP4"
    },
    "5645": {
      "op": "GT"
    },
    "5646": {
      "op": "ISZERO"
    },
    "5647": {
      "op": "PUSH2",
      "value": "0x161A"
    },
    "5650": {
      "op": "JUMPI"
    },
    "5651": {
      "op": "PUSH2",
      "value": "0x161A"
    },
    "5654": {
      "op": "PUSH2",
      "value": "0x105C"
    },
    "5657": {
      "jump": "i",
      "op": "JUMP"
    },
    "5658": {
      "op": "JUMPDEST"
    },
    "5659": {
      "op": "PUSH2",
      "value": "0x162E"
    },
    "5662": {
      "op": "DUP4"
    },
    "5663": {
      "op": "PUSH2",
      "value": "0x1628"
    },
    "5666": {
      "op": "DUP4"
    },
    "5667": {
      "op": "SLOAD"
    },
    "5668": {
      "op": "PUSH2",
      "value": "0x1400"
    },
    "5671": {
      "jump": "i",
      "op": "JUMP"
    },
    "5672": {
      "op": "JUMPDEST"
    },
    "5673": {
      "op": "DUP4"
    },
    "5674": {
      "op": "PUSH2",
      "value": "0x15B3"
    },
    "5677": {
      "jump": "i",
      "op": "JUMP"
    },
    "5678": {
      "op": "JUMPDEST"
    },
    "5679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5683": {
      "op": "DUP5"
    },
    "5684": {
      "op": "GT"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5687": {
      "op": "DUP2"
    },
    "5688": {
      "op": "EQ"
    },
    "5689": {
      "op": "PUSH2",
      "value": "0x1662"
    },
    "5692": {
      "op": "JUMPI"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5695": {
      "op": "DUP6"
    },
    "5696": {
      "op": "ISZERO"
    },
    "5697": {
      "op": "PUSH2",
      "value": "0x164A"
    },
    "5700": {
      "op": "JUMPI"
    },
    "5701": {
      "op": "POP"
    },
    "5702": {
      "op": "DUP4"
    },
    "5703": {
      "op": "DUP3"
    },
    "5704": {
      "op": "ADD"
    },
    "5705": {
      "op": "CALLDATALOAD"
    },
    "5706": {
      "op": "JUMPDEST"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5709": {
      "op": "NOT"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5712": {
      "op": "DUP8"
    },
    "5713": {
      "op": "SWAP1"
    },
    "5714": {
      "op": "SHL"
    },
    "5715": {
      "op": "SHR"
    },
    "5716": {
      "op": "NOT"
    },
    "5717": {
      "op": "AND"
    },
    "5718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5720": {
      "op": "DUP7"
    },
    "5721": {
      "op": "SWAP1"
    },
    "5722": {
      "op": "SHL"
    },
    "5723": {
      "op": "OR"
    },
    "5724": {
      "op": "DUP4"
    },
    "5725": {
      "op": "SSTORE"
    },
    "5726": {
      "op": "PUSH2",
      "value": "0x16BC"
    },
    "5729": {
      "op": "JUMP"
    },
    "5730": {
      "op": "JUMPDEST"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5733": {
      "op": "DUP4"
    },
    "5734": {
      "op": "DUP2"
    },
    "5735": {
      "op": "MSTORE"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5738": {
      "op": "SWAP1"
    },
    "5739": {
      "op": "KECCAK256"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5742": {
      "op": "NOT"
    },
    "5743": {
      "op": "DUP7"
    },
    "5744": {
      "op": "AND"
    },
    "5745": {
      "op": "SWAP1"
    },
    "5746": {
      "op": "DUP4"
    },
    "5747": {
      "op": "JUMPDEST"
    },
    "5748": {
      "op": "DUP3"
    },
    "5749": {
      "op": "DUP2"
    },
    "5750": {
      "op": "LT"
    },
    "5751": {
      "op": "ISZERO"
    },
    "5752": {
      "op": "PUSH2",
      "value": "0x1693"
    },
    "5755": {
      "op": "JUMPI"
    },
    "5756": {
      "op": "DUP7"
    },
    "5757": {
      "op": "DUP6"
    },
    "5758": {
      "op": "ADD"
    },
    "5759": {
      "op": "CALLDATALOAD"
    },
    "5760": {
      "op": "DUP3"
    },
    "5761": {
      "op": "SSTORE"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5764": {
      "op": "SWAP5"
    },
    "5765": {
      "op": "DUP6"
    },
    "5766": {
      "op": "ADD"
    },
    "5767": {
      "op": "SWAP5"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5770": {
      "op": "SWAP1"
    },
    "5771": {
      "op": "SWAP3"
    },
    "5772": {
      "op": "ADD"
    },
    "5773": {
      "op": "SWAP2"
    },
    "5774": {
      "op": "ADD"
    },
    "5775": {
      "op": "PUSH2",
      "value": "0x1673"
    },
    "5778": {
      "op": "JUMP"
    },
    "5779": {
      "op": "JUMPDEST"
    },
    "5780": {
      "op": "POP"
    },
    "5781": {
      "op": "DUP7"
    },
    "5782": {
      "op": "DUP3"
    },
    "5783": {
      "op": "LT"
    },
    "5784": {
      "op": "ISZERO"
    },
    "5785": {
      "op": "PUSH2",
      "value": "0x16B0"
    },
    "5788": {
      "op": "JUMPI"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5791": {
      "op": "NOT"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5794": {
      "op": "DUP9"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5797": {
      "op": "SHL"
    },
    "5798": {
      "op": "AND"
    },
    "5799": {
      "op": "SHR"
    },
    "5800": {
      "op": "NOT"
    },
    "5801": {
      "op": "DUP5"
    },
    "5802": {
      "op": "DUP8"
    },
    "5803": {
      "op": "ADD"
    },
    "5804": {
      "op": "CALLDATALOAD"
    },
    "5805": {
      "op": "AND"
    },
    "5806": {
      "op": "DUP2"
    },
    "5807": {
      "op": "SSTORE"
    },
    "5808": {
      "op": "JUMPDEST"
    },
    "5809": {
      "op": "POP"
    },
    "5810": {
      "op": "POP"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5813": {
      "op": "DUP6"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5816": {
      "op": "SHL"
    },
    "5817": {
      "op": "ADD"
    },
    "5818": {
      "op": "DUP4"
    },
    "5819": {
      "op": "SSTORE"
    },
    "5820": {
      "op": "JUMPDEST"
    },
    "5821": {
      "op": "POP"
    },
    "5822": {
      "op": "POP"
    },
    "5823": {
      "op": "POP"
    },
    "5824": {
      "op": "POP"
    },
    "5825": {
      "op": "POP"
    },
    "5826": {
      "jump": "o",
      "op": "JUMP"
    },
    "5827": {
      "op": "JUMPDEST"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5830": {
      "op": "DUP2"
    },
    "5831": {
      "op": "MSTORE"
    },
    "5832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5834": {
      "op": "PUSH2",
      "value": "0x16D7"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5839": {
      "op": "DUP4"
    },
    "5840": {
      "op": "ADD"
    },
    "5841": {
      "op": "DUP8"
    },
    "5842": {
      "op": "DUP10"
    },
    "5843": {
      "op": "PUSH2",
      "value": "0x14BC"
    },
    "5846": {
      "jump": "i",
      "op": "JUMP"
    },
    "5847": {
      "op": "JUMPDEST"
    },
    "5848": {
      "op": "DUP3"
    },
    "5849": {
      "op": "DUP2"
    },
    "5850": {
      "op": "SUB"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5853": {
      "op": "DUP5"
    },
    "5854": {
      "op": "ADD"
    },
    "5855": {
      "op": "MSTORE"
    },
    "5856": {
      "op": "PUSH2",
      "value": "0x16EA"
    },
    "5859": {
      "op": "DUP2"
    },
    "5860": {
      "op": "DUP7"
    },
    "5861": {
      "op": "DUP9"
    },
    "5862": {
      "op": "PUSH2",
      "value": "0x14BC"
    },
    "5865": {
      "jump": "i",
      "op": "JUMP"
    },
    "5866": {
      "op": "JUMPDEST"
    },
    "5867": {
      "op": "SWAP2"
    },
    "5868": {
      "op": "POP"
    },
    "5869": {
      "op": "POP"
    },
    "5870": {
      "op": "DUP3"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5873": {
      "op": "DUP4"
    },
    "5874": {
      "op": "ADD"
    },
    "5875": {
      "op": "MSTORE"
    },
    "5876": {
      "op": "SWAP7"
    },
    "5877": {
      "op": "SWAP6"
    },
    "5878": {
      "op": "POP"
    },
    "5879": {
      "op": "POP"
    },
    "5880": {
      "op": "POP"
    },
    "5881": {
      "op": "POP"
    },
    "5882": {
      "op": "POP"
    },
    "5883": {
      "op": "POP"
    },
    "5884": {
      "jump": "o",
      "op": "JUMP"
    },
    "5885": {
      "op": "JUMPDEST"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5888": {
      "op": "DUP2"
    },
    "5889": {
      "op": "MSTORE"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5892": {
      "op": "PUSH2",
      "value": "0x1711"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5897": {
      "op": "DUP4"
    },
    "5898": {
      "op": "ADD"
    },
    "5899": {
      "op": "DUP10"
    },
    "5900": {
      "op": "DUP12"
    },
    "5901": {
      "op": "PUSH2",
      "value": "0x14BC"
    },
    "5904": {
      "jump": "i",
      "op": "JUMP"
    },
    "5905": {
      "op": "JUMPDEST"
    },
    "5906": {
      "op": "DUP3"
    },
    "5907": {
      "op": "DUP2"
    },
    "5908": {
      "op": "SUB"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5911": {
      "op": "DUP5"
    },
    "5912": {
      "op": "ADD"
    },
    "5913": {
      "op": "MSTORE"
    },
    "5914": {
      "op": "PUSH2",
      "value": "0x1724"
    },
    "5917": {
      "op": "DUP2"
    },
    "5918": {
      "op": "DUP9"
    },
    "5919": {
      "op": "DUP11"
    },
    "5920": {
      "op": "PUSH2",
      "value": "0x14BC"
    },
    "5923": {
      "jump": "i",
      "op": "JUMP"
    },
    "5924": {
      "op": "JUMPDEST"
    },
    "5925": {
      "op": "SWAP1"
    },
    "5926": {
      "op": "POP"
    },
    "5927": {
      "op": "DUP3"
    },
    "5928": {
      "op": "DUP2"
    },
    "5929": {
      "op": "SUB"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5932": {
      "op": "DUP5"
    },
    "5933": {
      "op": "ADD"
    },
    "5934": {
      "op": "MSTORE"
    },
    "5935": {
      "op": "PUSH2",
      "value": "0x1739"
    },
    "5938": {
      "op": "DUP2"
    },
    "5939": {
      "op": "DUP7"
    },
    "5940": {
      "op": "DUP9"
    },
    "5941": {
      "op": "PUSH2",
      "value": "0x14BC"
    },
    "5944": {
      "jump": "i",
      "op": "JUMP"
    },
    "5945": {
      "op": "JUMPDEST"
    },
    "5946": {
      "op": "SWAP2"
    },
    "5947": {
      "op": "POP"
    },
    "5948": {
      "op": "POP"
    },
    "5949": {
      "op": "DUP3"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5952": {
      "op": "DUP4"
    },
    "5953": {
      "op": "ADD"
    },
    "5954": {
      "op": "MSTORE"
    },
    "5955": {
      "op": "SWAP9"
    },
    "5956": {
      "op": "SWAP8"
    },
    "5957": {
      "op": "POP"
    },
    "5958": {
      "op": "POP"
    },
    "5959": {
      "op": "POP"
    },
    "5960": {
      "op": "POP"
    },
    "5961": {
      "op": "POP"
    },
    "5962": {
      "op": "POP"
    },
    "5963": {
      "op": "POP"
    },
    "5964": {
      "op": "POP"
    },
    "5965": {
      "jump": "o",
      "op": "JUMP"
    },
    "5966": {
      "op": "JUMPDEST"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5969": {
      "op": "DUP2"
    },
    "5970": {
      "op": "MSTORE"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5973": {
      "op": "PUSH2",
      "value": "0x1762"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5978": {
      "op": "DUP4"
    },
    "5979": {
      "op": "ADD"
    },
    "5980": {
      "op": "DUP5"
    },
    "5981": {
      "op": "DUP7"
    },
    "5982": {
      "op": "PUSH2",
      "value": "0x14BC"
    },
    "5985": {
      "jump": "i",
      "op": "JUMP"
    },
    "5986": {
      "op": "JUMPDEST"
    },
    "5987": {
      "op": "SWAP5"
    },
    "5988": {
      "op": "SWAP4"
    },
    "5989": {
      "op": "POP"
    },
    "5990": {
      "op": "POP"
    },
    "5991": {
      "op": "POP"
    },
    "5992": {
      "op": "POP"
    },
    "5993": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "76be879c90b2e8cfe1c702324f317295d054374b",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/IDepositContract.sol\";\nimport \"../interfaces/mocks/ISSVNetwork.sol\";\nimport \"./SSVETH.sol\";\n\n/** this contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals.\n * By using custom errors instead, we don't need to use up storage space on the `require`'s revert string messages.\n * This also allows developers and users to see customizable output values when the custom error is invoked */\nerror StakingPool__CantStakeZeroAmount(uint valueSent);\nerror StakingPool__OnlyWhitelistAddress(\n    address caller,\n    address whitelistedAddress\n);\n\ncontract StakingPool is Ownable, ReentrancyGuard {\n    address public WhitelistKeyGenerator;\n    address public WITHDRAWAL_ADDRESS;\n    IDepositContract immutable DepositContract;\n    SSVETH public ssvETH;\n    uint256 public immutable VALIDATOR_AMOUNT = 32 * 1e18;\n    address public SSV_TOKEN_ADDR;\n    address public SSV_CONTRACT_ADDR;\n    uint32[4] OperatorIDs;\n    bytes[] public Validators;\n    // address public Oracle_address;\n\n    uint256 private beaconRewards;\n    uint256 private executionRewards;\n\n    mapping(address => uint256) private userStake;\n\n    event UserStaked(address user_address, uint256 amount);\n    event PubKeyDeposited(bytes pubkey);\n    event OperatorIDsChanged(uint32[4] newOperators);\n    event SharePriceUpdated(uint256 newPrice);\n    event KeySharesDeposited(\n        bytes pubkey,\n        bytes sharesPublicKeys,\n        uint256 amount\n    );\n\n    constructor(\n        address keyGenerator,\n        address depositAddress,\n        address withdrawal,\n        address ssv_contract,\n        address ssv_token,\n        uint32[4] memory ids\n    ) {\n        WITHDRAWAL_ADDRESS = withdrawal;\n        WhitelistKeyGenerator = keyGenerator;\n        DepositContract = IDepositContract(depositAddress);\n        SSVETH _ssvETH = new SSVETH();\n        ssvETH = SSVETH(address(_ssvETH));\n        SSV_CONTRACT_ADDR = ssv_contract;\n        SSV_TOKEN_ADDR = ssv_token;\n        OperatorIDs = ids;\n    }\n\n    /**\n     * @notice called when the contract receives eth\n     */\n    receive() external payable {\n        updateExecutionRewards(msg.value);\n    }\n\n    /**\n     * @notice Get operator ids, check operators here https://explorer.ssv.network/\n     */\n    function getOperators() public view returns (uint32[4] memory) {\n        return OperatorIDs;\n    }\n\n    /**\n     * @notice Get validators array\n     */\n    function getValidators() public view returns (bytes[] memory) {\n        return Validators;\n    }\n\n    /**\n     * @notice Get user's staked amount\n     */\n    function getUserStake(address _userAddress) public view returns (uint256) {\n        return userStake[_userAddress];\n    }\n\n    /**\n     * @notice Get share price\n     */\n    function getShareprice() public view returns (uint256) {\n        uint256 _sharePrice = ssvETH.sharePrice();\n        return _sharePrice;\n    }\n\n    /**\n     * @notice Get beacon rewards\n     */\n    function getBeaconRewards() public view returns (uint256) {\n        return beaconRewards;\n    }\n\n    /**\n     * @notice Get execution rewards\n     */\n    function getExecutionRewards() public view returns (uint256) {\n        return executionRewards;\n    }\n\n    /**\n     * @dev Update operators\n     * @param _newOperators: Array of the the new operators Ids\n     */\n    function updateOperators(uint32[4] memory _newOperators) public onlyOwner {\n        OperatorIDs = _newOperators;\n        emit OperatorIDsChanged(_newOperators);\n    }\n\n    /**\n     * @dev Update share price of the staking pool\n     * @param _newBeaconRewards: The new beacon rewards amount\n     */\n    function updateBeaconRewards(uint256 _newBeaconRewards) external onlyOwner {\n        beaconRewards = _newBeaconRewards;\n        uint256 _newSharePrice = (beaconRewards +\n            executionRewards +\n            (Validators.length * 32)) / (Validators.length * 32);\n        updateSharePrice(_newSharePrice);\n    }\n\n    /**\n     * @notice Stake tokens\n     */\n\n    function stake() public payable {\n        /** Ensuring that the caller has passed atleast some value to the function/contract. \n        This contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals */\n        if (msg.value <= 0) {\n            revert StakingPool__CantStakeZeroAmount(msg.value);\n        }\n        uint256 amount_minted = (msg.value * ssvETH.sharePrice()) / 1e18;\n        ssvETH.mint(msg.sender, amount_minted);\n        emit UserStaked(msg.sender, msg.value);\n        userStake[msg.sender] += msg.value;\n    }\n\n    /**\n     * @notice Unstake tokens\n     * @param _amount: Amount to be unstaked\n     */\n    function unStake(uint256 _amount) public {\n        ssvETH.transferFrom(msg.sender, address(this), _amount);\n        uint256 _amount_to_transfer = (_amount / ssvETH.sharePrice()) * 1e18;\n        payable(msg.sender).transfer(_amount_to_transfer);\n        userStake[msg.sender] -= _amount;\n    }\n\n    /**\n     * @notice Deposit a validator to the deposit contract\n     * @param _pubkey: Public key of the validator\n     * @param _withdrawal_credentials: Withdrawal credentials of the validator\n     * @param _signature: Signature of the deposit data\n     * @param _deposit_data_root: Root of the deposit data\n     */\n    function depositValidator(\n        bytes calldata _pubkey,\n        bytes calldata _withdrawal_credentials,\n        bytes calldata _signature,\n        bytes32 _deposit_data_root\n    ) external {\n        // Deposit the validator to the deposit contract\n        DepositContract.deposit{value: VALIDATOR_AMOUNT}(\n            _pubkey,\n            _withdrawal_credentials,\n            _signature,\n            _deposit_data_root\n        );\n        // Emit an event to log the deposit of the public key\n        emit PubKeyDeposited(_pubkey);\n    }\n\n    /**\n     * @notice Deposit shares for a validator\n     * @param _pubkey: Public key of the validator\n     * @param _operatorIds: IDs of the validator's operators\n     * @param _shares: Public keys of the shares\n     * @param _amount: Amount of tokens to be deposited\n     * @param _cluster: Latest Cluster information\n     * @dev Callable by the whitelisted address\n     */\n    function depositShares(\n        bytes calldata _pubkey,\n        uint64[] calldata _operatorIds,\n        bytes calldata _shares,\n        uint256 _amount,\n        ISSVNetworkCore.Cluster memory _cluster\n    ) external {\n        /* Check if the message sender is the whitelisted address\n         * This contract utilizes custom errors to optimize gas usage, instead of normal `require` conditionals */\n        if (msg.sender != WhitelistKeyGenerator) {\n            revert StakingPool__OnlyWhitelistAddress(\n                msg.sender,\n                WhitelistKeyGenerator\n            );\n        }\n        // Approve the transfer of tokens to the SSV contract\n        IERC20(SSV_TOKEN_ADDR).approve(SSV_CONTRACT_ADDR, _amount);\n        // Register the validator and deposit the shares\n        ISSVNetwork(SSV_CONTRACT_ADDR).registerValidator(\n            _pubkey,\n            _operatorIds,\n            _shares,\n            _amount,\n            _cluster\n        );\n        // Add the public key to the list of validators\n        Validators.push(_pubkey);\n        // Emit an event to log the deposit of shares\n        emit KeySharesDeposited(_pubkey, _shares, _amount);\n    }\n\n    /**\n     * @notice update execution rewards\n     * @param _newExecutionRewards:  Execution rewards amount added\n     */\n    function updateExecutionRewards(uint256 _newExecutionRewards) internal {\n        executionRewards += _newExecutionRewards;\n    }\n\n    /**\n     * @dev Update share price of the staking pool\n     * @param _newSharePrice: The new share price amount\n     */\n    function updateSharePrice(uint256 _newSharePrice) internal {\n        ssvETH.changeSharePrice(_newSharePrice);\n        emit SharePriceUpdated(_newSharePrice);\n    }\n}\n",
  "sourceMap": "829:7322:13:-:0;;;1083:9;1039:53;;1711:536;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:2;719:10:7;936:18:2;:32::i;:::-;1716:1:3;1821:22;;1916:18:13;:31;;-1:-1:-1;;;;;1916:31:13;;;-1:-1:-1;;;;;;1916:31:13;;;;;;;1957:21;:36;;;;;;;;;;;;;2003:50;;;;2080:12;;1916:18;;2080:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2102:6:13;:33;;-1:-1:-1;;;;;2102:33:13;;;-1:-1:-1;;;;;;2102:33:13;;;;;;2145:17;:32;;;;;;;;;;;2187:14;:26;;;;;;;;;;;;2063:29;;-1:-1:-1;2223:17:13;;:11;;2237:3;;2223:17;:::i;:::-;;1906:341;1711:536;;;;;;829:7322;;2433:187:2;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;829:7322:13:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:7322:13;;;-1:-1:-1;829:7322:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:17;93:13;;-1:-1:-1;;;;;135:31:17;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:167;406:13;;459:10;448:22;;438:33;;428:61;;485:1;482;475:12;500:1250;637:6;645;653;661;669;677;708:3;752:2;740:9;731:7;727:23;723:32;720:52;;;768:1;765;758:12;720:52;791:40;821:9;791:40;:::i;:::-;781:50;;850:2;871:49;916:2;905:9;901:18;871:49;:::i;:::-;861:59;;939:49;984:2;973:9;969:18;939:49;:::i;:::-;929:59;;1007:49;1052:2;1041:9;1037:18;1007:49;:::i;:::-;997:59;;1075:50;1120:3;1109:9;1105:19;1075:50;:::i;:::-;1065:60;;1169:7;1163:3;1152:9;1148:19;1144:33;1134:61;;1191:1;1188;1181:12;1134:61;1224:2;1218:9;1266:3;1254:16;;-1:-1:-1;;;;;1285:34:17;;1321:22;;;1282:62;1279:88;;;1347:18;;:::i;:::-;1383:2;1376:22;1447:18;;;;1418:6;1477:19;;;1474:39;;;1509:1;1506;1499:12;1474:39;1548:3;1537:9;1533:19;1561:158;1577:6;1572:3;1569:15;1561:158;;;1643:33;1672:3;1643:33;:::i;:::-;1631:46;;1697:12;;;;1594;;1561:158;;;1565:3;;1738:6;1728:16;;;;;500:1250;;;;;;;;:::o;:::-;829:7322:13;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/StakingPool.sol",
  "type": "contract"
}